{
  "name": "Application",
  "dynamic": true,
  "shortdesc": "The Adobe Illustrator application.",
  "elements": [
    {
      "type": "instance",
      "property": [
        {
          "name": "parent",
          "rwaccess": "readonly",
          "shortdesc": "The object's container.",
          "datatype": {
            "type": "Object"
          }
        },
        {
          "name": "typename",
          "rwaccess": "readonly",
          "shortdesc": "The class name of the object.",
          "datatype": {
            "type": "String"
          }
        },
        {
          "name": "name",
          "rwaccess": "readonly",
          "shortdesc": "The application's name.",
          "datatype": {
            "type": "String"
          }
        },
        {
          "name": "path",
          "rwaccess": "readonly",
          "shortdesc": "Path specification for the application.",
          "datatype": {
            "type": "File"
          }
        },
        {
          "name": "activeDocument",
          "shortdesc": "The active document.",
          "datatype": {
            "type": "Document"
          }
        },
        {
          "name": "version",
          "rwaccess": "readonly",
          "shortdesc": "The version of the Adobe Illustrator application.",
          "datatype": {
            "type": "String"
          }
        },
        {
          "name": "buildNumber",
          "rwaccess": "readonly",
          "shortdesc": "The build number of the Adobe Illustrator application.",
          "datatype": {
            "type": "String"
          }
        },
        {
          "name": "locale",
          "rwaccess": "readonly",
          "shortdesc": "The Locale of the Adobe Illustrator application.",
          "datatype": {
            "type": "String"
          }
        },
        {
          "name": "scriptingVersion",
          "rwaccess": "readonly",
          "shortdesc": "The version of the Scripting plugin.",
          "datatype": {
            "type": "String"
          }
        },
        {
          "name": "freeMemory",
          "rwaccess": "readonly",
          "shortdesc": "The amount of unused memory within the Adobe Illustrator partition.",
          "datatype": {
            "type": "Int32"
          }
        },
        {
          "name": "browserAvailable",
          "rwaccess": "readonly",
          "shortdesc": "Is a web browser available?",
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "selection",
          "shortdesc": "The selection visible to the user.",
          "datatype": {
            "type": "any"
          }
        },
        {
          "name": "visible",
          "rwaccess": "readonly",
          "shortdesc": "Is the application visible.",
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "userInteractionLevel",
          "shortdesc": "What level of interaction with the user should be allowed when handling script commands.",
          "datatype": {
            "type": "UserInteractionLevel"
          }
        },
        {
          "name": "coordinateSystem",
          "shortdesc": "Coordinate System used by script.",
          "datatype": {
            "type": "CoordinateSystem"
          }
        },
        {
          "name": "preferences",
          "rwaccess": "readonly",
          "shortdesc": "Preferences for Illustrator.",
          "datatype": {
            "type": "Preferences"
          }
        },
        {
          "name": "printerList",
          "rwaccess": "readonly",
          "shortdesc": "The list of installed printers.",
          "datatype": {
            "type": "Printer",
            "array": true
          }
        },
        {
          "name": "PPDFileList",
          "rwaccess": "readonly",
          "shortdesc": "The list of PPD files currently available for use. For performance reasons, the PPDFile entry only contains the model name and file spec of each PPD file.",
          "datatype": {
            "type": "PPDFile",
            "array": true
          }
        },
        {
          "name": "printPresetsList",
          "rwaccess": "readonly",
          "shortdesc": "The list of print preset names currently available for use.",
          "datatype": {
            "type": "String",
            "array": true
          }
        },
        {
          "name": "startupPresetsList",
          "rwaccess": "readonly",
          "shortdesc": "The list of presets available for creating a new document.",
          "datatype": {
            "type": "String",
            "array": true
          }
        },
        {
          "name": "PDFPresetsList",
          "rwaccess": "readonly",
          "shortdesc": "The list of PDF preset names currently available for use.",
          "datatype": {
            "type": "String",
            "array": true
          }
        },
        {
          "name": "flattenerPresetsList",
          "rwaccess": "readonly",
          "shortdesc": "The list of flattener style names currently available for use.",
          "datatype": {
            "type": "String",
            "array": true
          }
        },
        {
          "name": "tracingPresetsList",
          "rwaccess": "readonly",
          "shortdesc": "The list of tracing preset names currently available for use.",
          "datatype": {
            "type": "String",
            "array": true
          }
        },
        {
          "name": "colorSettingsList",
          "rwaccess": "readonly",
          "shortdesc": "The list of color settings files currently available for use.",
          "datatype": {
            "type": "File",
            "array": true
          }
        },
        {
          "name": "defaultColorSettings",
          "rwaccess": "readonly",
          "shortdesc": "The default color settings file for the current application locale.",
          "datatype": {
            "type": "File"
          }
        },
        {
          "name": "pasteRemembersLayers",
          "shortdesc": "Does paste operation remember layers structure?",
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "documents",
          "rwaccess": "readonly",
          "shortdesc": "The open documents.",
          "datatype": {
            "type": "Documents"
          }
        },
        {
          "name": "textFonts",
          "rwaccess": "readonly",
          "shortdesc": "Installed fonts.",
          "datatype": {
            "type": "TextFonts"
          }
        }
      ],
      "method": [
        {
          "name": "runAPITest",
          "shortdesc": "Runs API Tests from the TestAPI Plug-in.",
          "parameters": [
            {
              "name": "testName",
              "shortdesc": "Arguments for Running Tests - eg. Name of Test/Suite.",
              "datatype": {
                "type": "String"
              }
            }
          ]
        },
        {
          "name": "aATLoadModel",
          "shortdesc": "Loads the aat model to the editor.",
          "datatype": {
            "type": "String"
          }
        },
        {
          "name": "aATLoadUIExtension",
          "shortdesc": "Loads a UI description as an extension to the editor.",
          "datatype": {
            "type": "String"
          }
        },
        {
          "name": "aATLoadLibExtension",
          "shortdesc": "Loads a session file as an extension to the editor.",
          "datatype": {
            "type": "String"
          }
        },
        {
          "name": "aATExecuteSession",
          "shortdesc": "Executes the active session in the sequencer."
        },
        {
          "name": "aATExecuteSessionFromFile",
          "shortdesc": "Executes the active session in the sequencer.",
          "parameters": [
            {
              "name": "file",
              "shortdesc": "Execute a session file.",
              "datatype": {
                "type": "File"
              }
            }
          ]
        },
        {
          "name": "aATGetEditorDialogFile",
          "shortdesc": "Retrieves a file path to the AAT editor swf.",
          "datatype": {
            "type": "File"
          }
        },
        {
          "name": "getVersionString",
          "shortdesc": "Retrieves a string representing the AAT version.",
          "datatype": {
            "type": "String"
          }
        },
        {
          "name": "aATGetErrorDialogFile",
          "shortdesc": "Retrieves a file path to the AAT error dialog swf.",
          "datatype": {
            "type": "File"
          }
        },
        {
          "name": "aATErrorsExist",
          "shortdesc": "Retrieves a boolean indicating the presence of errors in the last script to execute.",
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "getExecutionOutput",
          "shortdesc": "Retrieves a string containing the results of the last script to execute.",
          "datatype": {
            "type": "String"
          }
        },
        {
          "name": "aATClear",
          "shortdesc": "Clear the sequencer.",
          "datatype": {
            "type": "String"
          }
        },
        {
          "name": "aATGetSession",
          "shortdesc": "Get the active session for the sequncer.",
          "datatype": {
            "type": "String"
          }
        },
        {
          "name": "aATSaveSession",
          "shortdesc": "Saves the active session in the sequencer to a file.",
          "datatype": {
            "type": "String"
          }
        },
        {
          "name": "aATSaveAsSession",
          "shortdesc": "Saves the active session in the sequencer to a new file.",
          "datatype": {
            "type": "String"
          }
        },
        {
          "name": "aATLoadSessionFile",
          "shortdesc": "Loads a session into the sequencer.",
          "datatype": {
            "type": "String"
          }
        },
        {
          "name": "aATAddItem",
          "shortdesc": "Add the specified to the sequencer.",
          "parameters": [
            {
              "name": "sessionIndex",
              "shortdesc": "The index in the session of the top-most sequence for the item to add.",
              "datatype": {
                "type": "Int32"
              }
            },
            {
              "name": "destinationSequenceID",
              "shortdesc": "The UID for the owning sequence.",
              "datatype": {
                "type": "Int32"
              }
            },
            {
              "name": "destinationIndex",
              "shortdesc": "The item UID where to insert.",
              "datatype": {
                "type": "Int32"
              }
            },
            {
              "name": "srcItemIDData",
              "shortdesc": "The item ID of the item to construct.",
              "datatype": {
                "type": "String"
              }
            },
            {
              "name": "type",
              "shortdesc": "The source of the item to construct.",
              "datatype": {
                "type": "String"
              }
            }
          ],
          "datatype": {
            "type": "String"
          }
        },
        {
          "name": "aATMoveItem",
          "shortdesc": "Moves the specified in the sequencer.",
          "parameters": [
            {
              "name": "sessionIndex",
              "shortdesc": "The index in the session of the top-most sequence for the item to move.",
              "datatype": {
                "type": "Int32"
              }
            },
            {
              "name": "moveThisID",
              "shortdesc": "The UID of the item to replace.",
              "datatype": {
                "type": "String"
              }
            },
            {
              "name": "newSessionIndex",
              "shortdesc": "The index in the session of the destination top-most sequence.",
              "datatype": {
                "type": "Int32"
              }
            },
            {
              "name": "destinationSequenceID",
              "shortdesc": "The UID for the owning sequence.",
              "datatype": {
                "type": "String"
              }
            },
            {
              "name": "destinationIndex",
              "shortdesc": "The index where to insert.",
              "datatype": {
                "type": "Int32"
              }
            }
          ],
          "datatype": {
            "type": "String"
          }
        },
        {
          "name": "aATReplaceItem",
          "shortdesc": "Replaces the specified to the sequencer.",
          "parameters": [
            {
              "name": "sessionIndex",
              "shortdesc": "The index in the session of the top-most sequence for the item to add.",
              "datatype": {
                "type": "Int32"
              }
            },
            {
              "name": "replaceThisID",
              "shortdesc": "The UID of the item to replace.",
              "datatype": {
                "type": "Int32"
              }
            },
            {
              "name": "srcItemIDData",
              "shortdesc": "The item ID of the item to construct.",
              "datatype": {
                "type": "String"
              }
            },
            {
              "name": "type",
              "shortdesc": "The source of the item to construct.",
              "datatype": {
                "type": "String"
              }
            }
          ],
          "datatype": {
            "type": "String"
          }
        },
        {
          "name": "aATRemoveItem",
          "shortdesc": "Removes the specified item from the sequencer.",
          "parameters": [
            {
              "name": "sessionIndex",
              "shortdesc": "The index in the session of the top-most sequence for the item to add.",
              "datatype": {
                "type": "Int32"
              }
            },
            {
              "name": "item",
              "shortdesc": "The item UID.",
              "datatype": {
                "type": "String"
              }
            }
          ],
          "datatype": {
            "type": "String"
          }
        },
        {
          "name": "aATDuplicateItem",
          "shortdesc": "Duplicates the specified item(s) from the sequencer.",
          "parameters": [
            {
              "name": "sessionIndex",
              "shortdesc": "The index in the session of the top-most sequence for the item to add.",
              "datatype": {
                "type": "Int32"
              }
            },
            {
              "name": "item",
              "shortdesc": "The item UID(s)",
              "datatype": {
                "type": "String"
              }
            }
          ],
          "datatype": {
            "type": "String"
          }
        },
        {
          "name": "aATEditItem",
          "shortdesc": "Opens the specified item from the sequencer in the item editor.",
          "parameters": [
            {
              "name": "sessionIndex",
              "shortdesc": "The index in the session of the top-most sequence for the item to add.",
              "datatype": {
                "type": "Int32"
              }
            },
            {
              "name": "item",
              "shortdesc": "The item UID.",
              "datatype": {
                "type": "String"
              }
            }
          ],
          "datatype": {
            "type": "String"
          }
        },
        {
          "name": "applyDataToItem",
          "shortdesc": "Applies the data used in the item editor to the item.",
          "parameters": [
            {
              "name": "sessionIndex",
              "shortdesc": "The index in the session of the top-most sequence for the item to edit.",
              "datatype": {
                "type": "Int32"
              }
            },
            {
              "name": "item",
              "shortdesc": "The item UID.",
              "datatype": {
                "type": "String"
              }
            },
            {
              "name": "data",
              "shortdesc": "The data to apply in XML format.",
              "datatype": {
                "type": "String"
              }
            }
          ],
          "datatype": {
            "type": "String"
          }
        },
        {
          "name": "applySingleDataPointToItem",
          "shortdesc": "Applies data to the specified item from the sequencer in the item editor.",
          "parameters": [
            {
              "name": "sessionIndex",
              "shortdesc": "The index in the session of the top-most sequence for the item to add.",
              "datatype": {
                "type": "Int32"
              }
            },
            {
              "name": "item",
              "shortdesc": "The item UID.",
              "datatype": {
                "type": "String"
              }
            },
            {
              "name": "dataID",
              "shortdesc": "The data to apply in XML format.",
              "datatype": {
                "type": "String"
              }
            },
            {
              "name": "data",
              "shortdesc": "The data to apply in XML format.",
              "datatype": {
                "type": "String"
              }
            }
          ],
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "translateString",
          "shortdesc": "Returns a string translated from the key and source data passed in.",
          "parameters": [
            {
              "name": "key",
              "shortdesc": "The string to translate.",
              "datatype": {
                "type": "String"
              }
            },
            {
              "name": "source",
              "shortdesc": "The plugin name from the source of the key.",
              "datatype": {
                "type": "String"
              }
            }
          ],
          "datatype": {
            "type": "String"
          }
        },
        {
          "name": "aATFileSaveDialog",
          "shortdesc": "Prompts the user to save a file or choose a file or directory and returns a relative path string to the file.",
          "parameters": [
            {
              "name": "path",
              "shortdesc": "The path relative to the folder specified by Relative.",
              "datatype": {
                "type": "String"
              }
            },
            {
              "name": "relative",
              "shortdesc": "The current relative path token.",
              "datatype": {
                "type": "String"
              }
            },
            {
              "name": "type",
              "shortdesc": "The type of dialog to show in string format.",
              "datatype": {
                "type": "String"
              }
            }
          ],
          "datatype": {
            "type": "String"
          }
        },
        {
          "name": "aATFileRelativeChanged",
          "shortdesc": "Switches a files relative token and path.",
          "parameters": [
            {
              "name": "path",
              "shortdesc": "The path relative to the folder specified by Relative.",
              "datatype": {
                "type": "String"
              }
            },
            {
              "name": "relative",
              "shortdesc": "The current relative path token.",
              "datatype": {
                "type": "String"
              }
            },
            {
              "name": "newRelative",
              "shortdesc": "The new relative path token.",
              "datatype": {
                "type": "String"
              }
            }
          ],
          "datatype": {
            "type": "String"
          }
        },
        {
          "name": "aATGetListOfRelativePaths",
          "shortdesc": "Gets an XML string listing the relative paths and the UI strings to display them.",
          "datatype": {
            "type": "String"
          }
        },
        {
          "name": "cut",
          "shortdesc": "Cut current selection to the clipboard."
        },
        {
          "name": "copy",
          "shortdesc": "Copy current selection to the clipboard."
        },
        {
          "name": "paste",
          "shortdesc": "Paste clipboard into the current document."
        },
        {
          "name": "undo",
          "shortdesc": "Undo the last transaction."
        },
        {
          "name": "redo",
          "shortdesc": "Redo the last transaction."
        },
        {
          "name": "doScript",
          "shortdesc": "Play an action from the Actions Palette.",
          "parameters": [
            {
              "name": "action",
              "shortdesc": "The name of the action to play (note that the case of letters in the Action name is important and must match the case of the name in the Actions palette)",
              "datatype": {
                "type": "String"
              }
            },
            {
              "name": "from",
              "shortdesc": "The name of the action set containing the action being played (note that the case of letters in the Action Set name is important and must match the case of the name in the Actions palette)",
              "datatype": {
                "type": "String"
              }
            },
            {
              "name": "dialogs",
              "optional": true,
              "shortdesc": "Are dialog boxes associated with the action to be presented?",
              "datatype": {
                "type": "Boolean",
                "value": true
              }
            }
          ]
        },
        {
          "name": "executeMenuCommand",
          "shortdesc": "Executes a menu command using the menu shortcut string.",
          "parameters": [
            {
              "name": "menuCommandString",
              "shortdesc": "Menu command shortcut.",
              "datatype": {
                "type": "String"
              }
            }
          ]
        },
        {
          "name": "getPresetFileOfType",
          "shortdesc": "Given a preset type, returns the full path to the application's default document profile for the type.",
          "parameters": [
            {
              "name": "presetType",
              "shortdesc": "The preset type.",
              "datatype": {
                "type": "DocumentPresetType"
              }
            }
          ],
          "datatype": {
            "type": "File"
          }
        },
        {
          "name": "loadAction",
          "shortdesc": "Load an action into action palette.",
          "parameters": [
            {
              "name": "actionFilePath",
              "shortdesc": "The path on the system of the action file to be loaded.",
              "datatype": {
                "type": "File"
              }
            }
          ]
        },
        {
          "name": "unloadAction",
          "shortdesc": "Unloads an action into action palette.",
          "parameters": [
            {
              "name": "setName",
              "shortdesc": "Name of the set to be unloaded.",
              "datatype": {
                "type": "String"
              }
            },
            {
              "name": "actionName",
              "shortdesc": "Name of the action to be unloaded.",
              "datatype": {
                "type": "String"
              }
            }
          ]
        },
        {
          "name": "sendScriptMessage",
          "shortdesc": "Sends the script message to the required plugin.",
          "parameters": [
            {
              "name": "pluginName",
              "shortdesc": "Plugin to which message needs to be sent.",
              "datatype": {
                "type": "String"
              }
            },
            {
              "name": "messageSelector",
              "shortdesc": "Functionality that is to be executed.",
              "datatype": {
                "type": "String"
              }
            },
            {
              "name": "inputString",
              "shortdesc": "Pass any data encoded in a string.",
              "datatype": {
                "type": "String"
              }
            }
          ],
          "datatype": {
            "type": "String"
          }
        },
        {
          "name": "getPresetSettings",
          "shortdesc": "Given a preset name, tries and retrieves the settings from the preset template.",
          "parameters": [
            {
              "name": "preset",
              "shortdesc": "The name of the preset.",
              "datatype": {
                "type": "String"
              }
            }
          ],
          "datatype": {
            "type": "DocumentPreset"
          }
        },
        {
          "name": "redraw",
          "shortdesc": "Force Illustrator to redraw its window(s)"
        },
        {
          "name": "invertMatrix",
          "shortdesc": "Invert a matrix.",
          "parameters": [
            {
              "name": "matrix",
              "shortdesc": "The matrix to invert.",
              "datatype": {
                "type": "Matrix"
              }
            }
          ],
          "datatype": {
            "type": "Matrix"
          }
        },
        {
          "name": "isSingularMatrix",
          "shortdesc": "Tests if a matrix is singular (cannot be inverted)",
          "parameters": [
            {
              "name": "matrix",
              "shortdesc": "The matrix to check.",
              "datatype": {
                "type": "Matrix"
              }
            }
          ],
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "concatenateTranslationMatrix",
          "shortdesc": "Concatenate a translation to a transformation matrix.",
          "parameters": [
            {
              "name": "matrix",
              "shortdesc": "The matrix that is to be added to.",
              "datatype": {
                "type": "Matrix"
              }
            },
            {
              "name": "deltaX",
              "optional": true,
              "shortdesc": "Horizontal transformation.",
              "datatype": {
                "type": "Number",
                "value": 0
              }
            },
            {
              "name": "deltaY",
              "optional": true,
              "shortdesc": "Vertical transformation.",
              "datatype": {
                "type": "Number",
                "value": 0
              }
            }
          ],
          "datatype": {
            "type": "Matrix"
          }
        },
        {
          "name": "concatenateScaleMatrix",
          "shortdesc": "Concatenate a scale matrix to a transformation matrix.",
          "parameters": [
            {
              "name": "matrix",
              "shortdesc": "The matrix that is to be added to.",
              "datatype": {
                "type": "Matrix"
              }
            },
            {
              "name": "scaleX",
              "optional": true,
              "shortdesc": "Horizontal scaling factor expressed as a percentage (100 = 100%)",
              "datatype": {
                "type": "Number",
                "value": 100
              }
            },
            {
              "name": "scaleY",
              "optional": true,
              "shortdesc": "Vertical scaling factor expressed as a percentage (100 = 100%)",
              "datatype": {
                "type": "Number",
                "value": 100
              }
            }
          ],
          "datatype": {
            "type": "Matrix"
          }
        },
        {
          "name": "concatenateRotationMatrix",
          "shortdesc": "Concatenate a rotation matrix to a transformation matrix.",
          "parameters": [
            {
              "name": "matrix",
              "shortdesc": "The matrix that is to be added to.",
              "datatype": {
                "type": "Matrix"
              }
            },
            {
              "name": "angle",
              "shortdesc": "Angle of rotation (in degrees)",
              "datatype": {
                "type": "Number"
              }
            }
          ],
          "datatype": {
            "type": "Matrix"
          }
        },
        {
          "name": "concatenateMatrix",
          "shortdesc": "Concatenate two transformation matrices.",
          "parameters": [
            {
              "name": "matrix",
              "shortdesc": "The matrix that is to be added to.",
              "datatype": {
                "type": "Matrix"
              }
            },
            {
              "name": "secondMatrix",
              "shortdesc": "Second transformation matrix.",
              "datatype": {
                "type": "Matrix"
              }
            }
          ],
          "datatype": {
            "type": "Matrix"
          }
        },
        {
          "name": "isEqualMatrix",
          "shortdesc": "Compares two matrices for equality.",
          "parameters": [
            {
              "name": "matrix",
              "shortdesc": "First transformation matrix to compare.",
              "datatype": {
                "type": "Matrix"
              }
            },
            {
              "name": "secondMatrix",
              "shortdesc": "Second transformation matrix.",
              "datatype": {
                "type": "Matrix"
              }
            }
          ],
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "getIdentityMatrix",
          "shortdesc": "Returns an identity matrix.",
          "datatype": {
            "type": "Matrix"
          }
        },
        {
          "name": "getRotationMatrix",
          "shortdesc": "Returns a rotation transformation matrix.",
          "parameters": [
            {
              "name": "angle",
              "optional": true,
              "shortdesc": "Angle of rotation (in degrees)",
              "datatype": {
                "type": "Number",
                "value": 0
              }
            }
          ],
          "datatype": {
            "type": "Matrix"
          }
        },
        {
          "name": "getScaleMatrix",
          "shortdesc": "Returns a scale transformation matrix.",
          "parameters": [
            {
              "name": "scaleX",
              "optional": true,
              "shortdesc": "Horizontal scaling factor expressed as a percentage (100 = 100%)",
              "datatype": {
                "type": "Number",
                "value": 100
              }
            },
            {
              "name": "scaleY",
              "optional": true,
              "shortdesc": "Vertical scaling factor expressed as a percentage (100 = 100%)",
              "datatype": {
                "type": "Number",
                "value": 100
              }
            }
          ],
          "datatype": {
            "type": "Matrix"
          }
        },
        {
          "name": "getTranslationMatrix",
          "shortdesc": "Returns a translation matrix.",
          "parameters": [
            {
              "name": "deltaX",
              "optional": true,
              "shortdesc": "Horizontal transformation.",
              "datatype": {
                "type": "Number",
                "value": 0
              }
            },
            {
              "name": "deltaY",
              "optional": true,
              "shortdesc": "Vertical transformation.",
              "datatype": {
                "type": "Number",
                "value": 0
              }
            }
          ],
          "datatype": {
            "type": "Matrix"
          }
        },
        {
          "name": "open",
          "shortdesc": "Open the specified document file.",
          "parameters": [
            {
              "name": "file",
              "shortdesc": "The file to be opened.",
              "datatype": {
                "type": "File"
              }
            },
            {
              "name": "documentColorSpace",
              "optional": true,
              "shortdesc": "Choose color space only for documents saved with multiple color models (pre-Illustrator 9)",
              "datatype": {
                "type": "DocumentColorSpace"
              }
            },
            {
              "name": "options",
              "optional": true,
              "shortdesc": "Options for opening a particular type of file.",
              "datatype": {
                "type": "any"
              }
            }
          ],
          "datatype": {
            "type": "Document"
          }
        },
        {
          "name": "dumpPGFFile",
          "shortdesc": "Dump the PGF portion of ai file to txt file.",
          "parameters": [
            {
              "name": "file",
              "shortdesc": "The AI file to be opened.",
              "datatype": {
                "type": "File"
              }
            },
            {
              "name": "documentColorSpace",
              "optional": true,
              "shortdesc": "Choose color space only for documents saved with multiple color models (pre-Illustrator 9)",
              "datatype": {
                "type": "DocumentColorSpace"
              }
            },
            {
              "name": "pGFFile",
              "shortdesc": "Folder to save the output PGF file.",
              "datatype": {
                "type": "File"
              }
            }
          ],
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "quit",
          "shortdesc": "Quit the application."
        },
        {
          "name": "beep"
        },
        {
          "name": "translatePlaceholderText",
          "shortdesc": "Translate the placeholder text to regular text. A method to enter unicode points in hex values.",
          "parameters": [
            {
              "name": "text",
              "shortdesc": "The placeholder text to be translated.",
              "datatype": {
                "type": "String"
              }
            }
          ],
          "datatype": {
            "type": "String"
          }
        },
        {
          "name": "showPresets",
          "shortdesc": "Get presets from the file.",
          "parameters": [
            {
              "name": "fileSpec",
              "shortdesc": "File spec to import from.",
              "datatype": {
                "type": "File"
              }
            }
          ],
          "datatype": {
            "type": "String",
            "array": true
          }
        },
        {
          "name": "loadColorSettings",
          "shortdesc": "Load the color settings from the file. If the file is an empty file spec, the color management will be turned off.",
          "parameters": [
            {
              "name": "fileSpec",
              "shortdesc": "File spec for the color settings.",
              "datatype": {
                "type": "File"
              }
            }
          ]
        },
        {
          "name": "getPPDFileInfo",
          "shortdesc": "Get detailed info from the specified PPD file.",
          "parameters": [
            {
              "name": "name",
              "shortdesc": "The model name of the PPD file.",
              "datatype": {
                "type": "String"
              }
            }
          ],
          "datatype": {
            "type": "PPDFileInfo"
          }
        },
        {
          "name": "getScriptableHelpGroup",
          "shortdesc": "Get the scriptable help group object that represents the search widget in the app bar.",
          "datatype": {
            "type": "any"
          }
        },
        {
          "name": "convertSampleColor",
          "shortdesc": "Converts a sample-component color from one color space to another.",
          "parameters": [
            {
              "name": "sourceColorSpace",
              "shortdesc": "The source color space.",
              "datatype": {
                "type": "ImageColorSpace"
              }
            },
            {
              "name": "sourceColor",
              "shortdesc": "The color to convert, an array of color components. First location of the array should contain alpha if source-has-alpha is true.",
              "datatype": {
                "type": "Number",
                "array": true
              }
            },
            {
              "name": "destColorSpace",
              "shortdesc": "The destination color space.",
              "datatype": {
                "type": "ImageColorSpace"
              }
            },
            {
              "name": "colorConvertPurpose",
              "shortdesc": "The parameter which passes the purpose of conversion.",
              "datatype": {
                "type": "ColorConvertPurpose"
              }
            },
            {
              "name": "sourceHasAlpha",
              "optional": true,
              "shortdesc": "True if alpha channel is present in source color.",
              "datatype": {
                "type": "Boolean",
                "value": false
              }
            },
            {
              "name": "destHasAlpha",
              "optional": true,
              "shortdesc": "True if alpha channel is present in destination color.",
              "datatype": {
                "type": "Boolean",
                "value": false
              }
            }
          ],
          "datatype": {
            "type": "Number",
            "array": true
          }
        },
        {
          "name": "reflectCSAW",
          "shortdesc": "Generate Creative Suite ActionScript Wrappers in specified directory.",
          "parameters": [
            {
              "name": "outputFolder",
              "shortdesc": "Location for the output files.",
              "datatype": {
                "type": "File"
              }
            }
          ]
        },
        {
          "name": "switchWorkspace",
          "shortdesc": "Switches between workspaces.",
          "parameters": [
            {
              "name": "workspaceName",
              "shortdesc": "Workspace Name.",
              "datatype": {
                "type": "String"
              }
            }
          ],
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "deleteWorkspace",
          "shortdesc": "Deletes an existing workspace.",
          "parameters": [
            {
              "name": "workspaceName",
              "shortdesc": "Workspace Name.",
              "datatype": {
                "type": "String"
              }
            }
          ],
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "saveWorkspace",
          "shortdesc": "Saves a new workspace.",
          "parameters": [
            {
              "name": "workspaceName",
              "shortdesc": "Workspace Name.",
              "datatype": {
                "type": "String"
              }
            }
          ],
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "resetWorkspace",
          "shortdesc": "Resets the current workspace.",
          "datatype": {
            "type": "Boolean"
          }
        }
      ]
    }
  ]
}