{
  "name": "TOCStyle",
  "dynamic": true,
  "shortdesc": "A TOC style definition.",
  "elements": [
    {
      "type": "instance",
      "property": [
        {
          "name": "id",
          "rwaccess": "readonly",
          "shortdesc": "The unique ID of the TOCStyle.",
          "datatype": {
            "type": "Number"
          }
        },
        {
          "name": "isValid",
          "rwaccess": "readonly",
          "shortdesc": "Returns true if the object specifier resolves to valid objects.",
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "parent",
          "rwaccess": "readonly",
          "shortdesc": "The parent of the TOCStyle (a Document).",
          "datatype": {
            "type": "Document"
          }
        },
        {
          "name": "index",
          "rwaccess": "readonly",
          "shortdesc": "The index of the TOCStyle within its containing object.",
          "datatype": {
            "type": "Number"
          }
        },
        {
          "name": "tocStyleEntries",
          "rwaccess": "readonly",
          "shortdesc": "A collection TOC style entries.",
          "datatype": {
            "type": "TOCStyleEntries"
          }
        },
        {
          "name": "events",
          "rwaccess": "readonly",
          "shortdesc": "A collection of events.",
          "datatype": {
            "type": "Events"
          }
        },
        {
          "name": "eventListeners",
          "rwaccess": "readonly",
          "shortdesc": "A collection of event listeners.",
          "datatype": {
            "type": "EventListeners"
          }
        },
        {
          "name": "titleStyle",
          "shortdesc": "The paragraph style applied to the TOC title.",
          "datatype": {
            "type": "ParagraphStyle"
          }
        },
        {
          "name": "title",
          "shortdesc": "The TOC title.",
          "datatype": {
            "type": "String"
          }
        },
        {
          "name": "name",
          "shortdesc": "The name of the TOCStyle.",
          "datatype": {
            "type": "String"
          }
        },
        {
          "name": "runIn",
          "shortdesc": "If true, the lowest-level TOC entries are placed on the same line as the previous entry.",
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "includeHidden",
          "shortdesc": "If true, the TOC includes entries from text on hidden layers.",
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "includeBookDocuments",
          "shortdesc": "If true, includes the entire book in the TOC. If false, includes only the TOC entries in the current document. Note: Valid when the current document is part of a book.",
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "createBookmarks",
          "shortdesc": "If true, creates bookmarks for TOC entries.",
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "setStoryDirection",
          "shortdesc": "The table of contents story direction.",
          "datatype": {
            "type": "HorizontalOrVertical"
          }
        },
        {
          "name": "numberedParagraphs",
          "shortdesc": "The format for importing numbered paragraphs into the TOC.",
          "datatype": {
            "type": "NumberedParagraphsOptions"
          }
        },
        {
          "name": "makeAnchor",
          "shortdesc": "If true, make text anchor in source paragraph.",
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "label",
          "shortdesc": "A property that can be set to any string.",
          "datatype": {
            "type": "String"
          }
        },
        {
          "name": "properties",
          "shortdesc": "A property that allows setting of several properties at the same time.",
          "datatype": {
            "type": "Object"
          }
        }
      ],
      "method": [
        {
          "name": "duplicate",
          "shortdesc": "Duplicates the TOCStyle.",
          "datatype": {
            "type": "TOCStyle"
          }
        },
        {
          "name": "remove",
          "shortdesc": "Deletes the TOCStyle."
        },
        {
          "name": "insertLabel",
          "shortdesc": "Sets the label to the value associated with the specified key.",
          "parameters": [
            {
              "name": "key",
              "shortdesc": "The key.",
              "datatype": {
                "type": "String"
              }
            },
            {
              "name": "value",
              "shortdesc": "The value.",
              "datatype": {
                "type": "String"
              }
            }
          ]
        },
        {
          "name": "extractLabel",
          "shortdesc": "Gets the label value associated with the specified key.",
          "parameters": [
            {
              "name": "key",
              "shortdesc": "The key.",
              "datatype": {
                "type": "String"
              }
            }
          ],
          "datatype": {
            "type": "String"
          }
        },
        {
          "name": "toSource",
          "shortdesc": "Generates a string which, if executed, will return the TOCStyle.",
          "datatype": {
            "type": "String"
          }
        },
        {
          "name": "getElements",
          "shortdesc": "Resolves the object specifier, creating an array of object references.",
          "datatype": {
            "type": "TOCStyle",
            "array": true
          }
        },
        {
          "name": "toSpecifier",
          "shortdesc": "Retrieves the object specifier.",
          "datatype": {
            "type": "String"
          }
        },
        {
          "name": "addEventListener",
          "shortdesc": "Adds an event listener.",
          "parameters": [
            {
              "name": "eventType",
              "shortdesc": "The event type.",
              "datatype": {
                "type": "String"
              }
            },
            {
              "name": "handler",
              "shortdesc": "The event handler. Can accept: File or JavaScript Function.",
              "datatype": {
                "type": "Mixed"
              }
            },
            {
              "name": "captures",
              "optional": true,
              "shortdesc": "This parameter is obsolete. ",
              "datatype": {
                "type": "Boolean",
                "value": false
              }
            }
          ],
          "datatype": {
            "type": "EventListener"
          }
        },
        {
          "name": "removeEventListener",
          "shortdesc": "Removes the event listener.",
          "parameters": [
            {
              "name": "eventType",
              "shortdesc": "The registered event type.",
              "datatype": {
                "type": "String"
              }
            },
            {
              "name": "handler",
              "shortdesc": "The registered event handler. Can accept: File or JavaScript Function.",
              "datatype": {
                "type": "Mixed"
              }
            },
            {
              "name": "captures",
              "optional": true,
              "shortdesc": "This parameter is obsolete. ",
              "datatype": {
                "type": "Boolean",
                "value": false
              }
            }
          ],
          "datatype": {
            "type": "Boolean"
          }
        }
      ]
    }
  ]
}