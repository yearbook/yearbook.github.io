{
  "name": "Font",
  "dynamic": true,
  "shortdesc": "A font.",
  "elements": [
    {
      "type": "instance",
      "property": [
        {
          "name": "allowEditableEmbedding",
          "rwaccess": "readonly",
          "shortdesc": "If true, the font can be embedded.",
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "allowOutlines",
          "rwaccess": "readonly",
          "shortdesc": "If true, the font can be converted to outlines.",
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "allowPDFEmbedding",
          "rwaccess": "readonly",
          "shortdesc": "If true, the font can be embedded in a PDF document.",
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "allowPrinting",
          "rwaccess": "readonly",
          "shortdesc": "If true, the can font be printed.",
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "fontFamily",
          "rwaccess": "readonly",
          "shortdesc": "The name of the font family",
          "datatype": {
            "type": "String"
          }
        },
        {
          "name": "location",
          "rwaccess": "readonly",
          "shortdesc": "The full path to the Font.",
          "datatype": {
            "type": "String"
          }
        },
        {
          "name": "name",
          "rwaccess": "readonly",
          "shortdesc": "The name of the Font.",
          "datatype": {
            "type": "String"
          }
        },
        {
          "name": "postscriptName",
          "rwaccess": "readonly",
          "shortdesc": "The PostScript name of the font.",
          "datatype": {
            "type": "String"
          }
        },
        {
          "name": "restrictedPrinting",
          "rwaccess": "readonly",
          "shortdesc": "If true, the font allows only restricted printing.",
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "status",
          "rwaccess": "readonly",
          "shortdesc": "The status of the font.",
          "datatype": {
            "type": "FontStatus"
          }
        },
        {
          "name": "fontStyleName",
          "rwaccess": "readonly",
          "shortdesc": "The name of the font style.",
          "datatype": {
            "type": "String"
          }
        },
        {
          "name": "fontType",
          "rwaccess": "readonly",
          "shortdesc": "The type of font.",
          "datatype": {
            "type": "FontTypes"
          }
        },
        {
          "name": "writingScript",
          "rwaccess": "readonly",
          "shortdesc": "The writing script.",
          "datatype": {
            "type": "Number"
          }
        },
        {
          "name": "fullName",
          "rwaccess": "readonly",
          "shortdesc": "The full font name.",
          "datatype": {
            "type": "String"
          }
        },
        {
          "name": "fullNameNative",
          "rwaccess": "readonly",
          "shortdesc": "The full native name of the font.",
          "datatype": {
            "type": "String"
          }
        },
        {
          "name": "fontStyleNameNative",
          "rwaccess": "readonly",
          "shortdesc": "The native name of the font style.",
          "datatype": {
            "type": "String"
          }
        },
        {
          "name": "platformName",
          "rwaccess": "readonly",
          "shortdesc": "The platform font name.",
          "datatype": {
            "type": "String"
          }
        },
        {
          "name": "version",
          "rwaccess": "readonly",
          "shortdesc": "The font version.",
          "datatype": {
            "type": "String"
          }
        },
        {
          "name": "registry",
          "rwaccess": "readonly",
          "shortdesc": "The registry of a CID font.",
          "datatype": {
            "type": "String"
          }
        },
        {
          "name": "ordering",
          "rwaccess": "readonly",
          "shortdesc": "The ordering of a CID font.",
          "datatype": {
            "type": "String"
          }
        },
        {
          "name": "isValid",
          "rwaccess": "readonly",
          "shortdesc": "Returns true if the object specifier resolves to valid objects.",
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "parent",
          "rwaccess": "readonly",
          "shortdesc": "The parent of the Font (a Document or Application).",
          "datatype": {
            "type": "Mixed"
          }
        },
        {
          "name": "index",
          "rwaccess": "readonly",
          "shortdesc": "The index of the Font within its containing object.",
          "datatype": {
            "type": "Number"
          }
        },
        {
          "name": "events",
          "rwaccess": "readonly",
          "shortdesc": "A collection of events.",
          "datatype": {
            "type": "Events"
          }
        },
        {
          "name": "eventListeners",
          "rwaccess": "readonly",
          "shortdesc": "A collection of event listeners.",
          "datatype": {
            "type": "EventListeners"
          }
        },
        {
          "name": "properties",
          "shortdesc": "A property that allows setting of several properties at the same time.",
          "datatype": {
            "type": "Object"
          }
        }
      ],
      "method": [
        {
          "name": "checkOpenTypeFeature",
          "shortdesc": "Checks whether the font supports the specified OpenType feature.",
          "parameters": [
            {
              "name": "using",
              "shortdesc": "The OpenType feature to check for, specified either as an OpenType feature or a string. Can accept: OpenTypeFeature enumerator or String.",
              "datatype": {
                "type": "Mixed"
              }
            }
          ],
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "createSubsetFont",
          "shortdesc": "Create a copy of the font with just enough information to render the list of characters given.",
          "parameters": [
            {
              "name": "charactersForSubset",
              "shortdesc": "String with all the characters used in the resulting font.",
              "datatype": {
                "type": "String"
              }
            },
            {
              "name": "fontDestination",
              "shortdesc": "File location for the new font.",
              "datatype": {
                "type": "File"
              }
            }
          ]
        },
        {
          "name": "toSource",
          "shortdesc": "Generates a string which, if executed, will return the Font.",
          "datatype": {
            "type": "String"
          }
        },
        {
          "name": "getElements",
          "shortdesc": "Resolves the object specifier, creating an array of object references.",
          "datatype": {
            "type": "Font",
            "array": true
          }
        },
        {
          "name": "toSpecifier",
          "shortdesc": "Retrieves the object specifier.",
          "datatype": {
            "type": "String"
          }
        },
        {
          "name": "addEventListener",
          "shortdesc": "Adds an event listener.",
          "parameters": [
            {
              "name": "eventType",
              "shortdesc": "The event type.",
              "datatype": {
                "type": "String"
              }
            },
            {
              "name": "handler",
              "shortdesc": "The event handler. Can accept: File or JavaScript Function.",
              "datatype": {
                "type": "Mixed"
              }
            },
            {
              "name": "captures",
              "optional": true,
              "shortdesc": "This parameter is obsolete. ",
              "datatype": {
                "type": "Boolean",
                "value": false
              }
            }
          ],
          "datatype": {
            "type": "EventListener"
          }
        },
        {
          "name": "removeEventListener",
          "shortdesc": "Removes the event listener.",
          "parameters": [
            {
              "name": "eventType",
              "shortdesc": "The registered event type.",
              "datatype": {
                "type": "String"
              }
            },
            {
              "name": "handler",
              "shortdesc": "The registered event handler. Can accept: File or JavaScript Function.",
              "datatype": {
                "type": "Mixed"
              }
            },
            {
              "name": "captures",
              "optional": true,
              "shortdesc": "This parameter is obsolete. ",
              "datatype": {
                "type": "Boolean",
                "value": false
              }
            }
          ],
          "datatype": {
            "type": "Boolean"
          }
        }
      ]
    }
  ]
}