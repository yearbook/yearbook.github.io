{
    "name": "CellStyle",
    "dynamic": true,
    "elements": {
        "instance": {
            "properties": [
                {
                    "name": "id",
                    "array": false,
                    "type": "Number",
                    "readonly": true,
                    "description": "The unique ID of the CellStyle."
                },
                {
                    "name": "isValid",
                    "array": false,
                    "type": "Boolean",
                    "readonly": true,
                    "description": "Returns true if the object specifier resolves to valid objects."
                },
                {
                    "name": "parent",
                    "array": false,
                    "type": "Mixed",
                    "readonly": true,
                    "description": "The parent of the CellStyle (a Document, Application or CellStyleGroup)."
                },
                {
                    "name": "index",
                    "array": false,
                    "type": "Number",
                    "readonly": true,
                    "description": "The index of the CellStyle within its containing object."
                },
                {
                    "name": "events",
                    "array": false,
                    "type": "Events",
                    "readonly": true,
                    "description": "A collection of events."
                },
                {
                    "name": "eventListeners",
                    "array": false,
                    "type": "EventListeners",
                    "readonly": true,
                    "description": "A collection of event listeners."
                },
                {
                    "name": "basedOn",
                    "array": false,
                    "type": "Mixed",
                    "readonly": false,
                    "description": "The style that this style is based on. Can return: CellStyle or String."
                },
                {
                    "name": "appliedParagraphStyle",
                    "array": false,
                    "type": "Mixed",
                    "readonly": false,
                    "description": "The paragraph style applied to the text. Can return: ParagraphStyle or NothingEnum enumerator. Can also accept: String."
                },
                {
                    "name": "gradientFillLength",
                    "array": false,
                    "type": "Mixed",
                    "readonly": false,
                    "description": "The length (of a linear gradient) or radius (of a radial gradient) applied to the fill of the object. Can return: Real or NothingEnum enumerator."
                },
                {
                    "name": "gradientFillAngle",
                    "array": false,
                    "type": "Mixed",
                    "readonly": false,
                    "description": "The angle of a linear gradient applied to the fill of the object. (Range: -180 to 180). Can return: Real or NothingEnum enumerator."
                },
                {
                    "name": "gradientFillStart",
                    "array": false,
                    "type": "Mixed",
                    "readonly": false,
                    "description": "The starting point (in page coordinates) of a gradient applied to the fill of the CellStyle, in the format [x, y]. Can return: Array of 2 Units or NothingEnum enumerator."
                },
                {
                    "name": "topInset",
                    "array": false,
                    "type": "Mixed",
                    "readonly": false,
                    "description": "The top inset of the cell. Can return: Unit or NothingEnum enumerator."
                },
                {
                    "name": "leftInset",
                    "array": false,
                    "type": "Mixed",
                    "readonly": false,
                    "description": "The left inset of the cell. Can return: Unit or NothingEnum enumerator."
                },
                {
                    "name": "bottomInset",
                    "array": false,
                    "type": "Mixed",
                    "readonly": false,
                    "description": "The bottom inset of the cell. Can return: Unit or NothingEnum enumerator."
                },
                {
                    "name": "rightInset",
                    "array": false,
                    "type": "Mixed",
                    "readonly": false,
                    "description": "The right inset of the cell. Can return: Unit or NothingEnum enumerator."
                },
                {
                    "name": "fillColor",
                    "array": false,
                    "type": "Mixed",
                    "readonly": false,
                    "description": "The swatch (color, gradient, tint, or mixed ink) applied to the fill of the object. Can return: Swatch or NothingEnum enumerator. Can also accept: String."
                },
                {
                    "name": "fillTint",
                    "array": false,
                    "type": "Mixed",
                    "readonly": false,
                    "description": "The tint (as a percentage) of the fill of the object. Can return: Real or NothingEnum enumerator."
                },
                {
                    "name": "overprintFill",
                    "array": false,
                    "type": "Mixed",
                    "readonly": false,
                    "description": "If true, the fill of the object will overprint. Can return: Boolean or NothingEnum enumerator."
                },
                {
                    "name": "topLeftDiagonalLine",
                    "array": false,
                    "type": "Mixed",
                    "readonly": false,
                    "description": "If true, draws a diagonal line starting from the top left. Can return: Boolean or NothingEnum enumerator."
                },
                {
                    "name": "topRightDiagonalLine",
                    "array": false,
                    "type": "Mixed",
                    "readonly": false,
                    "description": "If true, draws a diagonal line starting from the top right. Can return: Boolean or NothingEnum enumerator."
                },
                {
                    "name": "diagonalLineInFront",
                    "array": false,
                    "type": "Mixed",
                    "readonly": false,
                    "description": "If true, draws the diagonal line in front of cell contents. Can return: Boolean or NothingEnum enumerator."
                },
                {
                    "name": "diagonalLineStrokeWeight",
                    "array": false,
                    "type": "Mixed",
                    "readonly": false,
                    "description": "The diagonal line stroke weight. Can return: Unit or NothingEnum enumerator."
                },
                {
                    "name": "diagonalLineStrokeType",
                    "array": false,
                    "type": "Mixed",
                    "readonly": false,
                    "description": "The stroke type of the diagonal line(s). Can return: StrokeStyle or NothingEnum enumerator. Can also accept: String."
                },
                {
                    "name": "diagonalLineStrokeColor",
                    "array": false,
                    "type": "Mixed",
                    "readonly": false,
                    "description": "The diagonal line color, specified as a swatch. Can return: Swatch or NothingEnum enumerator."
                },
                {
                    "name": "diagonalLineStrokeTint",
                    "array": false,
                    "type": "Mixed",
                    "readonly": false,
                    "description": "The diagonal line tint (as a percentage). (Range: 0 to 100). Can return: Real or NothingEnum enumerator."
                },
                {
                    "name": "diagonalLineStrokeOverprint",
                    "array": false,
                    "type": "Mixed",
                    "readonly": false,
                    "description": "If true, the diagonal line stroke will overprint. Can return: Boolean or NothingEnum enumerator."
                },
                {
                    "name": "diagonalLineStrokeGapColor",
                    "array": false,
                    "type": "Mixed",
                    "readonly": false,
                    "description": "The swatch (color, gradient, tint, or mixed ink) applied to the gap of the diagonal line stroke. Note: Not valid when diagonal line stroke type is solid. Can return: Swatch or NothingEnum enumerator."
                },
                {
                    "name": "diagonalLineStrokeGapTint",
                    "array": false,
                    "type": "Mixed",
                    "readonly": false,
                    "description": "The tint (as a percentage) of the diagonal line stroke gap color. Note: Not valid when diagonal line stroke type is solid. Can return: Real or NothingEnum enumerator."
                },
                {
                    "name": "diagonalLineStrokeGapOverprint",
                    "array": false,
                    "type": "Mixed",
                    "readonly": false,
                    "description": "If true, the stroke gap of the diagonal line will overprint. Note: Not valid when diagonal line stroke type is solid. Can return: Boolean or NothingEnum enumerator."
                },
                {
                    "name": "clipContentToCell",
                    "array": false,
                    "type": "Mixed",
                    "readonly": false,
                    "description": "If true, clips the cell's content to width and height of the cell. Can return: Boolean or NothingEnum enumerator."
                },
                {
                    "name": "firstBaselineOffset",
                    "array": false,
                    "type": "Mixed",
                    "readonly": false,
                    "description": "The distance between the baseline of the text and the top inset of the cell. Can return: FirstBaseline enumerator or NothingEnum enumerator."
                },
                {
                    "name": "verticalJustification",
                    "array": false,
                    "type": "Mixed",
                    "readonly": false,
                    "description": "The vertical alignment of cell. Can return: VerticalJustification enumerator or NothingEnum enumerator."
                },
                {
                    "name": "paragraphSpacingLimit",
                    "array": false,
                    "type": "Mixed",
                    "readonly": false,
                    "description": "The maximum space that can be added between paragraphs in a cell. Note: Valid only when vertical justification is justified. Can return: Unit or NothingEnum enumerator."
                },
                {
                    "name": "minimumFirstBaselineOffset",
                    "array": false,
                    "type": "Mixed",
                    "readonly": false,
                    "description": "The space between the baseline of the text and the top inset of the frame or cell. Can return: Unit (0 - 8640 points) or NothingEnum enumerator."
                },
                {
                    "name": "rotationAngle",
                    "array": false,
                    "type": "Mixed",
                    "readonly": false,
                    "description": "The rotation angle (in degrees) of the cell, specified as one of the following values: 0, 90, 180, or 270. Can return: Real or NothingEnum enumerator."
                },
                {
                    "name": "leftEdgeStrokeWeight",
                    "array": false,
                    "type": "Mixed",
                    "readonly": false,
                    "description": "The stroke weight of the left edge border stroke. Can return: Unit or NothingEnum enumerator."
                },
                {
                    "name": "leftEdgeStrokeType",
                    "array": false,
                    "type": "Mixed",
                    "readonly": false,
                    "description": "The stroke type of the left edge. Can return: StrokeStyle or NothingEnum enumerator. Can also accept: String."
                },
                {
                    "name": "leftEdgeStrokeColor",
                    "array": false,
                    "type": "Mixed",
                    "readonly": false,
                    "description": "The swatch (color, gradient, tint, or mixed ink) applied to the left edge border stroke. Can return: Swatch or NothingEnum enumerator."
                },
                {
                    "name": "leftEdgeStrokeTint",
                    "array": false,
                    "type": "Mixed",
                    "readonly": false,
                    "description": "The tint (as a percentage) of the left edge border stroke. (Range: 0 to 100). Can return: Real or NothingEnum enumerator."
                },
                {
                    "name": "leftEdgeStrokeOverprint",
                    "array": false,
                    "type": "Mixed",
                    "readonly": false,
                    "description": "If true, the left edge border stroke will overprint. Can return: Boolean or NothingEnum enumerator."
                },
                {
                    "name": "leftEdgeStrokeGapColor",
                    "array": false,
                    "type": "Mixed",
                    "readonly": false,
                    "description": "The swatch (color, gradient, tint, or mixed ink) applied to the gap of the left edge border stroke. Note: Not valid when left edge stroke type is solid. Can return: Swatch or NothingEnum enumerator."
                },
                {
                    "name": "leftEdgeStrokeGapTint",
                    "array": false,
                    "type": "Mixed",
                    "readonly": false,
                    "description": "The tint (as a percentage) of the left edge border stroke gap color. (Range: 0 to 100) Note: Not valid when left edge stroke type is solid. Can return: Real or NothingEnum enumerator."
                },
                {
                    "name": "leftEdgeStrokeGapOverprint",
                    "array": false,
                    "type": "Mixed",
                    "readonly": false,
                    "description": "If true, the gap color of the left edge border stroke will overprint. Note: Not valid when left edge stroke type is solid. Can return: Boolean or NothingEnum enumerator."
                },
                {
                    "name": "topEdgeStrokeWeight",
                    "array": false,
                    "type": "Mixed",
                    "readonly": false,
                    "description": "The stroke weight of the top edge border stroke. Can return: Unit or NothingEnum enumerator."
                },
                {
                    "name": "topEdgeStrokeType",
                    "array": false,
                    "type": "Mixed",
                    "readonly": false,
                    "description": "The stroke type of the top edge. Can return: StrokeStyle or NothingEnum enumerator. Can also accept: String."
                },
                {
                    "name": "topEdgeStrokeColor",
                    "array": false,
                    "type": "Mixed",
                    "readonly": false,
                    "description": "The swatch (color, gradient, tint, or mixed ink) applied to the top edge border stroke. Can return: Swatch or NothingEnum enumerator."
                },
                {
                    "name": "topEdgeStrokeTint",
                    "array": false,
                    "type": "Mixed",
                    "readonly": false,
                    "description": "The tint (as a percentage) of the top edge border stroke. (Range: 0 to 100). Can return: Real or NothingEnum enumerator."
                },
                {
                    "name": "topEdgeStrokeOverprint",
                    "array": false,
                    "type": "Mixed",
                    "readonly": false,
                    "description": "If true, the top edge border stroke will overprint. Can return: Boolean or NothingEnum enumerator."
                },
                {
                    "name": "topEdgeStrokeGapColor",
                    "array": false,
                    "type": "Mixed",
                    "readonly": false,
                    "description": "The swatch (color, gradient, tint, or mixed ink) applied to the gap of the top edge border stroke. Note: Not valid when top edge stroke type is solid. Can return: Swatch or NothingEnum enumerator."
                },
                {
                    "name": "topEdgeStrokeGapTint",
                    "array": false,
                    "type": "Mixed",
                    "readonly": false,
                    "description": "The tint (as a percentage) of the top edge border stroke gap color. (Range: 0 to 100) Note: Not valid when top edge stroke type is solid. Can return: Real or NothingEnum enumerator."
                },
                {
                    "name": "topEdgeStrokeGapOverprint",
                    "array": false,
                    "type": "Mixed",
                    "readonly": false,
                    "description": "If true, the gap color of the top edge border stroke will overprint. Note: Not valid when top edge stroke type is solid. . Can return: Boolean or NothingEnum enumerator."
                },
                {
                    "name": "rightEdgeStrokeWeight",
                    "array": false,
                    "type": "Mixed",
                    "readonly": false,
                    "description": "The stroke weight of the right edge border stroke. Can return: Unit or NothingEnum enumerator."
                },
                {
                    "name": "rightEdgeStrokeType",
                    "array": false,
                    "type": "Mixed",
                    "readonly": false,
                    "description": "The stroke type of the right edge. Can return: StrokeStyle or NothingEnum enumerator. Can also accept: String."
                },
                {
                    "name": "rightEdgeStrokeColor",
                    "array": false,
                    "type": "Mixed",
                    "readonly": false,
                    "description": "The color, specified as a swatch, of the right edge border stroke. Can return: Swatch or NothingEnum enumerator."
                },
                {
                    "name": "rightEdgeStrokeTint",
                    "array": false,
                    "type": "Mixed",
                    "readonly": false,
                    "description": "The tint (as a percentage) of the right edge border stroke. (Range: 0 to 100). Can return: Real or NothingEnum enumerator."
                },
                {
                    "name": "rightEdgeStrokeOverprint",
                    "array": false,
                    "type": "Mixed",
                    "readonly": false,
                    "description": "If true, the right edge border stroke will overprint. Can return: Boolean or NothingEnum enumerator."
                },
                {
                    "name": "rightEdgeStrokeGapColor",
                    "array": false,
                    "type": "Mixed",
                    "readonly": false,
                    "description": "The swatch (color, gradient, tint, or mixed ink) applied to the gap of the right edge border stroke. Note: Not valid when right edge stroke type is solid. Can return: Swatch or NothingEnum enumerator."
                },
                {
                    "name": "rightEdgeStrokeGapTint",
                    "array": false,
                    "type": "Mixed",
                    "readonly": false,
                    "description": "The tint (as a percentage) of the right edge border stroke gap color. (Range: 0 to 100) Note: Not valid when right edge stroke type is solid. Can return: Real or NothingEnum enumerator."
                },
                {
                    "name": "rightEdgeStrokeGapOverprint",
                    "array": false,
                    "type": "Mixed",
                    "readonly": false,
                    "description": "If true, the gap color of the right edge border stroke will overprint. Note: Not valid when right edge stroke type is solid. Can return: Boolean or NothingEnum enumerator."
                },
                {
                    "name": "bottomEdgeStrokeWeight",
                    "array": false,
                    "type": "Mixed",
                    "readonly": false,
                    "description": "The stroke weight of the bottom edge border stroke. Can return: Unit or NothingEnum enumerator."
                },
                {
                    "name": "bottomEdgeStrokeType",
                    "array": false,
                    "type": "Mixed",
                    "readonly": false,
                    "description": "The stroke type of the bottom edge. Can return: StrokeStyle or NothingEnum enumerator. Can also accept: String."
                },
                {
                    "name": "bottomEdgeStrokeColor",
                    "array": false,
                    "type": "Mixed",
                    "readonly": false,
                    "description": "The swatch (color, gradient, tint, or mixed ink) applied to the bottom edge border stroke. Can return: Swatch or NothingEnum enumerator."
                },
                {
                    "name": "bottomEdgeStrokeTint",
                    "array": false,
                    "type": "Mixed",
                    "readonly": false,
                    "description": "The tint (as a percentage) of the bottom edge border stroke. Can return: Real or NothingEnum enumerator."
                },
                {
                    "name": "bottomEdgeStrokeOverprint",
                    "array": false,
                    "type": "Mixed",
                    "readonly": false,
                    "description": "If true, the bottom edge border stroke will overprint. Can return: Boolean or NothingEnum enumerator."
                },
                {
                    "name": "bottomEdgeStrokeGapColor",
                    "array": false,
                    "type": "Mixed",
                    "readonly": false,
                    "description": "The swatch (color, gradient, tint, or mixed ink) applied to the gap of the bottom edge border stroke. Note: Not valid when bottom edge stroke type is solid. Can return: Swatch or NothingEnum enumerator."
                },
                {
                    "name": "bottomEdgeStrokeGapTint",
                    "array": false,
                    "type": "Mixed",
                    "readonly": false,
                    "description": "The tint (as a percentage) of the bottom edge border stroke gap color. (Range: 0 to 100) Note: Not valid when bottom edge stroke type is solid. Can return: Real or NothingEnum enumerator."
                },
                {
                    "name": "bottomEdgeStrokeGapOverprint",
                    "array": false,
                    "type": "Mixed",
                    "readonly": false,
                    "description": "If true, the gap color of the bottom edge border stroke will overprint. Note: Not valid when bottom edge stroke type is solid. Can return: Boolean or NothingEnum enumerator."
                },
                {
                    "name": "name",
                    "array": false,
                    "type": "String",
                    "readonly": false,
                    "description": "The name of the style."
                },
                {
                    "name": "label",
                    "array": false,
                    "type": "String",
                    "readonly": false,
                    "description": "A property that can be set to any string."
                },
                {
                    "name": "properties",
                    "array": false,
                    "type": "Object",
                    "readonly": false,
                    "description": "A property that allows setting of several properties at the same time."
                }
            ],
            "methods": [
                {
                    "name": "remove",
                    "description": "Deletes the style.",
                    "parameters": [
                        {
                            "name": "replacingWith",
                            "array": false,
                            "type": "CellStyle",
                            "optional": false,
                            "description": "The style to apply in place of the deleted style. (Optional)"
                        }
                    ]
                },
                {
                    "name": "duplicate",
                    "description": "Duplicates the CellStyle.",
                    "array": false,
                    "type": "CellStyle",
                    "parameters": []
                },
                {
                    "name": "move",
                    "description": "Moves the style to the specified location.",
                    "array": false,
                    "type": "CellStyle",
                    "parameters": [
                        {
                            "name": "to",
                            "array": false,
                            "type": "LocationOptions",
                            "optional": false,
                            "description": "The location relative to the reference object or within the containing object."
                        },
                        {
                            "name": "reference",
                            "array": false,
                            "type": "Mixed",
                            "optional": false,
                            "description": "The reference object. Note: Required when the to parameter specifies before or after. Can accept: ParagraphStyle, ParagraphStyleGroup, CharacterStyle, CharacterStyleGroup, CellStyle, CellStyleGroup, TableStyle, TableStyleGroup, Document or Application. (Optional)"
                        }
                    ]
                },
                {
                    "name": "insertLabel",
                    "description": "Sets the label to the value associated with the specified key.",
                    "parameters": [
                        {
                            "name": "key",
                            "array": false,
                            "type": "String",
                            "optional": false,
                            "description": "The key."
                        },
                        {
                            "name": "value",
                            "array": false,
                            "type": "String",
                            "optional": false,
                            "description": "The value."
                        }
                    ]
                },
                {
                    "name": "extractLabel",
                    "description": "Gets the label value associated with the specified key.",
                    "array": false,
                    "type": "String",
                    "parameters": [
                        {
                            "name": "key",
                            "array": false,
                            "type": "String",
                            "optional": false,
                            "description": "The key."
                        }
                    ]
                },
                {
                    "name": "toSource",
                    "description": "Generates a string which, if executed, will return the CellStyle.",
                    "array": false,
                    "type": "String",
                    "parameters": []
                },
                {
                    "name": "getElements",
                    "description": "Resolves the object specifier, creating an array of object references.",
                    "array": true,
                    "type": "CellStyle",
                    "parameters": []
                },
                {
                    "name": "toSpecifier",
                    "description": "Retrieves the object specifier.",
                    "array": false,
                    "type": "String",
                    "parameters": []
                },
                {
                    "name": "addEventListener",
                    "description": "Adds an event listener.",
                    "array": false,
                    "type": "EventListener",
                    "parameters": [
                        {
                            "name": "eventType",
                            "array": false,
                            "type": "String",
                            "optional": false,
                            "description": "The event type."
                        },
                        {
                            "name": "handler",
                            "array": false,
                            "type": "Mixed",
                            "optional": false,
                            "description": "The event handler. Can accept: File or JavaScript Function."
                        },
                        {
                            "description": "This parameter is obsolete. (Optional)",
                            "array": false,
                            "name": "captures",
                            "value": "false",
                            "type": "Boolean",
                            "optional": true
                        }
                    ]
                },
                {
                    "name": "removeEventListener",
                    "description": "Removes the event listener.",
                    "array": false,
                    "type": "Boolean",
                    "parameters": [
                        {
                            "name": "eventType",
                            "array": false,
                            "type": "String",
                            "optional": false,
                            "description": "The registered event type."
                        },
                        {
                            "name": "handler",
                            "array": false,
                            "type": "Mixed",
                            "optional": false,
                            "description": "The registered event handler. Can accept: File or JavaScript Function."
                        },
                        {
                            "description": "This parameter is obsolete. (Optional)",
                            "array": false,
                            "name": "captures",
                            "value": "false",
                            "type": "Boolean",
                            "optional": true
                        }
                    ]
                }
            ]
        },
        "class": {
            "properties": []
        }
    },
    "description": "A cell style."
}