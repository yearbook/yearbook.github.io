{
  "name": "TextPreference",
  "dynamic": true,
  "superclass": {
    "href": "#/Preference",
    "$t": "Preference"
  },
  "shortdesc": "Text preferences.",
  "elements": [
    {
      "type": "instance",
      "property": [
        {
          "name": "isValid",
          "rwaccess": "readonly",
          "shortdesc": "Returns true if the object specifier resolves to valid objects.",
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "parent",
          "rwaccess": "readonly",
          "shortdesc": "The parent of the TextPreference (a Application or Document).",
          "datatype": {
            "type": "Mixed"
          }
        },
        {
          "name": "events",
          "rwaccess": "readonly",
          "shortdesc": "A collection of events.",
          "datatype": {
            "type": "Events"
          }
        },
        {
          "name": "eventListeners",
          "rwaccess": "readonly",
          "shortdesc": "A collection of event listeners.",
          "datatype": {
            "type": "EventListeners"
          }
        },
        {
          "name": "typographersQuotes",
          "shortdesc": "If true, converts straight quotes to typographic quotes.",
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "highlightHjViolations",
          "shortdesc": "If true, highlights hyphenation and justification rule violations in the text.",
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "highlightKeeps",
          "shortdesc": "If true, highlights paragraphs that violate keep options.",
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "highlightSubstitutedGlyphs",
          "shortdesc": "If true, highlights substituted glyphs.",
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "highlightCustomSpacing",
          "shortdesc": "If true, highlights custom kerned or tracked characters.",
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "highlightSubstitutedFonts",
          "shortdesc": "If true, highlights missing fonts.",
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "useOpticalSize",
          "shortdesc": "If true, automatically selects the correct optical size.",
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "useParagraphLeading",
          "shortdesc": "If true, applies the leading changes made to a text range to the entire paragraph. If false, applies leading changes only to the text range.",
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "superscriptSize",
          "shortdesc": "The size of superscript characters, specified as a percentage of the font size. (Range: 0 to 200)",
          "datatype": {
            "type": "Number",
            "min": 1,
            "max": 200
          }
        },
        {
          "name": "superscriptPosition",
          "shortdesc": "The position of superscript characters, specified as a percentage of the regular leading. (Range: -500 to 500)",
          "datatype": {
            "type": "Number",
            "min": -500,
            "max": 500
          }
        },
        {
          "name": "subscriptSize",
          "shortdesc": "The size of subscript characters, specified as a percentage of the font size. (Range: 0 to 200)",
          "datatype": {
            "type": "Number",
            "min": 1,
            "max": 200
          }
        },
        {
          "name": "subscriptPosition",
          "shortdesc": "The position of subscript characters, specified as a percentage of the regular leading. (Range: -500 to 500)",
          "datatype": {
            "type": "Number",
            "min": -500,
            "max": 500
          }
        },
        {
          "name": "smallCap",
          "shortdesc": "The size of text formatted as small caps, specified as a percentage of the font size. (Range: 1 to 200)",
          "datatype": {
            "type": "Number",
            "min": 1,
            "max": 200
          }
        },
        {
          "name": "leadingKeyIncrement",
          "shortdesc": "The amount that leading increases each time the user presses the option/alt-up arrow keys or decreases each time the user presses the option/alt-down arrow keys. (Range: .001 to 100)",
          "datatype": {
            "type": "Mixed",
            "min": 0.001,
            "max": 200
          }
        },
        {
          "name": "baselineShiftKeyIncrement",
          "shortdesc": "The amount that the baseline shift increases each time the user presses the option/alt-shift-up arrow keys or decreases each time the user presses the option/alt-shift-down arrow keys. (Range: .001 to 100)",
          "datatype": {
            "type": "Mixed",
            "min": 0.001,
            "max": 200
          }
        },
        {
          "name": "kerningKeyIncrement",
          "shortdesc": "The amount the kerning value per 1000 ems increases each time the user presses of the option/alt-right arrow keys or decreases each time the user presses the option/alt-left arrow keys. (Range: 1 to 100)",
          "datatype": {
            "type": "Number",
            "min": 1,
            "max": 100
          }
        },
        {
          "name": "showInvisibles",
          "shortdesc": "If true, shows hidden characters.",
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "justifyTextWraps",
          "shortdesc": "If true, justifies text around text wrap objects.",
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "abutTextToTextWrap",
          "shortdesc": "If true, moves wrapped text to the next available leading increment below the text wrap objects (skip by leading).",
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "zOrderTextWrap",
          "shortdesc": "If true, text wrap does not affect text on layers above the layer that contains the text wrap object. If false, text wrap affects text on all visible layers.",
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "linkTextFilesWhenImporting",
          "shortdesc": "If true, links placed text files and spreadsheet files. If false, embeds the files.",
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "highlightKinsoku",
          "shortdesc": "If true, uses on-screen highlighting to identify kinsoku.",
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "quoteCharactersRotatedInVertical",
          "shortdesc": "If true, Japanese composer treats quotes as half width and rotates them in vertical.",
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "useNewVerticalScaling",
          "shortdesc": "If true, reverses X and Y scaling on Roman characters in vertical text.",
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "useCidMojikumi",
          "shortdesc": "If true, uses the glyph CID to get the mojikumi class of the character.",
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "enableStylePreviewMode",
          "shortdesc": "If true, highlights character and paragraph styles with colored backgrounds.",
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "smartTextReflow",
          "shortdesc": "If true, enable automatic adding and deleting of pages in response to text reflow.",
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "addPages",
          "shortdesc": "Specifies where to insert new pages in response to overset text.",
          "datatype": {
            "type": "AddPageOptions"
          }
        },
        {
          "name": "limitToMasterTextFrames",
          "shortdesc": "Restrict the adding of pages during smart text reflow to overridden master text frames.",
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "preserveFacingPageSpreads",
          "shortdesc": "Preserve left-hand and right-and pages when facing pages are enabled during smart text reflow.",
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "deleteEmptyPages",
          "shortdesc": "Enable auto-deletion of pages containing empty threaded text frames.",
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "properties",
          "shortdesc": "A property that allows setting of several properties at the same time.",
          "datatype": {
            "type": "Object"
          }
        }
      ],
      "method": [
        {
          "name": "toSource",
          "shortdesc": "Generates a string which, if executed, will return the TextPreference.",
          "datatype": {
            "type": "String"
          }
        },
        {
          "name": "getElements",
          "shortdesc": "Resolves the object specifier, creating an array of object references.",
          "datatype": {
            "type": "TextPreference",
            "array": true
          }
        },
        {
          "name": "toSpecifier",
          "shortdesc": "Retrieves the object specifier.",
          "datatype": {
            "type": "String"
          }
        },
        {
          "name": "addEventListener",
          "shortdesc": "Adds an event listener.",
          "parameters": [
            {
              "name": "eventType",
              "shortdesc": "The event type.",
              "datatype": {
                "type": "String"
              }
            },
            {
              "name": "handler",
              "shortdesc": "The event handler. Can accept: File or JavaScript Function.",
              "datatype": {
                "type": "Mixed"
              }
            },
            {
              "name": "captures",
              "optional": true,
              "shortdesc": "This parameter is obsolete. ",
              "datatype": {
                "type": "Boolean",
                "value": false
              }
            }
          ],
          "datatype": {
            "type": "EventListener"
          }
        },
        {
          "name": "removeEventListener",
          "shortdesc": "Removes the event listener.",
          "parameters": [
            {
              "name": "eventType",
              "shortdesc": "The registered event type.",
              "datatype": {
                "type": "String"
              }
            },
            {
              "name": "handler",
              "shortdesc": "The registered event handler. Can accept: File or JavaScript Function.",
              "datatype": {
                "type": "Mixed"
              }
            },
            {
              "name": "captures",
              "optional": true,
              "shortdesc": "This parameter is obsolete. ",
              "datatype": {
                "type": "Boolean",
                "value": false
              }
            }
          ],
          "datatype": {
            "type": "Boolean"
          }
        }
      ]
    }
  ]
}