{
  "name": "IndexOptions",
  "dynamic": true,
  "superclass": {
    "href": "#/Preference",
    "$t": "Preference"
  },
  "shortdesc": "Index options.",
  "elements": [
    {
      "type": "instance",
      "property": [
        {
          "name": "isValid",
          "rwaccess": "readonly",
          "shortdesc": "Returns true if the object specifier resolves to valid objects.",
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "parent",
          "rwaccess": "readonly",
          "shortdesc": "The parent of the IndexOptions (a Document or Application).",
          "datatype": {
            "type": "Mixed"
          }
        },
        {
          "name": "events",
          "rwaccess": "readonly",
          "shortdesc": "A collection of events.",
          "datatype": {
            "type": "Events"
          }
        },
        {
          "name": "eventListeners",
          "rwaccess": "readonly",
          "shortdesc": "A collection of event listeners.",
          "datatype": {
            "type": "EventListeners"
          }
        },
        {
          "name": "title",
          "shortdesc": "The title of the generated index.",
          "datatype": {
            "type": "String"
          }
        },
        {
          "name": "titleStyle",
          "shortdesc": "The paragraph style applied to the title of the generated index. Can also accept: String.",
          "datatype": {
            "type": "ParagraphStyle"
          }
        },
        {
          "name": "replaceExistingIndex",
          "shortdesc": "If true, replaces the content of the existing index. Note: Replaces only index content; does not update the index location or other index properties that may have been changed.",
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "includeBookDocuments",
          "shortdesc": "If true, includes topics and page references from all the documents in a book.",
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "includeHiddenEntries",
          "shortdesc": "If true, includes topics and page references on hidden layers.",
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "indexFormat",
          "shortdesc": "The format for level 2 and lower index topics.",
          "datatype": {
            "type": "IndexFormat"
          }
        },
        {
          "name": "includeSectionHeadings",
          "shortdesc": "If true, displays the letters of the alphabet as index section headings.",
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "includeEmptyIndexSections",
          "shortdesc": "If true, displays headings for sections with no index topics. Note: Valid only when include section headings is true.",
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "level1Style",
          "shortdesc": "The paragraph style applied to level 1 index topics.",
          "datatype": {
            "type": "ParagraphStyle"
          }
        },
        {
          "name": "level2Style",
          "shortdesc": "The paragraph style applied to level 2 index topics.",
          "datatype": {
            "type": "ParagraphStyle"
          }
        },
        {
          "name": "level3Style",
          "shortdesc": "The paragraph style applied to level 3 index topics.",
          "datatype": {
            "type": "ParagraphStyle"
          }
        },
        {
          "name": "level4Style",
          "shortdesc": "The paragraph style applied to level 4 index topics.",
          "datatype": {
            "type": "ParagraphStyle"
          }
        },
        {
          "name": "sectionHeadingStyle",
          "shortdesc": "The paragraph style applied to index section headings. Note: Valid when include section headings is true.",
          "datatype": {
            "type": "ParagraphStyle"
          }
        },
        {
          "name": "pageNumberStyle",
          "shortdesc": "The character style applied to page numbers in the index.",
          "datatype": {
            "type": "CharacterStyle"
          }
        },
        {
          "name": "crossReferenceStyle",
          "shortdesc": "The character style applied to cross references.",
          "datatype": {
            "type": "CharacterStyle"
          }
        },
        {
          "name": "crossReferenceTopicStyle",
          "shortdesc": "The character style applied to cross reference topics.",
          "datatype": {
            "type": "CharacterStyle"
          }
        },
        {
          "name": "followingTopicSeparator",
          "shortdesc": "The character(s) inserted after each index topic.",
          "datatype": {
            "type": "String"
          }
        },
        {
          "name": "betweenEntriesSeparator",
          "shortdesc": "The character(s) inserted between index entries when runin-style index format is used for nested topics.",
          "datatype": {
            "type": "String"
          }
        },
        {
          "name": "pageRangeSeparator",
          "shortdesc": "The character(s) inserted between page numbers to indicate a page range.",
          "datatype": {
            "type": "String"
          }
        },
        {
          "name": "betweenPageNumbersSeparator",
          "shortdesc": "The character(s) inserted between separate page numbers, page numbers and page ranges, and series of page ranges.",
          "datatype": {
            "type": "String"
          }
        },
        {
          "name": "beforeCrossReferenceSeparator",
          "shortdesc": "The character(s) inserted at the start of cross references.",
          "datatype": {
            "type": "String"
          }
        },
        {
          "name": "entryEndSeparator",
          "shortdesc": "The character(s) inserted at the end of each index entry.",
          "datatype": {
            "type": "String"
          }
        },
        {
          "name": "properties",
          "shortdesc": "A property that allows setting of several properties at the same time.",
          "datatype": {
            "type": "Object"
          }
        }
      ],
      "method": [
        {
          "name": "toSource",
          "shortdesc": "Generates a string which, if executed, will return the IndexOptions.",
          "datatype": {
            "type": "String"
          }
        },
        {
          "name": "getElements",
          "shortdesc": "Resolves the object specifier, creating an array of object references.",
          "datatype": {
            "type": "IndexOptions",
            "array": true
          }
        },
        {
          "name": "toSpecifier",
          "shortdesc": "Retrieves the object specifier.",
          "datatype": {
            "type": "String"
          }
        },
        {
          "name": "addEventListener",
          "shortdesc": "Adds an event listener.",
          "parameters": [
            {
              "name": "eventType",
              "shortdesc": "The event type.",
              "datatype": {
                "type": "String"
              }
            },
            {
              "name": "handler",
              "shortdesc": "The event handler. Can accept: File or JavaScript Function.",
              "datatype": {
                "type": "Mixed"
              }
            },
            {
              "name": "captures",
              "optional": true,
              "shortdesc": "This parameter is obsolete. ",
              "datatype": {
                "type": "Boolean",
                "value": false
              }
            }
          ],
          "datatype": {
            "type": "EventListener"
          }
        },
        {
          "name": "removeEventListener",
          "shortdesc": "Removes the event listener.",
          "parameters": [
            {
              "name": "eventType",
              "shortdesc": "The registered event type.",
              "datatype": {
                "type": "String"
              }
            },
            {
              "name": "handler",
              "shortdesc": "The registered event handler. Can accept: File or JavaScript Function.",
              "datatype": {
                "type": "Mixed"
              }
            },
            {
              "name": "captures",
              "optional": true,
              "shortdesc": "This parameter is obsolete. ",
              "datatype": {
                "type": "Boolean",
                "value": false
              }
            }
          ],
          "datatype": {
            "type": "Boolean"
          }
        }
      ]
    }
  ]
}