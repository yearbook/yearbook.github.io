{
  "name": "DashedStrokeStyle",
  "dynamic": true,
  "superclass": {
    "href": "#/StrokeStyle",
    "$t": "StrokeStyle"
  },
  "shortdesc": "A dashed stroke style.",
  "elements": [
    {
      "type": "instance",
      "property": [
        {
          "name": "strokeStyleType",
          "rwaccess": "readonly",
          "shortdesc": "The stroke style type.",
          "datatype": {
            "type": "String"
          }
        },
        {
          "name": "id",
          "rwaccess": "readonly",
          "shortdesc": "The unique ID of the DashedStrokeStyle.",
          "datatype": {
            "type": "Number"
          }
        },
        {
          "name": "isValid",
          "rwaccess": "readonly",
          "shortdesc": "Returns true if the object specifier resolves to valid objects.",
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "parent",
          "rwaccess": "readonly",
          "shortdesc": "The parent of the DashedStrokeStyle (a Document or Application).",
          "datatype": {
            "type": "Mixed"
          }
        },
        {
          "name": "index",
          "rwaccess": "readonly",
          "shortdesc": "The index of the DashedStrokeStyle within its containing object.",
          "datatype": {
            "type": "Number"
          }
        },
        {
          "name": "events",
          "rwaccess": "readonly",
          "shortdesc": "A collection of events.",
          "datatype": {
            "type": "Events"
          }
        },
        {
          "name": "eventListeners",
          "rwaccess": "readonly",
          "shortdesc": "A collection of event listeners.",
          "datatype": {
            "type": "EventListeners"
          }
        },
        {
          "name": "dashArray",
          "shortdesc": "The pattern of dashes and gaps, in the format [dash length1, gap length1, dash length2, gap length2]. Define up to ten values.",
          "datatype": {
            "type": "Mixed",
            "array": true
          }
        },
        {
          "name": "strokeCornerAdjustment",
          "shortdesc": "The corner adjustment applied to the DashedStrokeStyle.",
          "datatype": {
            "type": "StrokeCornerAdjustment"
          }
        },
        {
          "name": "endCap",
          "shortdesc": "The end shape of an open path.",
          "datatype": {
            "type": "EndCap"
          }
        },
        {
          "name": "name",
          "shortdesc": "The name of the DashedStrokeStyle.",
          "datatype": {
            "type": "String"
          }
        },
        {
          "name": "properties",
          "shortdesc": "A property that allows setting of several properties at the same time.",
          "datatype": {
            "type": "Object"
          }
        }
      ],
      "method": [
        {
          "name": "duplicate",
          "shortdesc": "Duplicates the DashedStrokeStyle.",
          "datatype": {
            "type": "DashedStrokeStyle"
          }
        },
        {
          "name": "remove",
          "shortdesc": "Deletes the stroke style.",
          "parameters": [
            {
              "name": "replacingWith",
              "shortdesc": "The stroke style to apply in place of the deleted style. . Can accept: StrokeStyle or String. ",
              "datatype": {
                "type": "Mixed"
              },
              "optional": true
            }
          ]
        },
        {
          "name": "toSource",
          "shortdesc": "Generates a string which, if executed, will return the DashedStrokeStyle.",
          "datatype": {
            "type": "String"
          }
        },
        {
          "name": "getElements",
          "shortdesc": "Resolves the object specifier, creating an array of object references.",
          "datatype": {
            "type": "DashedStrokeStyle",
            "array": true
          }
        },
        {
          "name": "toSpecifier",
          "shortdesc": "Retrieves the object specifier.",
          "datatype": {
            "type": "String"
          }
        },
        {
          "name": "addEventListener",
          "shortdesc": "Adds an event listener.",
          "parameters": [
            {
              "name": "eventType",
              "shortdesc": "The event type.",
              "datatype": {
                "type": "String"
              }
            },
            {
              "name": "handler",
              "shortdesc": "The event handler. Can accept: File or JavaScript Function.",
              "datatype": {
                "type": "Mixed"
              }
            },
            {
              "name": "captures",
              "optional": true,
              "shortdesc": "This parameter is obsolete. ",
              "datatype": {
                "type": "Boolean",
                "value": false
              }
            }
          ],
          "datatype": {
            "type": "EventListener"
          }
        },
        {
          "name": "removeEventListener",
          "shortdesc": "Removes the event listener.",
          "parameters": [
            {
              "name": "eventType",
              "shortdesc": "The registered event type.",
              "datatype": {
                "type": "String"
              }
            },
            {
              "name": "handler",
              "shortdesc": "The registered event handler. Can accept: File or JavaScript Function.",
              "datatype": {
                "type": "Mixed"
              }
            },
            {
              "name": "captures",
              "optional": true,
              "shortdesc": "This parameter is obsolete. ",
              "datatype": {
                "type": "Boolean",
                "value": false
              }
            }
          ],
          "datatype": {
            "type": "Boolean"
          }
        }
      ]
    }
  ]
}