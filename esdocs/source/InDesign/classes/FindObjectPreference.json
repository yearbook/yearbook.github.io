{
    "name": "FindObjectPreference",
    "dynamic": true,
    "elements": {
        "class": {
            "properties": [],
            "methods": []
        },
        "constructors": {
            "methods": []
        },
        "instance": {
            "properties": [
                {
                    "name": "transparencySettings",
                    "readonly": true,
                    "type": "Mixed",
                    "array": false,
                    "description": "Transparency settings. Can return: FindChangeTransparencySetting or NothingEnum enumerator."
                },
                {
                    "name": "strokeTransparencySettings",
                    "readonly": true,
                    "type": "Mixed",
                    "array": false,
                    "description": "Transparency settings for the stroke. Can return: FindChangeStrokeTransparencySetting or NothingEnum enumerator."
                },
                {
                    "name": "fillTransparencySettings",
                    "readonly": true,
                    "type": "Mixed",
                    "array": false,
                    "description": "Transparency settings for the fill applied to the FindObjectPreference. Can return: FindChangeFillTransparencySetting or NothingEnum enumerator."
                },
                {
                    "name": "contentTransparencySettings",
                    "readonly": true,
                    "type": "Mixed",
                    "array": false,
                    "description": "Transparency settings for the content of the FindObjectPreference. Can return: FindChangeContentTransparencySetting or NothingEnum enumerator."
                },
                {
                    "name": "userModifiedWrap",
                    "readonly": true,
                    "type": "Mixed",
                    "array": false,
                    "description": "If true, the text wrap path has been explicitly modified by the user. Can return: Boolean or NothingEnum enumerator."
                },
                {
                    "name": "isValid",
                    "readonly": true,
                    "type": "Boolean",
                    "array": false,
                    "description": "Returns true if the object specifier resolves to valid objects."
                },
                {
                    "name": "parent",
                    "readonly": true,
                    "type": "Application",
                    "array": false,
                    "description": "The parent of the FindObjectPreference (a Application)."
                },
                {
                    "name": "events",
                    "readonly": true,
                    "type": "Events",
                    "array": false,
                    "description": "A collection of events."
                },
                {
                    "name": "eventListeners",
                    "readonly": true,
                    "type": "EventListeners",
                    "array": false,
                    "description": "A collection of event listeners."
                },
                {
                    "name": "preferences",
                    "readonly": true,
                    "type": "Preferences",
                    "array": false,
                    "description": "A collection of preferences objects."
                },
                {
                    "name": "preserveAppearanceFromLayout",
                    "readonly": false,
                    "type": "Mixed",
                    "array": false,
                    "description": "Preserve Appearance from Layout. Can return: PreserveAppearanceFromLayoutEnum enumerator or NothingEnum enumerator."
                },
                {
                    "name": "altTextSourceType",
                    "readonly": false,
                    "type": "Mixed",
                    "array": false,
                    "description": "The source type of alternate text. Can return: SourceType enumerator or NothingEnum enumerator."
                },
                {
                    "name": "actualTextSourceType",
                    "readonly": false,
                    "type": "Mixed",
                    "array": false,
                    "description": "The source type of actual text. Can return: SourceType enumerator or NothingEnum enumerator."
                },
                {
                    "name": "customAltText",
                    "readonly": false,
                    "type": "Mixed",
                    "array": false,
                    "description": "The custom alternate text entered by the user. Can return: String or NothingEnum enumerator."
                },
                {
                    "name": "customActualText",
                    "readonly": false,
                    "type": "Mixed",
                    "array": false,
                    "description": "The custom actual text entered by the user. Can return: String or NothingEnum enumerator."
                },
                {
                    "name": "altMetadataProperty",
                    "readonly": false,
                    "type": "Mixed",
                    "array": false,
                    "description": "The metadata property to use as source of alternate text. Can return: Ordered array containing namespacePrefix:String, propertyPath:String or NothingEnum enumerator."
                },
                {
                    "name": "actualMetadataProperty",
                    "readonly": false,
                    "type": "Mixed",
                    "array": false,
                    "description": "The metadata property to use as source of actual text. Can return: Ordered array containing namespacePrefix:String, propertyPath:String or NothingEnum enumerator."
                },
                {
                    "name": "applyTagType",
                    "readonly": false,
                    "type": "Mixed",
                    "array": false,
                    "description": "The tag type of page item. Can return: TagType enumerator or NothingEnum enumerator."
                },
                {
                    "name": "imageConversionType",
                    "readonly": false,
                    "type": "Mixed",
                    "array": false,
                    "description": "Allows user to select the image format for conversion. Can return: ImageFormat enumerator or NothingEnum enumerator."
                },
                {
                    "name": "imageExportResolution",
                    "readonly": false,
                    "type": "Mixed",
                    "array": false,
                    "description": "The export resolution. Can return: ImageResolution enumerator or NothingEnum enumerator."
                },
                {
                    "name": "gifOptionsPalette",
                    "readonly": false,
                    "type": "Mixed",
                    "array": false,
                    "description": "The color palette for GIF conversion. Note: Not valid when image conversion is JPEG. . Can return: GIFOptionsPalette enumerator or NothingEnum enumerator."
                },
                {
                    "name": "gifOptionsInterlaced",
                    "readonly": false,
                    "type": "Mixed",
                    "array": false,
                    "description": "If true, generates interlaced GIFs. Note: Not valid  when image conversion is JPEG. Can return: Boolean or NothingEnum enumerator."
                },
                {
                    "name": "jpegOptionsQuality",
                    "readonly": false,
                    "type": "Mixed",
                    "array": false,
                    "description": "The quality of converted JPEG images. Note: Not valid when image conversion is GIF. . Can return: JPEGOptionsQuality enumerator or NothingEnum enumerator."
                },
                {
                    "name": "jpegOptionsFormat",
                    "readonly": false,
                    "type": "Mixed",
                    "array": false,
                    "description": "The formatting method for converted JPEG images. Note: Not valid  when image conversion is GIF. Can return: JPEGOptionsFormat enumerator or NothingEnum enumerator."
                },
                {
                    "name": "imageAlignment",
                    "readonly": false,
                    "type": "Mixed",
                    "array": false,
                    "description": "Alignment applied to images. Can return: ImageAlignmentType enumerator or NothingEnum enumerator."
                },
                {
                    "name": "imageSpaceBefore",
                    "readonly": false,
                    "type": "Mixed",
                    "array": false,
                    "description": "Space Before applied to images. Can return: Real (0 - 8640) or NothingEnum enumerator."
                },
                {
                    "name": "imageSpaceAfter",
                    "readonly": false,
                    "type": "Mixed",
                    "array": false,
                    "description": "Space After applied to images. Can return: Real (0 - 8640) or NothingEnum enumerator."
                },
                {
                    "name": "useImagePageBreak",
                    "readonly": false,
                    "type": "Mixed",
                    "array": false,
                    "description": "If true, image page break settings will be used in objects. Can return: Boolean or NothingEnum enumerator."
                },
                {
                    "name": "imagePageBreak",
                    "readonly": false,
                    "type": "Mixed",
                    "array": false,
                    "description": "Image page break settings to be used with objects. Can return: ImagePageBreakType enumerator or NothingEnum enumerator."
                },
                {
                    "name": "storyDirection",
                    "readonly": false,
                    "type": "Mixed",
                    "array": false,
                    "description": "The direction of the story. Can return: StoryDirectionOptions enumerator or NothingEnum enumerator."
                },
                {
                    "name": "positionReferencePoint",
                    "readonly": false,
                    "type": "Mixed",
                    "array": false,
                    "description": "The point in the referenced object relative to which to position the anchored object. Notes: Valid only when anchored position is custom. Can return: AnchorPoint enumerator or NothingEnum enumerator."
                },
                {
                    "name": "applyToMasterPageOnly",
                    "readonly": false,
                    "type": "Mixed",
                    "array": false,
                    "description": "If true, text wraps on the master spread apply to that spread only, and not to any pages the master spread has been applied to. Can return: Boolean or NothingEnum enumerator."
                },
                {
                    "name": "textWrapSide",
                    "readonly": false,
                    "type": "Mixed",
                    "array": false,
                    "description": "Text wrap side options. Can return: TextWrapSideOptions enumerator or NothingEnum enumerator."
                },
                {
                    "name": "textWrapOffset",
                    "readonly": false,
                    "type": "Mixed",
                    "array": false,
                    "description": "The minimum space between text and the edges of the wrapped object. Specify four values in the format [top, left, bottom, right]. . Can return: Ordered array containing top:Unit, left:Unit, bottom:Unit, right:Unit or NothingEnum enumerator."
                },
                {
                    "name": "textWrapMode",
                    "readonly": false,
                    "type": "Mixed",
                    "array": false,
                    "description": "The text wrap mode. . Can return: TextWrapModes enumerator or NothingEnum enumerator."
                },
                {
                    "name": "footnotesEnableOverrides",
                    "readonly": false,
                    "type": "Mixed",
                    "array": false,
                    "description": "If true, enable overrides to document footnote options. Can return: Boolean or NothingEnum enumerator."
                },
                {
                    "name": "footnotesSpanAcrossColumns",
                    "readonly": false,
                    "type": "Mixed",
                    "array": false,
                    "description": "If true, enable straddling footnotes. Can return: Boolean or NothingEnum enumerator."
                },
                {
                    "name": "footnotesMinimumSpacing",
                    "readonly": false,
                    "type": "Mixed",
                    "array": false,
                    "description": "Minimum Spacing Before First Footnote. Can return: Unit (0 - 8640 points) or NothingEnum enumerator."
                },
                {
                    "name": "footnotesSpaceBetween",
                    "readonly": false,
                    "type": "Mixed",
                    "array": false,
                    "description": "Space between footnotes. Can return: Unit (0 - 8640 points) or NothingEnum enumerator."
                },
                {
                    "name": "appliedObjectStyles",
                    "readonly": false,
                    "type": "Mixed",
                    "array": false,
                    "description": "The applied object style(s). Can return: String or NothingEnum enumerator. Can also accept: ObjectStyle."
                },
                {
                    "name": "fillColor",
                    "readonly": false,
                    "type": "Mixed",
                    "array": false,
                    "description": "The swatch (color, gradient, tint, or mixed ink) applied to the fill of the FindObjectPreference. . Can return: Swatch or NothingEnum enumerator. Can also accept: String."
                },
                {
                    "name": "fillTint",
                    "readonly": false,
                    "type": "Mixed",
                    "array": false,
                    "description": "The percent of tint to use in the FindObjectPreference's fill color. (To specify a tint percent, use a number in the range of 0 to 100; to use the inherited or overridden value, use -1.). Can return: Real or NothingEnum enumerator."
                },
                {
                    "name": "overprintFill",
                    "readonly": false,
                    "type": "Mixed",
                    "array": false,
                    "description": "If true, the FindObjectPreference's fill color overprints any underlying objects. If false, the fill color knocks out the underlying colors. Can return: Boolean or NothingEnum enumerator."
                },
                {
                    "name": "strokeWeight",
                    "readonly": false,
                    "type": "Mixed",
                    "array": false,
                    "description": "The weight (in points) to apply to the FindObjectPreference's stroke. Can return: Unit or NothingEnum enumerator."
                },
                {
                    "name": "miterLimit",
                    "readonly": false,
                    "type": "Mixed",
                    "array": false,
                    "description": "The limit of the ratio of stroke width to miter length before a miter (pointed) join becomes a bevel (squared-off) join. Can return: Real (1 - 500) or NothingEnum enumerator.",
                    "value": "4"
                },
                {
                    "name": "endCap",
                    "readonly": false,
                    "type": "Mixed",
                    "array": false,
                    "description": "The end shape of an open path. Can return: EndCap enumerator or NothingEnum enumerator."
                },
                {
                    "name": "endJoin",
                    "readonly": false,
                    "type": "Mixed",
                    "array": false,
                    "description": "The corner join applied to the FindObjectPreference. Can return: EndJoin enumerator or NothingEnum enumerator."
                },
                {
                    "name": "strokeType",
                    "readonly": false,
                    "type": "Mixed",
                    "array": false,
                    "description": "The name of the stroke style to apply. Can return: StrokeStyle or NothingEnum enumerator. Can also accept: String."
                },
                {
                    "name": "strokeCornerAdjustment",
                    "readonly": false,
                    "type": "Mixed",
                    "array": false,
                    "description": "The corner adjustment applied to the FindObjectPreference. Can return: StrokeCornerAdjustment enumerator or NothingEnum enumerator."
                },
                {
                    "name": "strokeDashAndGap",
                    "readonly": false,
                    "type": "Mixed",
                    "array": false,
                    "description": "The dash and gap measurements that define the pattern of a custom dashed line. Define up to six values (in points) in the format [dash1, gap1, dash2, gap2, dash3, gap3]. Can return: Array of Units or NothingEnum enumerator."
                },
                {
                    "name": "leftLineEnd",
                    "readonly": false,
                    "type": "Mixed",
                    "array": false,
                    "description": "The arrowhead applied to the start of the path. . Can return: ArrowHead enumerator or NothingEnum enumerator."
                },
                {
                    "name": "rightLineEnd",
                    "readonly": false,
                    "type": "Mixed",
                    "array": false,
                    "description": "The arrowhead applied to the end of the path. Can return: ArrowHead enumerator or NothingEnum enumerator."
                },
                {
                    "name": "strokeColor",
                    "readonly": false,
                    "type": "Mixed",
                    "array": false,
                    "description": "The swatch (color, gradient, tint, or mixed ink) applied to the stroke of the FindObjectPreference. Can return: Swatch or NothingEnum enumerator. Can also accept: String."
                },
                {
                    "name": "strokeTint",
                    "readonly": false,
                    "type": "Mixed",
                    "array": false,
                    "description": "The percent of tint to use in object's stroke color. (To specify a tint percent, use a number in the range of 0 to 100; to use the inherited or overridden value, use -1.). Can return: Real or NothingEnum enumerator."
                },
                {
                    "name": "overprintStroke",
                    "readonly": false,
                    "type": "Mixed",
                    "array": false,
                    "description": "If true, the FindObjectPreference's stroke color overprints any underlying objects. If false, the stroke color knocks out the  underlying colors. Can return: Boolean or NothingEnum enumerator."
                },
                {
                    "name": "gapColor",
                    "readonly": false,
                    "type": "Mixed",
                    "array": false,
                    "description": "The swatch (color, gradient, tint, or mixed ink) applied to the gap of a dashed, dotted, or striped stroke. For information, see stroke type. Can return: Swatch or NothingEnum enumerator."
                },
                {
                    "name": "gapTint",
                    "readonly": false,
                    "type": "Mixed",
                    "array": false,
                    "description": "The tint as a percentage of the gap color. (To specify a tint percent, use a number in the range of 0 to 100; to use the inherited or overridden value, use -1.). Can return: Real or NothingEnum enumerator."
                },
                {
                    "name": "overprintGap",
                    "readonly": false,
                    "type": "Mixed",
                    "array": false,
                    "description": "If true, the gap color overprints any underlying colors. If false, the gap color knocks out the underlying colors. Can return: Boolean or NothingEnum enumerator."
                },
                {
                    "name": "strokeAlignment",
                    "readonly": false,
                    "type": "Mixed",
                    "array": false,
                    "description": "The stroke alignment applied to the FindObjectPreference. Can return: StrokeAlignment enumerator or NothingEnum enumerator."
                },
                {
                    "name": "nonprinting",
                    "readonly": false,
                    "type": "Mixed",
                    "array": false,
                    "description": "If true, the FindObjectPreference does not print. Can return: Boolean or NothingEnum enumerator."
                },
                {
                    "name": "gradientFillAngle",
                    "readonly": false,
                    "type": "Mixed",
                    "array": false,
                    "description": "The angle of a linear gradient applied to the fill of the FindObjectPreference. (Range: -180 to 180). Can return: Real or NothingEnum enumerator."
                },
                {
                    "name": "gradientStrokeAngle",
                    "readonly": false,
                    "type": "Mixed",
                    "array": false,
                    "description": "The angle of a linear gradient applied to the stroke of the FindObjectPreference. (Range: -180 to 180). Can return: Real or NothingEnum enumerator."
                },
                {
                    "name": "textColumnCount",
                    "readonly": false,
                    "type": "Mixed",
                    "array": false,
                    "description": "The number of columns in the text frame. Note: Depending on the value of use fixed column width, the number of columns can change automatically when the text frame size changes. Can return: Long Integer (1 - 40) or NothingEnum enumerator."
                },
                {
                    "name": "textColumnGutter",
                    "readonly": false,
                    "type": "Mixed",
                    "array": false,
                    "description": "The space between columns in the text frame. Can return: Unit (0 - 8640 points) or NothingEnum enumerator."
                },
                {
                    "name": "textColumnFixedWidth",
                    "readonly": false,
                    "type": "Mixed",
                    "array": false,
                    "description": "The column width of the columns in the text frame. Can return: Unit (0 - 8640 points) or NothingEnum enumerator."
                },
                {
                    "name": "useFixedColumnWidth",
                    "readonly": false,
                    "type": "Mixed",
                    "array": false,
                    "description": "If true, maintains column width when the text frame is resized. If false, causes columns to resize when the text frame is resized. Note: When true, resizing the frame can change the number of columns in the frame. Can return: Boolean or NothingEnum enumerator."
                },
                {
                    "name": "insetSpacing",
                    "readonly": false,
                    "type": "Mixed",
                    "array": false,
                    "description": "The amount to offset text from the edges of the text frame, specified either as a single value applied uniformly to all sides of the text frame or as an array of 4 values in the format [top inset, left inset, bottom inset, right inset]. Can return: Unit (0 - 8640 points), Array of 4 Units (0 - 8640 points) or NothingEnum enumerator."
                },
                {
                    "name": "firstBaselineOffset",
                    "readonly": false,
                    "type": "Mixed",
                    "array": false,
                    "description": "The distance between the baseline of the text and the top inset of the text frame or cell. Can return: FirstBaseline enumerator or NothingEnum enumerator."
                },
                {
                    "name": "minimumFirstBaselineOffset",
                    "readonly": false,
                    "type": "Mixed",
                    "array": false,
                    "description": "The minimum distance between the baseline of the text and the top inset of the text frame or cell. Can return: Unit (0 - 8640 points) or NothingEnum enumerator."
                },
                {
                    "name": "verticalJustification",
                    "readonly": false,
                    "type": "Mixed",
                    "array": false,
                    "description": "The vertical alignment of the text content. . Can return: VerticalJustification enumerator or NothingEnum enumerator."
                },
                {
                    "name": "verticalThreshold",
                    "readonly": false,
                    "type": "Mixed",
                    "array": false,
                    "description": "The maximum amount of vertical space between two paragraphs. Note: Valid only when vertical justification is justified; the specified amount is applied in addition to the space before or space after values defined for the paragraph. Can return: Unit (0 - 8640 points) or NothingEnum enumerator."
                },
                {
                    "name": "ignoreWrap",
                    "readonly": false,
                    "type": "Mixed",
                    "array": false,
                    "description": "If true, ignores text wrap settings for drawn or placed objects in the text frame. . Can return: Boolean or NothingEnum enumerator."
                },
                {
                    "name": "useCustomBaselineFrameGrid",
                    "readonly": false,
                    "type": "Mixed",
                    "array": false,
                    "description": "If true, uses a custom baseline frame grid. Can return: Boolean or NothingEnum enumerator."
                },
                {
                    "name": "startingOffsetForBaselineFrameGrid",
                    "readonly": false,
                    "type": "Mixed",
                    "array": false,
                    "description": "The amount to offset the baseline grid. Can return: Unit (0 - 8640 points) or NothingEnum enumerator."
                },
                {
                    "name": "baselineFrameGridRelativeOption",
                    "readonly": false,
                    "type": "Mixed",
                    "array": false,
                    "description": "The location (top of page, top margin, top of frame, or frame inset) on which to base the custom baseline grid. Can return: BaselineFrameGridRelativeOption enumerator or NothingEnum enumerator."
                },
                {
                    "name": "baselineFrameGridIncrement",
                    "readonly": false,
                    "type": "Mixed",
                    "array": false,
                    "description": "The distance between grid lines. Can return: Unit (1 - 8640 points) or NothingEnum enumerator."
                },
                {
                    "name": "baselineFrameGridColor",
                    "readonly": false,
                    "type": "Mixed",
                    "array": false,
                    "description": "The grid line color, specified either as an array of three doubles, each in the range 0 to 255 and representing R, G, and B values, or as a UI color. Can return: Array of 3 Reals (0 - 255) or UIColors enumerator or NothingEnum enumerator."
                },
                {
                    "name": "inverse",
                    "readonly": false,
                    "type": "Mixed",
                    "array": false,
                    "description": "If true, inverts the text wrap. Can return: Boolean or NothingEnum enumerator."
                },
                {
                    "name": "contourType",
                    "readonly": false,
                    "type": "Mixed",
                    "array": false,
                    "description": "The contour type. Can return: ContourOptionsTypes enumerator or NothingEnum enumerator."
                },
                {
                    "name": "includeInsideEdges",
                    "readonly": false,
                    "type": "Mixed",
                    "array": false,
                    "description": "If true, creates interior clipping paths within the surrounding clipping path. Note: Valid only when clipping type is alpha channel or detect edges. . Can return: Boolean or NothingEnum enumerator."
                },
                {
                    "name": "anchoredPosition",
                    "readonly": false,
                    "type": "Mixed",
                    "array": false,
                    "description": "The position of the anchored object relative to the anchor. Can return: AnchorPosition enumerator or NothingEnum enumerator."
                },
                {
                    "name": "spineRelative",
                    "readonly": false,
                    "type": "Mixed",
                    "array": false,
                    "description": "If true, the position of the anchored object is relative to the binding spine of the page or spread. Can return: Boolean or NothingEnum enumerator."
                },
                {
                    "name": "lockPosition",
                    "readonly": false,
                    "type": "Mixed",
                    "array": false,
                    "description": "If true, prevents manual positioning of the anchored object. Can return: Boolean or NothingEnum enumerator."
                },
                {
                    "name": "pinPosition",
                    "readonly": false,
                    "type": "Mixed",
                    "array": false,
                    "description": "If true, pins the position of the anchored object within the text frame top and bottom. Can return: Boolean or NothingEnum enumerator."
                },
                {
                    "name": "anchorPoint",
                    "readonly": false,
                    "type": "Mixed",
                    "array": false,
                    "description": "The point in the anchored object to position. Can return: AnchorPoint enumerator or NothingEnum enumerator."
                },
                {
                    "name": "horizontalReferencePoint",
                    "readonly": false,
                    "type": "Mixed",
                    "array": false,
                    "description": "The horizontal reference point on the page. Valid only when anchored position is custom. Can return: AnchoredRelativeTo enumerator or NothingEnum enumerator."
                },
                {
                    "name": "verticalReferencePoint",
                    "readonly": false,
                    "type": "Mixed",
                    "array": false,
                    "description": "The vertical reference point on the page. Valid when anchored position is custom. Can return: VerticallyRelativeTo enumerator or NothingEnum enumerator."
                },
                {
                    "name": "anchorXoffset",
                    "readonly": false,
                    "type": "Mixed",
                    "array": false,
                    "description": "The horizontal (x) offset of the anchored object. Can return: Unit or NothingEnum enumerator."
                },
                {
                    "name": "anchorYoffset",
                    "readonly": false,
                    "type": "Mixed",
                    "array": false,
                    "description": "The vertical (y) offset of the anchored object. Corresponds to the space after property for above line positioning. Can return: Unit or NothingEnum enumerator."
                },
                {
                    "name": "anchorSpaceAbove",
                    "readonly": false,
                    "type": "Mixed",
                    "array": false,
                    "description": "The space above an above-line anchored object. Can return: Unit or NothingEnum enumerator."
                },
                {
                    "name": "opticalMarginAlignment",
                    "readonly": false,
                    "type": "Mixed",
                    "array": false,
                    "description": "If true, adjust the position of characters at the edges of the frame to provide a better appearance. Can return: Boolean or NothingEnum enumerator."
                },
                {
                    "name": "opticalMarginSize",
                    "readonly": false,
                    "type": "Mixed",
                    "array": false,
                    "description": "The point size used as the basis for calculating optical margin alignment. (Range: 0.1 to 1296). Can return: Unit (0.1 - 1296 points) or NothingEnum enumerator."
                },
                {
                    "name": "leftCrop",
                    "readonly": false,
                    "type": "Mixed",
                    "array": false,
                    "description": "The amount in measurement units to crop the left edge of a graphic. Can return: Unit or NothingEnum enumerator."
                },
                {
                    "name": "topCrop",
                    "readonly": false,
                    "type": "Mixed",
                    "array": false,
                    "description": "The amount in measurement units to crop the top edge of a graphic. Can return: Unit or NothingEnum enumerator."
                },
                {
                    "name": "rightCrop",
                    "readonly": false,
                    "type": "Mixed",
                    "array": false,
                    "description": "The amount in measurement units to crop the right edge of a graphic. Can return: Unit or NothingEnum enumerator."
                },
                {
                    "name": "bottomCrop",
                    "readonly": false,
                    "type": "Mixed",
                    "array": false,
                    "description": "The amount in measurement units to crop the bottom edge of a graphic. Can return: Unit or NothingEnum enumerator."
                },
                {
                    "name": "fittingOnEmptyFrame",
                    "readonly": false,
                    "type": "Mixed",
                    "array": false,
                    "description": "The frame fitting option to apply to placed or pasted content if the frame is empty. Can be applied to a frame, object style, or document or to the application. Can return: EmptyFrameFittingOptions enumerator or NothingEnum enumerator."
                },
                {
                    "name": "fittingAlignment",
                    "readonly": false,
                    "type": "Mixed",
                    "array": false,
                    "description": "The point with which to align the image empty when fitting in a frame. For information, see frame fitting options. Can return: AnchorPoint enumerator or NothingEnum enumerator."
                },
                {
                    "name": "topLeftCornerOption",
                    "readonly": false,
                    "type": "Mixed",
                    "array": false,
                    "description": "The shape to be applied to the top left corner of rectangular shapes and all corners of non-rectangular shapes.Note: corner option differs from end join in which you can set a radius for a corner option, whereas the rounded or beveled effect of an end join depends on the stroke weight. Can return: CornerOptions enumerator or NothingEnum enumerator."
                },
                {
                    "name": "topRightCornerOption",
                    "readonly": false,
                    "type": "Mixed",
                    "array": false,
                    "description": "The shape to apply to the top right corner of rectangular shapes. Can return: CornerOptions enumerator or NothingEnum enumerator."
                },
                {
                    "name": "bottomLeftCornerOption",
                    "readonly": false,
                    "type": "Mixed",
                    "array": false,
                    "description": "The shape to apply to the bottom left corner of rectangular shapes. Can return: CornerOptions enumerator or NothingEnum enumerator."
                },
                {
                    "name": "bottomRightCornerOption",
                    "readonly": false,
                    "type": "Mixed",
                    "array": false,
                    "description": "The shape to apply to the bottom right corner of rectangular shapes. Can return: CornerOptions enumerator or NothingEnum enumerator."
                },
                {
                    "name": "topLeftCornerRadius",
                    "readonly": false,
                    "type": "Mixed",
                    "array": false,
                    "description": "The radius in measurement units of the corner effect applied to the top left corner of rectangular shapes and all corners of non-rectangular shapes. Can return: Unit or NothingEnum enumerator."
                },
                {
                    "name": "topRightCornerRadius",
                    "readonly": false,
                    "type": "Mixed",
                    "array": false,
                    "description": "The radius in measurement units of the corner effect applied to the top right corner of rectangular shapes. Can return: Unit or NothingEnum enumerator."
                },
                {
                    "name": "bottomLeftCornerRadius",
                    "readonly": false,
                    "type": "Mixed",
                    "array": false,
                    "description": "The radius in measurement units of the corner effect applied to the bottom left corner of rectangular shapes. Can return: Unit or NothingEnum enumerator."
                },
                {
                    "name": "bottomRightCornerRadius",
                    "readonly": false,
                    "type": "Mixed",
                    "array": false,
                    "description": "The radius in measurement units of the corner effect applied to the bottom right corner of rectangular shapes. Can return: Unit or NothingEnum enumerator."
                },
                {
                    "name": "autoSizingType",
                    "readonly": false,
                    "type": "Mixed",
                    "array": false,
                    "description": "Auto-sizing type of text frame. Based on type, reference value is automatically adjusted. For example, for height only type, top-left reference point becomes top-center. Recommended to change auto-sizing type, after setting other auto-sizing attributes. Can return: AutoSizingTypeEnum enumerator or NothingEnum enumerator."
                },
                {
                    "name": "autoSizingReferencePoint",
                    "readonly": false,
                    "type": "Mixed",
                    "array": false,
                    "description": "The reference point for auto sizing of text frame. Reference point is automatically adjusted to the suitable value depending on the auto-sizing type value. As an example, top left reference point becomes top center for height only dimension. Can return: AutoSizingReferenceEnum enumerator or NothingEnum enumerator."
                },
                {
                    "name": "useMinimumHeightForAutoSizing",
                    "readonly": false,
                    "type": "Mixed",
                    "array": false,
                    "description": "If true, minimum height value is used during the auto-sizing of text frame. . Can return: Boolean or NothingEnum enumerator."
                },
                {
                    "name": "minimumHeightForAutoSizing",
                    "readonly": false,
                    "type": "Mixed",
                    "array": false,
                    "description": "The minimum height for auto-sizing of the text frame. Can return: Unit or NothingEnum enumerator."
                },
                {
                    "name": "useMinimumWidthForAutoSizing",
                    "readonly": false,
                    "type": "Mixed",
                    "array": false,
                    "description": "If true, minimum width value is used during the auto-sizing of text frame. . Can return: Boolean or NothingEnum enumerator."
                },
                {
                    "name": "minimumWidthForAutoSizing",
                    "readonly": false,
                    "type": "Mixed",
                    "array": false,
                    "description": "The minimum width for auto-sizing of the text frame. Can return: Unit or NothingEnum enumerator."
                },
                {
                    "name": "useNoLineBreaksForAutoSizing",
                    "readonly": false,
                    "type": "Mixed",
                    "array": false,
                    "description": "If true, line-breaks are not introduced after auto sizing. . Can return: Boolean or NothingEnum enumerator."
                },
                {
                    "name": "arrowHeadAlignment",
                    "readonly": false,
                    "type": "Mixed",
                    "array": false,
                    "description": "The arrowhead alignment applied to the FindObjectPreference. Can return: ArrowHeadAlignmentEnum enumerator or NothingEnum enumerator."
                },
                {
                    "name": "leftArrowHeadScale",
                    "readonly": false,
                    "type": "Mixed",
                    "array": false,
                    "description": "The scaling applied to the arrowhead at the start of the path. (Range: 1 to 1000). Can return: Real or NothingEnum enumerator."
                },
                {
                    "name": "rightArrowHeadScale",
                    "readonly": false,
                    "type": "Mixed",
                    "array": false,
                    "description": "The scaling applied to the arrowhead at the end of the path. (Range: 1 to 1000). Can return: Real or NothingEnum enumerator."
                },
                {
                    "name": "properties",
                    "readonly": false,
                    "type": "Object",
                    "array": false,
                    "description": "A property that allows setting of several properties at the same time."
                }
            ],
            "methods": [
                {
                    "name": "altText",
                    "parameters": [],
                    "description": "Provides the alternate text for the object",
                    "type": "String",
                    "array": false
                },
                {
                    "name": "actualText",
                    "parameters": [],
                    "description": "Provides the actual text for the object",
                    "type": "String",
                    "array": false
                },
                {
                    "name": "toSource",
                    "parameters": [],
                    "description": "Generates a string which, if executed, will return the FindObjectPreference.",
                    "type": "String",
                    "array": false
                },
                {
                    "name": "getElements",
                    "parameters": [],
                    "description": "Resolves the object specifier, creating an array of object references.",
                    "type": "FindObjectPreference",
                    "array": true
                },
                {
                    "name": "toSpecifier",
                    "parameters": [],
                    "description": "Retrieves the object specifier.",
                    "type": "String",
                    "array": false
                },
                {
                    "name": "addEventListener",
                    "parameters": [
                        {
                            "name": "eventType",
                            "type": "String",
                            "array": false,
                            "optional": false,
                            "description": "The event type."
                        },
                        {
                            "name": "handler",
                            "type": "Mixed",
                            "array": false,
                            "optional": false,
                            "description": "The event handler. Can accept: File or JavaScript Function."
                        },
                        {
                            "name": "captures",
                            "type": "Boolean",
                            "array": false,
                            "optional": true,
                            "description": "This parameter is obsolete. (Optional)",
                            "value": "false"
                        }
                    ],
                    "description": "Adds an event listener.",
                    "type": "EventListener",
                    "array": false
                },
                {
                    "name": "removeEventListener",
                    "parameters": [
                        {
                            "name": "eventType",
                            "type": "String",
                            "array": false,
                            "optional": false,
                            "description": "The registered event type."
                        },
                        {
                            "name": "handler",
                            "type": "Mixed",
                            "array": false,
                            "optional": false,
                            "description": "The registered event handler. Can accept: File or JavaScript Function."
                        },
                        {
                            "name": "captures",
                            "type": "Boolean",
                            "array": false,
                            "optional": true,
                            "description": "This parameter is obsolete. (Optional)",
                            "value": "false"
                        }
                    ],
                    "description": "Removes the event listener.",
                    "type": "Boolean",
                    "array": false
                }
            ]
        }
    },
    "description": "Find object preferences.",
    "superclass": "Preference"
}