{
  "name": "Groups",
  "dynamic": true,
  "shortdesc": "A collection of groups.",
  "elements": [
    {
      "type": "instance",
      "method": [
        {
          "name": "count",
          "shortdesc": "Displays the number of elements in the Group.",
          "datatype": {
            "type": "Number"
          }
        },
        {
          "name": "add",
          "shortdesc": "Creates a new Group.",
          "parameters": [
            {
              "name": "groupItems",
              "shortdesc": "The objects to group.",
              "datatype": {
                "type": "PageItem",
                "array": true
              }
            },
            {
              "name": "layer",
              "shortdesc": "The layer on which to create the Group. ",
              "datatype": {
                "type": "Layer"
              },
              "optional": true
            },
            {
              "name": "at",
              "optional": true,
              "shortdesc": "The location at which to insert the Group relative to the reference object or within the container object. ",
              "datatype": {
                "type": "LocationOptions",
                "value": "LocationOptions.UNKNOWN"
              }
            },
            {
              "name": "reference",
              "shortdesc": "The reference object. Note: Required when the at parameter is before or after. Can accept: Document, Spread, MasterSpread, Page, Layer or PageItem. ",
              "datatype": {
                "type": "Mixed"
              },
              "optional": true
            },
            {
              "name": "withProperties",
              "shortdesc": "Initial values for properties of the new Group ",
              "datatype": {
                "type": "Object"
              },
              "optional": true
            }
          ],
          "datatype": {
            "type": "Group"
          }
        },
        {
          "name": "item",
          "shortdesc": "Returns the Group with the specified index or name.",
          "parameters": [
            {
              "name": "index",
              "shortdesc": "The index or name. Can accept: Long Integer or String.",
              "datatype": {
                "type": "Mixed"
              }
            }
          ],
          "datatype": {
            "type": "Group"
          }
        },
        {
          "name": "itemByName",
          "shortdesc": "Returns the Group with the specified name.",
          "parameters": [
            {
              "name": "name",
              "shortdesc": "The name.",
              "datatype": {
                "type": "String"
              }
            }
          ],
          "datatype": {
            "type": "Group"
          }
        },
        {
          "name": "itemByID",
          "shortdesc": "Returns the Group with the specified ID.",
          "parameters": [
            {
              "name": "id",
              "shortdesc": "The ID.",
              "datatype": {
                "type": "Number"
              }
            }
          ],
          "datatype": {
            "type": "Group"
          }
        },
        {
          "name": "itemByRange",
          "shortdesc": "Returns the Groups within the specified range.",
          "parameters": [
            {
              "name": "from",
              "shortdesc": "The Group, index, or name at the beginning of the range. Can accept: Group, Long Integer or String.",
              "datatype": {
                "type": "Mixed"
              }
            },
            {
              "name": "to",
              "shortdesc": "The Group, index, or name at the end of the range. Can accept: Group, Long Integer or String.",
              "datatype": {
                "type": "Mixed"
              }
            }
          ],
          "datatype": {
            "type": "Group",
            "array": true
          }
        },
        {
          "name": "firstItem",
          "shortdesc": "Returns the first Group in the collection.",
          "datatype": {
            "type": "Group"
          }
        },
        {
          "name": "lastItem",
          "shortdesc": "Returns the last Group in the collection.",
          "datatype": {
            "type": "Group"
          }
        },
        {
          "name": "middleItem",
          "shortdesc": "Returns the middle Group in the collection.",
          "datatype": {
            "type": "Group"
          }
        },
        {
          "name": "previousItem",
          "shortdesc": "Returns the Group with the index previous to the specified index.",
          "parameters": [
            {
              "name": "obj",
              "shortdesc": "The index of the Group that follows the desired Group.",
              "datatype": {
                "type": "Group"
              }
            }
          ],
          "datatype": {
            "type": "Group"
          }
        },
        {
          "name": "nextItem",
          "shortdesc": "Returns the Group whose index follows the specified Group in the collection.",
          "parameters": [
            {
              "name": "obj",
              "shortdesc": "The Group whose index comes before the desired Group.",
              "datatype": {
                "type": "Group"
              }
            }
          ],
          "datatype": {
            "type": "Group"
          }
        },
        {
          "name": "anyItem",
          "shortdesc": "Returns any Group in the collection.",
          "datatype": {
            "type": "Group"
          }
        },
        {
          "name": "everyItem",
          "shortdesc": "Returns every Group in the collection.",
          "datatype": {
            "type": "Group",
            "array": true
          }
        },
        {
          "name": "toSource",
          "shortdesc": "Generates a string which, if executed, will return the Group.",
          "datatype": {
            "type": "String"
          }
        },
        {
          "name": "[]",
          "shortdesc": "Returns the Group with the specified index.",
          "parameters": [
            {
              "name": "index",
              "shortdesc": "The index.",
              "datatype": {
                "type": "Number"
              }
            }
          ],
          "datatype": {
            "type": "Group"
          }
        }
      ],
      "property": [
        {
          "name": "length",
          "rwaccess": "readonly",
          "shortdesc": "The number of objects in the collection.",
          "datatype": {
            "type": "Number"
          }
        }
      ]
    }
  ]
}