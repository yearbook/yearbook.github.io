{
    "name": "FilterDescription",
    "dynamic": true,
    "elements": {
        "class": {
            "properties": [],
            "methods": []
        },
        "constructors": {
            "methods": []
        },
        "instance": {
            "properties": [
                {
                    "name": "name",
                    "readonly": false,
                    "type": "String",
                    "array": false,
                    "description": "The unique identifying name of the filter.",
                    "longdesc": " If there is no displayName, this is shown in the heading line for this filter in the Filter pane."
                },
                {
                    "name": "displayName",
                    "readonly": false,
                    "type": "String",
                    "array": false,
                    "description": "A localized name for this filter, shown in the heading line for this filter in the Filter pane.",
                    "longdesc": " If not supplied, the name value is used."
                },
                {
                    "name": "xmpNamespace",
                    "readonly": false,
                    "type": "String",
                    "array": false,
                    "description": "The namespace of the XMP property used as a filter."
                },
                {
                    "name": "xmpProperty",
                    "readonly": false,
                    "type": "String",
                    "array": false,
                    "description": "The key name of the XMP property used as a filter."
                },
                {
                    "name": "infosetMember",
                    "readonly": false,
                    "type": "String",
                    "array": false,
                    "description": "The name of the node property to use as a filter, as defined in the InfosetMemberDescription object.",
                    "longdesc": "The filter property must be either an XMP metadata property or an Infoset object node-data property; if both are defined, the XMP property takes precedence and the node-data property is ignored."
                },
                {
                    "name": "isExclusive",
                    "readonly": false,
                    "type": "Boolean",
                    "array": false,
                    "description": "When true, only one of the filter values can be set at a time. ",
                    "longdesc": "When true, selecting one value in the Filter pane automatically deselects other values."
                },
                {
                    "name": "closedValueList",
                    "readonly": false,
                    "type": "Array",
                    "array": false,
                    "description": "The set of allowed values for the XMP property, if it has a closed value list. ",
                    "longdesc": "An array of string values. When a property has a closed value list, the Filter palette does not count nodes that have no value for the property. You can cause it to do so by adding the empty string to this list. Empty for properties with open value types. In this case, the Filter palette displays all values found in nodes in the current scope."
                },
                {
                    "name": "filterType",
                    "readonly": false,
                    "type": "String",
                    "array": false,
                    "description": "The data type of filter-property value, used in sorting the list of values. ",
                    "longdesc": "String comparisons are case-insensitive. One of: date, dimensions, label, number, orientation, rating, string, stringList"
                }
            ],
            "methods": []
        }
    },
    "description": "Provides programmatic control and customization of the Filter Panel, which allows the user to organize and filter the display of thumbnails in the Content pane.",
    "longdesc": "Filters are applied to children of a container node when Adobe Bridge needs to display that container's contents in the Content pane, or display a list of children in a menu. A filter description identifies a metadata property (from embedded XMP metadata) or a node property (from a node-handler-defined Infoset Object) to display in the Filter palette. The Filter palette displays each filter property, with a line under each property for each value it finds for that property in any child node. The filter description can provide a narrower list of allowed values to display for an XMP property, if the property has a closed value list.When the user selects a filter, a child node is displayed only if it contains the selected filter property and value.The list of filter objects that Adobe Bridge uses by default to populate the Filter palette is kept in  app.defaultFilterCriteria. When displaying a handled container node, Adobe Bridge builds the list of filters by calling the developer-defined getFilterCriteria() method of the node's ExtensionModel object. Your implementation of this method can create these filter objects, and use them to replace, modify, or add to the default list."
}