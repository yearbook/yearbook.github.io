{
    "name": "Scope",
    "dynamic": true,
    "elements": {
        "class": {
            "properties": [],
            "methods": []
        },
        "constructors": {
            "methods": []
        },
        "instance": {
            "properties": [
                {
                    "name": "valueName",
                    "readonly": false,
                    "type": "String",
                    "array": false,
                    "description": "The unique identifying name for the scope modifier. "
                },
                {
                    "name": "displayName",
                    "readonly": false,
                    "type": "String",
                    "array": false,
                    "description": "The localized display name for the corresponding field in the Find dialog.",
                    "longdesc": " If not supplied, the valueName is used."
                }
            ],
            "methods": []
        }
    },
    "description": "A helper object for node searches.",
    "longdesc": "Identifies a scope modifier to use in node searches among handled nodes. The modifier can expand or limit the scope of the search from the original target node. The scope value and usage is defined entirely by the node's ExtensionModel.getSearchDefinition() implementation.An array of these objects, kept in SearchDefinition.scopeSpecifiers, is used to populate the Find dialog. The box displays a check box for each possible scope extension or limitation. When the user selects a scope, its name becomes the resulting SearchSpecification.scopeSpecifiers value."
}