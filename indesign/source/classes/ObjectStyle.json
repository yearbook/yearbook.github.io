{
  "name": "ObjectStyle",
  "dynamic": true,
  "shortdesc": "An object style.",
  "elements": [
    {
      "type": "instance",
      "property": [
        {
          "name": "objectExportOptions",
          "rwaccess": "readonly",
          "shortdesc": "Export options for the object",
          "datatype": {
            "type": "ObjectExportOption"
          }
        },
        {
          "name": "transparencySettings",
          "rwaccess": "readonly",
          "shortdesc": "Transparency settings.",
          "datatype": {
            "type": "TransparencySetting"
          }
        },
        {
          "name": "strokeTransparencySettings",
          "rwaccess": "readonly",
          "shortdesc": "Transparency settings for the stroke.",
          "datatype": {
            "type": "StrokeTransparencySetting"
          }
        },
        {
          "name": "fillTransparencySettings",
          "rwaccess": "readonly",
          "shortdesc": "Transparency settings for the fill applied to the ObjectStyle.",
          "datatype": {
            "type": "FillTransparencySetting"
          }
        },
        {
          "name": "contentTransparencySettings",
          "rwaccess": "readonly",
          "shortdesc": "Transparency settings for the content of the ObjectStyle.",
          "datatype": {
            "type": "ContentTransparencySetting"
          }
        },
        {
          "name": "objectEffectsEnablingSettings",
          "rwaccess": "readonly",
          "shortdesc": "The object effects enabling settings.",
          "datatype": {
            "type": "ObjectStyleObjectEffectsCategorySettings"
          }
        },
        {
          "name": "strokeEffectsEnablingSettings",
          "rwaccess": "readonly",
          "shortdesc": "The stroke effects enabling settings.",
          "datatype": {
            "type": "ObjectStyleStrokeEffectsCategorySettings"
          }
        },
        {
          "name": "fillEffectsEnablingSettings",
          "rwaccess": "readonly",
          "shortdesc": "The fill effects enabling settings.",
          "datatype": {
            "type": "ObjectStyleFillEffectsCategorySettings"
          }
        },
        {
          "name": "contentEffectsEnablingSettings",
          "rwaccess": "readonly",
          "shortdesc": "The content effects enabling settings.",
          "datatype": {
            "type": "ObjectStyleContentEffectsCategorySettings"
          }
        },
        {
          "name": "id",
          "rwaccess": "readonly",
          "shortdesc": "The unique ID of the ObjectStyle.",
          "datatype": {
            "type": "Number"
          }
        },
        {
          "name": "isValid",
          "rwaccess": "readonly",
          "shortdesc": "Returns true if the object specifier resolves to valid objects.",
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "parent",
          "rwaccess": "readonly",
          "shortdesc": "The parent of the ObjectStyle &#40;a Document, Application or ObjectStyleGroup).",
          "datatype": {
            "type": "Mixed"
          }
        },
        {
          "name": "index",
          "rwaccess": "readonly",
          "shortdesc": "The index of the ObjectStyle within its containing object.",
          "datatype": {
            "type": "Number"
          }
        },
        {
          "name": "events",
          "rwaccess": "readonly",
          "shortdesc": "A collection of events.",
          "datatype": {
            "type": "Events"
          }
        },
        {
          "name": "eventListeners",
          "rwaccess": "readonly",
          "shortdesc": "A collection of event listeners.",
          "datatype": {
            "type": "EventListeners"
          }
        },
        {
          "name": "objectStyleExportTagMaps",
          "rwaccess": "readonly",
          "shortdesc": "A collection of object style export tag maps.",
          "datatype": {
            "type": "ObjectStyleExportTagMaps"
          }
        },
        {
          "name": "preferences",
          "rwaccess": "readonly",
          "shortdesc": "A collection of preferences objects.",
          "datatype": {
            "type": "Preferences"
          }
        },
        {
          "name": "enableTextFrameAutoSizingOptions",
          "shortdesc": "If true, the object style will apply auto-sizing text frame options.",
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "enableExportTagging",
          "shortdesc": "If true, the object style will apply an epub tag and class.",
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "enableObjectExportAltTextOptions",
          "shortdesc": "If true, the object style will apply alt text export options.",
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "enableObjectExportTaggedPdfOptions",
          "shortdesc": "If true, the object style will apply tagged pdf export options.",
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "enableObjectExportEpubOptions",
          "shortdesc": "If true, the object style will apply epub export options.",
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "basedOn",
          "shortdesc": "The style that this style is based on. Can return: ObjectStyle or String.",
          "datatype": {
            "type": "Mixed"
          }
        },
        {
          "name": "name",
          "shortdesc": "The name of the ObjectStyle.",
          "datatype": {
            "type": "String"
          }
        },
        {
          "name": "appliedParagraphStyle",
          "shortdesc": "The paragraph style applied to the text. Can also accept: String.",
          "datatype": {
            "type": "ParagraphStyle"
          }
        },
        {
          "name": "applyNextParagraphStyle",
          "shortdesc": "If true, applies paragraph styles using Next Paragraph Style settings, beginning with the Next Paragraph Style defined in the paragraph style associated with the object style &#40;if any).",
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "enableFill",
          "shortdesc": "If true, the object style will apply a fill.",
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "enableStroke",
          "shortdesc": "If true, the object style will apply a stroke.",
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "enableParagraphStyle",
          "shortdesc": "If true, the object style will apply a paragraph style.",
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "enableTextFrameGeneralOptions",
          "shortdesc": "If true, the object style will apply general text frame options.",
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "enableTextFrameBaselineOptions",
          "shortdesc": "If true, the object style will apply baseline text frame options.",
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "enableStoryOptions",
          "shortdesc": "If true, the object style will apply story options.",
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "enableTextWrapAndOthers",
          "shortdesc": "If true, the object style will apply text wrap, contour, and non-printing settings.",
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "enableAnchoredObjectOptions",
          "shortdesc": "If true, the object style will apply an anchored object setting.",
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "fillColor",
          "shortdesc": "The swatch &#40;color, gradient, tint, or mixed ink) applied to the fill of the ObjectStyle. . Can also accept: String.",
          "datatype": {
            "type": "Swatch"
          }
        },
        {
          "name": "fillTint",
          "shortdesc": "The percent of tint to use in the ObjectStyle's fill color. &#40;To specify a tint percent, use a number in the range of 0 to 100; to use the inherited or overridden value, use -1.)",
          "datatype": {
            "type": "Number"
          }
        },
        {
          "name": "overprintFill",
          "shortdesc": "If true, the ObjectStyle's fill color overprints any underlying objects. If false, the fill color knocks out the underlying colors.",
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "strokeWeight",
          "shortdesc": "The weight &#40;in points) to apply to the ObjectStyle's stroke.",
          "datatype": {
            "type": "Measurement Unit &amp;&#35;40;Number or String&#41;=any"
          }
        },
        {
          "name": "miterLimit",
          "shortdesc": "The limit of the ratio of stroke width to miter length before a miter &#40;pointed) join becomes a bevel (squared-off) join.",
          "datatype": {
            "type": "Number",
            "min": 1,
            "max": 500,
            "value": 4
          }
        },
        {
          "name": "endCap",
          "shortdesc": "The end shape of an open path.",
          "datatype": {
            "type": "EndCap"
          }
        },
        {
          "name": "endJoin",
          "shortdesc": "The corner join applied to the ObjectStyle.",
          "datatype": {
            "type": "EndJoin"
          }
        },
        {
          "name": "strokeType",
          "shortdesc": "The name of the stroke style to apply. Can also accept: String.",
          "datatype": {
            "type": "StrokeStyle"
          }
        },
        {
          "name": "leftLineEnd",
          "shortdesc": "The arrowhead applied to the start of the path.",
          "datatype": {
            "type": "ArrowHead"
          }
        },
        {
          "name": "rightLineEnd",
          "shortdesc": "The arrowhead applied to the end of the path.",
          "datatype": {
            "type": "ArrowHead"
          }
        },
        {
          "name": "strokeColor",
          "shortdesc": "The swatch &#40;color, gradient, tint, or mixed ink) applied to the stroke of the ObjectStyle. Can also accept: String.",
          "datatype": {
            "type": "Swatch"
          }
        },
        {
          "name": "strokeTint",
          "shortdesc": "The percent of tint to use in object's stroke color. &#40;To specify a tint percent, use a number in the range of 0 to 100; to use the inherited or overridden value, use -1.)",
          "datatype": {
            "type": "Number"
          }
        },
        {
          "name": "overprintStroke",
          "shortdesc": "If true, the ObjectStyle's stroke color overprints any underlying objects. If false, the stroke color knocks out the  underlying colors.",
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "gapColor",
          "shortdesc": "The swatch &#40;color, gradient, tint, or mixed ink) applied to the gap of a dashed, dotted, or striped stroke. For information, see stroke type.",
          "datatype": {
            "type": "Swatch"
          }
        },
        {
          "name": "gapTint",
          "shortdesc": "The tint as a percentage of the gap color. &#40;To specify a tint percent, use a number in the range of 0 to 100; to use the inherited or overridden value, use -1.)",
          "datatype": {
            "type": "Number"
          }
        },
        {
          "name": "overprintGap",
          "shortdesc": "If true, the gap color overprints any underlying colors. If false, the gap color knocks out the underlying colors.",
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "strokeAlignment",
          "shortdesc": "The stroke alignment applied to the ObjectStyle.",
          "datatype": {
            "type": "StrokeAlignment"
          }
        },
        {
          "name": "nonprinting",
          "shortdesc": "If true, the ObjectStyle does not print.",
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "gradientFillAngle",
          "shortdesc": "The angle of a linear gradient applied to the fill of the ObjectStyle. &#40;Range: -180 to 180)",
          "datatype": {
            "type": "Number"
          }
        },
        {
          "name": "gradientStrokeAngle",
          "shortdesc": "The angle of a linear gradient applied to the stroke of the ObjectStyle. &#40;Range: -180 to 180)",
          "datatype": {
            "type": "Number"
          }
        },
        {
          "name": "textFramePreferences",
          "shortdesc": "Text frame preference settings.",
          "datatype": {
            "type": "TextFramePreference"
          }
        },
        {
          "name": "baselineFrameGridOptions",
          "shortdesc": "Baseline frame grid option settings.",
          "datatype": {
            "type": "BaselineFrameGridOption"
          }
        },
        {
          "name": "anchoredObjectSettings",
          "shortdesc": "Anchored object settings.",
          "datatype": {
            "type": "AnchoredObjectSetting"
          }
        },
        {
          "name": "textWrapPreferences",
          "shortdesc": "The text wrap preference properties that define the default formatting for wrapping text around objects.",
          "datatype": {
            "type": "TextWrapPreference"
          }
        },
        {
          "name": "storyPreferences",
          "shortdesc": "Story preference settings.",
          "datatype": {
            "type": "StoryPreference"
          }
        },
        {
          "name": "topLeftCornerOption",
          "shortdesc": "The shape to be applied to the top left corner of rectangular shapes and all corners of non-rectangular shapes.Note: corner option differs from end join in which you can set a radius for a corner option, whereas the rounded or beveled effect of an end join depends on the stroke weight.",
          "datatype": {
            "type": "CornerOptions"
          }
        },
        {
          "name": "topRightCornerOption",
          "shortdesc": "The shape to apply to the top right corner of rectangular shapes",
          "datatype": {
            "type": "CornerOptions"
          }
        },
        {
          "name": "bottomLeftCornerOption",
          "shortdesc": "The shape to apply to the bottom left corner of rectangular shapes.",
          "datatype": {
            "type": "CornerOptions"
          }
        },
        {
          "name": "bottomRightCornerOption",
          "shortdesc": "The shape to apply to the bottom right corner of rectangular shapes.",
          "datatype": {
            "type": "CornerOptions"
          }
        },
        {
          "name": "topLeftCornerRadius",
          "shortdesc": "The radius in measurement units of the corner effect applied to the top left corner of rectangular shapes and all corners of non-rectangular shapes",
          "datatype": {
            "type": "Measurement Unit &amp;&#35;40;Number or String&#41;=any"
          }
        },
        {
          "name": "topRightCornerRadius",
          "shortdesc": "The radius in measurement units of the corner effect applied to the top right corner of rectangular shapes",
          "datatype": {
            "type": "Measurement Unit &amp;&#35;40;Number or String&#41;=any"
          }
        },
        {
          "name": "bottomLeftCornerRadius",
          "shortdesc": "The radius in measurement units of the corner effect applied to the bottom left corner of rectangular shapes",
          "datatype": {
            "type": "Measurement Unit &amp;&#35;40;Number or String&#41;=any"
          }
        },
        {
          "name": "bottomRightCornerRadius",
          "shortdesc": "The radius in measurement units of the corner effect applied to the bottom right corner of rectangular shapes",
          "datatype": {
            "type": "Measurement Unit &amp;&#35;40;Number or String&#41;=any"
          }
        },
        {
          "name": "frameFittingOptions",
          "shortdesc": "The frame fitting option to apply to placed or pasted content. Can be applied to a frame, object style, or document or to the application.",
          "datatype": {
            "type": "FrameFittingOption"
          }
        },
        {
          "name": "enableFrameFittingOptions",
          "shortdesc": "If true, the object style will apply frame fitting options.",
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "enableStrokeAndCornerOptions",
          "shortdesc": "If true, the object style will apply stroke options and corner options.",
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "label",
          "shortdesc": "A property that can be set to any string.",
          "datatype": {
            "type": "String"
          }
        },
        {
          "name": "properties",
          "shortdesc": "A property that allows setting of several properties at the same time.",
          "datatype": {
            "type": "Object"
          }
        }
      ],
      "method": [
        {
          "name": "duplicate",
          "shortdesc": "Duplicates the ObjectStyle.",
          "datatype": {
            "type": "ObjectStyle"
          }
        },
        {
          "name": "move",
          "shortdesc": "Moves the ObjectStyle to the specified location.",
          "parameters": [
            {
              "name": "to",
              "shortdesc": "The new location relative to the reference object or within the container object.",
              "datatype": {
                "type": "LocationOptions"
              }
            },
            {
              "name": "reference",
              "shortdesc": "The reference object. Note: Required when the to parameter is before or after. Can accept: ObjectStyle, ObjectStyleGroup, Document or Application. &#40;Optional)",
              "datatype": {
                "type": "Mixed"
              }
            }
          ],
          "datatype": {
            "type": "ObjectStyle"
          }
        },
        {
          "name": "remove",
          "shortdesc": "Deletes the style.",
          "parameters": [
            {
              "name": "replacingWith",
              "shortdesc": "The style to apply in place of the deleted style. &#40;Optional)",
              "datatype": {
                "type": "ObjectStyle"
              }
            }
          ]
        },
        {
          "name": "insertLabel",
          "shortdesc": "Sets the label to the value associated with the specified key.",
          "parameters": [
            {
              "name": "key",
              "shortdesc": "The key.",
              "datatype": {
                "type": "String"
              }
            },
            {
              "name": "value",
              "shortdesc": "The value.",
              "datatype": {
                "type": "String"
              }
            }
          ]
        },
        {
          "name": "extractLabel",
          "shortdesc": "Gets the label value associated with the specified key.",
          "parameters": [
            {
              "name": "key",
              "shortdesc": "The key.",
              "datatype": {
                "type": "String"
              }
            }
          ],
          "datatype": {
            "type": "String"
          }
        },
        {
          "name": "toSource",
          "shortdesc": "Generates a string which, if executed, will return the ObjectStyle.",
          "datatype": {
            "type": "String"
          }
        },
        {
          "name": "getElements",
          "shortdesc": "Resolves the object specifier, creating an array of object references.",
          "datatype": {
            "type": "ObjectStyle",
            "array": true
          }
        },
        {
          "name": "toSpecifier",
          "shortdesc": "Retrieves the object specifier.",
          "datatype": {
            "type": "String"
          }
        },
        {
          "name": "addEventListener",
          "shortdesc": "Adds an event listener.",
          "parameters": [
            {
              "name": "eventType",
              "shortdesc": "The event type.",
              "datatype": {
                "type": "String"
              }
            },
            {
              "name": "handler",
              "shortdesc": "The event handler. Can accept: File or JavaScript Function.",
              "datatype": {
                "type": "Mixed"
              }
            },
            {
              "name": "captures",
              "optional": true,
              "shortdesc": "This parameter is obsolete. &#40;Optional)",
              "datatype": {
                "type": "Boolean",
                "value": false
              }
            }
          ],
          "datatype": {
            "type": "EventListener"
          }
        },
        {
          "name": "removeEventListener",
          "shortdesc": "Removes the event listener.",
          "parameters": [
            {
              "name": "eventType",
              "shortdesc": "The registered event type.",
              "datatype": {
                "type": "String"
              }
            },
            {
              "name": "handler",
              "shortdesc": "The registered event handler. Can accept: File or JavaScript Function.",
              "datatype": {
                "type": "Mixed"
              }
            },
            {
              "name": "captures",
              "optional": true,
              "shortdesc": "This parameter is obsolete. &#40;Optional)",
              "datatype": {
                "type": "Boolean",
                "value": false
              }
            }
          ],
          "datatype": {
            "type": "Boolean"
          }
        }
      ]
    }
  ]
}