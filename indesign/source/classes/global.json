{
  "name": "global",
  "dynamic": true,
  "shortdesc": "The global methods and properties for ExtendScript.",
  "elements": [
    {
      "type": "instance",
      "property": [
        {
          "name": "NaN",
          "shortdesc": "The NaN global property is a predefined variable with the value NaN &amp;&#35;40;Not-a-Number&#41;, as specified by the IEEE-754 standard.",
          "datatype": {
            "type": "number",
            "value": "NaN"
          }
        },
        {
          "name": null,
          "shortdesc": "The Infinity global property is a predefined variable with the value for infinity.",
          "datatype": {
            "type": "number",
            "value": null
          }
        },
        {
          "name": "undefined",
          "shortdesc": "This global property is a predefined variable with the value for an undefined value.",
          "datatype": {
            "type": "Undefined",
            "value": "undefined"
          }
        }
      ],
      "method": [
        {
          "name": "encodeURI",
          "shortdesc": "Encodes a string after RFC2396.",
          "description": "Create an UTF-8 ASCII encoded version of this string. The string is converted into UTF-8. Every non-alphanumeric character is encoded as a percent escapecharacter of the form %xx, where xx is the hex value of the character. After the conversion to UTF-8 encoding and escaping, it is guaranteed that the string does not contain characters codes greater than 127. The list of characters not to be encoded is -_.!~*&apos;&amp;&#35;40;&#41;;/?:@&amp;=+$,&amp;#35;. The method returns false on errors.",
          "parameters": {
            "parameter": [
              {
                "name": "text",
                "shortdesc": "The text to encode.",
                "datatype": {
                  "type": "string"
                }
              }
            ]
          },
          "datatype": {
            "type": "string"
          }
        },
        {
          "name": "encodeURIComponent",
          "shortdesc": "Encodes a string after RFC2396.",
          "description": "Create an UTF-8 ASCII encoded version of this string. The string is converted into UTF-8. Every non-alphanumeric character is encoded as a percent escapecharacter of the form %xx, where xx is the hex value of the character. After the conversion to UTF-8 encoding and escaping, it is guaranteed that the string does not contain characters codes greater than 127. The list of characters not to be encoded is -_.!~*&apos;&amp;&#35;40;&#41;. The method returns false on errors.",
          "parameters": {
            "parameter": [
              {
                "name": "text",
                "shortdesc": "The text to encode.",
                "datatype": {
                  "type": "string"
                }
              }
            ]
          },
          "datatype": {
            "type": "string"
          }
        },
        {
          "name": "decodeURI",
          "shortdesc": {
            "a": {
              "href": "#/global/instance/encodeURI",
              "$t": "encodeURI&amp;&#35;40;&#41;"
            }
          },
          "parameters": {
            "parameter": [
              {
                "name": "uri",
                "shortdesc": "The text to decode.",
                "datatype": {
                  "type": "string"
                }
              }
            ]
          },
          "datatype": {
            "type": "string"
          }
        },
        {
          "name": "decodeURIComponent",
          "shortdesc": {
            "a": {
              "href": "#/global/instance/encodeURIComponent",
              "$t": "encodeURIComponent&amp;&#35;40;&#41;"
            }
          },
          "parameters": {
            "parameter": [
              {
                "name": "uri",
                "shortdesc": "The text to decode.",
                "datatype": {
                  "type": "string"
                }
              }
            ]
          },
          "datatype": {
            "type": "string"
          }
        },
        {
          "name": "escape",
          "shortdesc": "Creates a URL-encoded string from aString.",
          "description": "In the new string, characters of aString that require URL encoding are replaced with the format %xx, where xx is the hexadecimal value of the character code in the Unicode character set.  This format is used to transmit information appended to a URL during, for example, execution of the GET method.  Use the unescape&amp;&#35;40;&#41; global function to translate the string back into its original format. Returns a string which is aString URL-encoded.",
          "parameters": {
            "parameter": [
              {
                "name": "aString",
                "shortdesc": "The string to be encoded.",
                "description": {},
                "datatype": {
                  "type": "string"
                }
              }
            ]
          },
          "datatype": {
            "type": "string"
          },
          "example": "escape&amp;&#35;40;aString&#41;"
        },
        {
          "name": "eval",
          "shortdesc": "Evaluates its argument as a JavaScript script, and returns the result of evaluation.",
          "description": "You can pass the result of an object&apos;s toSource&amp;&#35;40;&#41; method to reconstruct that object.",
          "parameters": {
            "parameter": [
              {
                "name": "stringExpression",
                "shortdesc": "The string to evaluate.",
                "description": {},
                "datatype": {
                  "type": "string"
                }
              }
            ]
          },
          "datatype": {
            "type": "any"
          },
          "example": "eval&amp;&#35;40;stringExpression&#41;"
        },
        {
          "name": "uneval",
          "shortdesc": "Creates a source code representation of the supplied argument, and returns it as a string.",
          "parameters": {
            "parameter": [
              {
                "name": "what",
                "shortdesc": "The object to uneval.",
                "datatype": {
                  "type": "any"
                }
              }
            ]
          },
          "datatype": {
            "type": "string"
          }
        },
        {
          "name": "isFinite",
          "shortdesc": "Evaluates an expression and reports whether the result is a finite number.",
          "description": "Returns true if the expression is a finite number, false otherwise. False if the value is infinity or negative infinity.",
          "parameters": {
            "parameter": [
              {
                "name": "expression",
                "shortdesc": "Any valid JavaScript expression.",
                "description": {},
                "datatype": {
                  "type": "number"
                }
              }
            ]
          },
          "datatype": {
            "type": "bool"
          },
          "example": "isFinite&amp;&#35;40;expression&#41;"
        },
        {
          "name": "isNaN",
          "shortdesc": "Evaluates an expression and reports whether the result is &quot;Not-a-Number\" &amp;&#35;40;NaN&#41;.",
          "description": "Returns true if the result of evaluation is not a number &amp;&#35;40;NaN&#41;, false if the value is a number.",
          "parameters": {
            "parameter": [
              {
                "name": "expression",
                "shortdesc": "Any valid JavaScript expression.",
                "description": {},
                "datatype": {
                  "type": "number"
                }
              }
            ]
          },
          "datatype": {
            "type": "bool"
          },
          "example": "isNaN&amp;&#35;40;expression&#41;"
        },
        {
          "name": "parseInt",
          "shortdesc": "Extracts an integer from a string.",
          "description": "Parses a string to find the first set of characters, in a specified base, that can be converted to an integer, and returns that integer, or NaN if it does not encounter characters that it can convert to a number.",
          "parameters": {
            "parameter": [
              {
                "name": "text",
                "shortdesc": "The string from which to extract an integer.",
                "description": {},
                "datatype": {
                  "type": "string"
                }
              },
              {
                "name": "base",
                "optional": true,
                "shortdesc": "The base of the string to parse &amp;&#35;40;from base 2 to base 36&#41;.",
                "description": "If not supplied, base is determined by the format of string.",
                "datatype": {
                  "type": "number",
                  "min": 2,
                  "max": 36
                }
              }
            ]
          },
          "datatype": {
            "type": "number"
          },
          "example": "parseInt&amp;&#35;40;aString, base&#41;"
        },
        {
          "name": "parseFloat",
          "shortdesc": "Extracts a floating-point number from a string.",
          "description": "Parses a string to find the first set of characters that can be converted to a floating point number, and returns that number, or NaN if it does not encounter characters that it can converted to a number.  The function supports exponential notation.",
          "parameters": {
            "parameter": [
              {
                "name": "text",
                "shortdesc": "The string from which to extract a floating point number.",
                "description": {},
                "datatype": {
                  "type": "string"
                }
              }
            ]
          },
          "datatype": {
            "type": "number"
          },
          "example": "parseFloat&amp;&#35;40;aString&#41;"
        },
        {
          "name": "unescape",
          "shortdesc": "Translates URL-encoded string into a regular string, and returns that string.",
          "description": "Use the escape&amp;&#35;40;&#41; global function to URL-encode strings.",
          "parameters": {
            "parameter": [
              {
                "name": "stringExpression",
                "shortdesc": "The URL-encoded string to convert.",
                "description": {},
                "datatype": {
                  "type": "string"
                }
              }
            ]
          },
          "datatype": {
            "type": "string"
          },
          "example": "unescape&amp;&#35;40;stringExpression&#41;"
        },
        {
          "name": "localize",
          "shortdesc": "Localizes a ZString-encoded string and merges additional arguments into the string.",
          "parameters": {
            "parameter": [
              {
                "name": "what",
                "shortdesc": "The string to localize. A ZString-encoded string that can contain placeholder for additional arguments in the form %1 to %n.",
                "datatype": {
                  "type": "string"
                }
              },
              {
                "name": "argument",
                "optional": true,
                "shortdesc": "Optional argument&amp;&#35;40;s&#41; to be merged into the string. There may be more than one argument.",
                "datatype": {
                  "type": "any"
                }
              }
            ]
          },
          "datatype": {
            "type": "string"
          }
        },
        {
          "name": "isXMLName",
          "shortdesc": "Returns true if the supplied string is a valid XML name.",
          "parameters": {
            "parameter": [
              {
                "name": "name",
                "shortdesc": "The XML name to test.",
                "datatype": {
                  "type": "string"
                }
              }
            ]
          },
          "datatype": {
            "type": "bool"
          }
        },
        {
          "name": "setDefaultXMLNamespace",
          "shortdesc": "Defines the default XML namespace.",
          "description": {
            "font": {
              "face": "_typewriter",
              "$t": "set default xml namespace"
            }
          },
          "parameters": {
            "parameter": [
              {
                "name": "namespace",
                "shortdesc": "The namespace to use.",
                "description": {
                  "a": {
                    "href": "#/Namespace",
                    "$t": "Namespace"
                  }
                },
                "datatype": {
                  "type": {
                    "href": "#/Namespace",
                    "$t": "Namespace"
                  }
                }
              }
            ]
          }
        },
        {
          "name": "alert",
          "shortdesc": "Displays an alert box",
          "parameters": {
            "parameter": [
              {
                "name": "message",
                "shortdesc": "The text to display",
                "datatype": {
                  "type": "string"
                }
              },
              {
                "name": "title",
                "optional": true,
                "shortdesc": "The title of the alert; ignored on the Macintosh",
                "datatype": {
                  "type": "string"
                }
              },
              {
                "name": "errorIcon",
                "shortdesc": "Display an Error icon; ignored on the Macintosh",
                "datatype": {
                  "type": "bool",
                  "value": false
                }
              }
            ]
          }
        },
        {
          "name": "confirm",
          "shortdesc": "Displays an alert box with Yes and No buttons; returns true for Yes",
          "parameters": {
            "parameter": [
              {
                "name": "message",
                "shortdesc": "The text to display",
                "datatype": {
                  "type": "string"
                }
              },
              {
                "name": "noAsDefault",
                "shortdesc": "Set to true to set the No button as the default button",
                "datatype": {
                  "type": "bool",
                  "value": false
                }
              },
              {
                "name": "title",
                "optional": true,
                "shortdesc": "The title of the alert; ignored on the Macintosh",
                "datatype": {
                  "type": "string"
                }
              }
            ]
          },
          "datatype": {
            "type": "bool"
          }
        },
        {
          "name": "prompt",
          "shortdesc": "Displays a dialog allowing the user to enter text",
          "description": "Returns null if the user cancelled the dialog, the text otherwise",
          "parameters": {
            "parameter": [
              {
                "name": "prompt",
                "shortdesc": "The text to display",
                "datatype": {
                  "type": "string"
                }
              },
              {
                "name": "default",
                "optional": true,
                "shortdesc": "The default text to preset the edit field with",
                "datatype": {
                  "type": "string"
                }
              },
              {
                "name": "title",
                "optional": true,
                "shortdesc": "The title of the dialog;",
                "datatype": {
                  "type": "string"
                }
              }
            ]
          },
          "datatype": {
            "type": "string"
          }
        }
      ]
    }
  ]
}