{
  "name": "HyphenationException",
  "dynamic": true,
  "shortdesc": "A hyphenation exceptions list.",
  "elements": [
    {
      "type": "instance",
      "property": [
        {
          "name": "name",
          "rwaccess": "readonly",
          "shortdesc": "The name of the HyphenationException.",
          "datatype": {
            "type": "string"
          }
        },
        {
          "name": "isValid",
          "rwaccess": "readonly",
          "shortdesc": "Returns true if the object specifier resolves to valid objects.",
          "datatype": {
            "type": "bool"
          }
        },
        {
          "name": "parent",
          "rwaccess": "readonly",
          "shortdesc": "The parent of the HyphenationException &amp;&#35;40;a Document&#41;.",
          "datatype": {
            "type": "Document"
          }
        },
        {
          "name": "index",
          "rwaccess": "readonly",
          "shortdesc": "The index of the HyphenationException within its containing object.",
          "datatype": {
            "type": "number"
          }
        },
        {
          "name": "events",
          "rwaccess": "readonly",
          "shortdesc": "A collection of events.",
          "datatype": {
            "type": "Events"
          }
        },
        {
          "name": "eventListeners",
          "rwaccess": "readonly",
          "shortdesc": "A collection of event listeners.",
          "datatype": {
            "type": "EventListeners"
          }
        },
        {
          "name": "removedExceptions",
          "shortdesc": "A list of words removed from the hyphenation exceptions list.",
          "datatype": {
            "type": "string",
            "array": true
          }
        },
        {
          "name": "addedExceptions",
          "shortdesc": "A list of words added to the hyphenation exceptions list.",
          "datatype": {
            "type": "string",
            "array": true
          }
        },
        {
          "name": "properties",
          "shortdesc": "A property that allows setting of several properties at the same time.",
          "datatype": {
            "type": "Object"
          }
        }
      ],
      "method": [
        {
          "name": "addException",
          "shortdesc": "Adds the specified words to the hyphenation exceptions list.",
          "parameters": {
            "parameter": [
              {
                "name": "addedExceptions",
                "shortdesc": "The list of words to add.",
                "datatype": {
                  "type": "string",
                  "array": {}
                }
              },
              {
                "name": "removedList",
                "optional": true,
                "shortdesc": "If true, adds the words to the removed exceptions list. If false or unspecified, adds the words to the added exceptions list. &amp;&#35;40;Optional&#41;",
                "datatype": {
                  "type": "bool",
                  "value": false
                }
              }
            ]
          }
        },
        {
          "name": "removeException",
          "shortdesc": "Removes the specified words from the hyphenation exceptions list.",
          "parameters": {
            "parameter": [
              {
                "name": "removedExceptions",
                "shortdesc": "The list of words to remove.",
                "datatype": {
                  "type": "string",
                  "array": {}
                }
              },
              {
                "name": "removedList",
                "optional": true,
                "shortdesc": "If true, removes the words from the removed exceptions list. If false or unspecified, adds the words to the added exceptions list. &amp;&#35;40;Optional&#41;",
                "datatype": {
                  "type": "bool",
                  "value": false
                }
              }
            ]
          }
        },
        {
          "name": "toSource",
          "shortdesc": "Generates a string which, if executed, will return the HyphenationException.",
          "datatype": {
            "type": "string"
          }
        },
        {
          "name": "getElements",
          "shortdesc": "Resolves the object specifier, creating an array of object references.",
          "datatype": {
            "type": "HyphenationException",
            "array": {}
          }
        },
        {
          "name": "toSpecifier",
          "shortdesc": "Retrieves the object specifier.",
          "datatype": {
            "type": "string"
          }
        },
        {
          "name": "addEventListener",
          "shortdesc": "Adds an event listener.",
          "parameters": {
            "parameter": [
              {
                "name": "eventType",
                "shortdesc": "The event type.",
                "datatype": {
                  "type": "string"
                }
              },
              {
                "name": "handler",
                "shortdesc": "The event handler. Can accept: File or JavaScript Function.",
                "datatype": {
                  "type": "mixed"
                }
              },
              {
                "name": "captures",
                "optional": true,
                "shortdesc": "This parameter is obsolete. &amp;&#35;40;Optional&#41;",
                "datatype": {
                  "type": "bool",
                  "value": false
                }
              }
            ]
          },
          "datatype": {
            "type": "EventListener"
          }
        },
        {
          "name": "removeEventListener",
          "shortdesc": "Removes the event listener.",
          "parameters": {
            "parameter": [
              {
                "name": "eventType",
                "shortdesc": "The registered event type.",
                "datatype": {
                  "type": "string"
                }
              },
              {
                "name": "handler",
                "shortdesc": "The registered event handler. Can accept: File or JavaScript Function.",
                "datatype": {
                  "type": "mixed"
                }
              },
              {
                "name": "captures",
                "optional": true,
                "shortdesc": "This parameter is obsolete. &amp;&#35;40;Optional&#41;",
                "datatype": {
                  "type": "bool",
                  "value": false
                }
              }
            ]
          },
          "datatype": {
            "type": "bool"
          }
        }
      ]
    }
  ]
}