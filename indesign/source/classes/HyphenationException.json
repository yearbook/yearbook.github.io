{
  "name": "HyphenationException",
  "dynamic": true,
  "shortdesc": "A hyphenation exceptions list.",
  "elements": [
    {
      "type": "instance",
      "property": [
        {
          "name": "name",
          "rwaccess": "readonly",
          "shortdesc": "The name of the HyphenationException.",
          "datatype": {
            "type": "String"
          }
        },
        {
          "name": "isValid",
          "rwaccess": "readonly",
          "shortdesc": "Returns true if the object specifier resolves to valid objects.",
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "parent",
          "rwaccess": "readonly",
          "shortdesc": "The parent of the HyphenationException &#40;a Document).",
          "datatype": {
            "type": "Document"
          }
        },
        {
          "name": "index",
          "rwaccess": "readonly",
          "shortdesc": "The index of the HyphenationException within its containing object.",
          "datatype": {
            "type": "Number"
          }
        },
        {
          "name": "events",
          "rwaccess": "readonly",
          "shortdesc": "A collection of events.",
          "datatype": {
            "type": "Events"
          }
        },
        {
          "name": "eventListeners",
          "rwaccess": "readonly",
          "shortdesc": "A collection of event listeners.",
          "datatype": {
            "type": "EventListeners"
          }
        },
        {
          "name": "removedExceptions",
          "shortdesc": "A list of words removed from the hyphenation exceptions list.",
          "datatype": {
            "type": "String",
            "array": true
          }
        },
        {
          "name": "addedExceptions",
          "shortdesc": "A list of words added to the hyphenation exceptions list.",
          "datatype": {
            "type": "String",
            "array": true
          }
        },
        {
          "name": "properties",
          "shortdesc": "A property that allows setting of several properties at the same time.",
          "datatype": {
            "type": "Object"
          }
        }
      ],
      "method": [
        {
          "name": "addException",
          "shortdesc": "Adds the specified words to the hyphenation exceptions list.",
          "parameters": [
            {
              "name": "addedExceptions",
              "shortdesc": "The list of words to add.",
              "datatype": {
                "type": "String",
                "array": true
              }
            },
            {
              "name": "removedList",
              "optional": true,
              "shortdesc": "If true, adds the words to the removed exceptions list. If false or unspecified, adds the words to the added exceptions list. &#40;Optional)",
              "datatype": {
                "type": "Boolean",
                "value": false
              }
            }
          ]
        },
        {
          "name": "removeException",
          "shortdesc": "Removes the specified words from the hyphenation exceptions list.",
          "parameters": [
            {
              "name": "removedExceptions",
              "shortdesc": "The list of words to remove.",
              "datatype": {
                "type": "String",
                "array": true
              }
            },
            {
              "name": "removedList",
              "optional": true,
              "shortdesc": "If true, removes the words from the removed exceptions list. If false or unspecified, adds the words to the added exceptions list. &#40;Optional)",
              "datatype": {
                "type": "Boolean",
                "value": false
              }
            }
          ]
        },
        {
          "name": "toSource",
          "shortdesc": "Generates a string which, if executed, will return the HyphenationException.",
          "datatype": {
            "type": "String"
          }
        },
        {
          "name": "getElements",
          "shortdesc": "Resolves the object specifier, creating an array of object references.",
          "datatype": {
            "type": "HyphenationException",
            "array": true
          }
        },
        {
          "name": "toSpecifier",
          "shortdesc": "Retrieves the object specifier.",
          "datatype": {
            "type": "String"
          }
        },
        {
          "name": "addEventListener",
          "shortdesc": "Adds an event listener.",
          "parameters": [
            {
              "name": "eventType",
              "shortdesc": "The event type.",
              "datatype": {
                "type": "String"
              }
            },
            {
              "name": "handler",
              "shortdesc": "The event handler. Can accept: File or JavaScript Function.",
              "datatype": {
                "type": "Mixed"
              }
            },
            {
              "name": "captures",
              "optional": true,
              "shortdesc": "This parameter is obsolete. &#40;Optional)",
              "datatype": {
                "type": "Boolean",
                "value": false
              }
            }
          ],
          "datatype": {
            "type": "EventListener"
          }
        },
        {
          "name": "removeEventListener",
          "shortdesc": "Removes the event listener.",
          "parameters": [
            {
              "name": "eventType",
              "shortdesc": "The registered event type.",
              "datatype": {
                "type": "String"
              }
            },
            {
              "name": "handler",
              "shortdesc": "The registered event handler. Can accept: File or JavaScript Function.",
              "datatype": {
                "type": "Mixed"
              }
            },
            {
              "name": "captures",
              "optional": true,
              "shortdesc": "This parameter is obsolete. &#40;Optional)",
              "datatype": {
                "type": "Boolean",
                "value": false
              }
            }
          ],
          "datatype": {
            "type": "Boolean"
          }
        }
      ]
    }
  ]
}