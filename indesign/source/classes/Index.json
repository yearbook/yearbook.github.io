{
  "name": "Index",
  "dynamic": true,
  "shortdesc": "An index.",
  "elements": [
    {
      "type": "instance",
      "property": [
        {
          "name": "allTopics",
          "rwaccess": "readonly",
          "shortdesc": "The topics in the specified index section.",
          "datatype": {
            "type": "Topic",
            "array": true
          }
        },
        {
          "name": "id",
          "rwaccess": "readonly",
          "shortdesc": "The unique ID of the Index.",
          "datatype": {
            "type": "number"
          }
        },
        {
          "name": "isValid",
          "rwaccess": "readonly",
          "shortdesc": "Returns true if the object specifier resolves to valid objects.",
          "datatype": {
            "type": "bool"
          }
        },
        {
          "name": "parent",
          "rwaccess": "readonly",
          "shortdesc": "The parent of the Index &amp;&#35;40;a Document&#41;.",
          "datatype": {
            "type": "Document"
          }
        },
        {
          "name": "index",
          "rwaccess": "readonly",
          "shortdesc": "The index of the Index within its containing object.",
          "datatype": {
            "type": "number"
          }
        },
        {
          "name": "events",
          "rwaccess": "readonly",
          "shortdesc": "A collection of events.",
          "datatype": {
            "type": "Events"
          }
        },
        {
          "name": "eventListeners",
          "rwaccess": "readonly",
          "shortdesc": "A collection of event listeners.",
          "datatype": {
            "type": "EventListeners"
          }
        },
        {
          "name": "indexSections",
          "rwaccess": "readonly",
          "shortdesc": "A collection of index sections.",
          "datatype": {
            "type": "IndexSections"
          }
        },
        {
          "name": "topics",
          "rwaccess": "readonly",
          "shortdesc": "A collection of index topics.",
          "datatype": {
            "type": "Topics"
          }
        },
        {
          "name": "label",
          "shortdesc": "A property that can be set to any string.",
          "datatype": {
            "type": "string"
          }
        },
        {
          "name": "name",
          "shortdesc": "The name of the Index; this is an alias to the Index&apos;s label property.",
          "datatype": {
            "type": "string"
          }
        },
        {
          "name": "properties",
          "shortdesc": "A property that allows setting of several properties at the same time.",
          "datatype": {
            "type": "Object"
          }
        }
      ],
      "method": [
        {
          "name": "importTopics",
          "shortdesc": "Imports a list of index topics.",
          "parameters": {
            "parameter": [
              {
                "name": "from",
                "shortdesc": "The file from which to import the topics.",
                "datatype": {
                  "type": "File"
                }
              }
            ]
          }
        },
        {
          "name": "removeUnusedTopics",
          "shortdesc": "Removes all index topics that do not have any index entries."
        },
        {
          "name": "capitalize",
          "shortdesc": "Makes the initial letter for the specified index topic or group of index topics upper case.",
          "parameters": {
            "parameter": [
              {
                "name": "capitalizationOption",
                "optional": true,
                "shortdesc": "The entry or entries to capitalize. &amp;&#35;40;Optional&#41;",
                "datatype": {
                  "type": "IndexCapitalizationOptions",
                  "value": "IndexCapitalizationOptions.ALL_ENTRIES"
                }
              }
            ]
          }
        },
        {
          "name": "update",
          "shortdesc": "Updates the index preview pane. Note: Does not update the index."
        },
        {
          "name": "generate",
          "shortdesc": "Generates a new index story.",
          "parameters": {
            "parameter": [
              {
                "name": "on",
                "shortdesc": "The spread or page on which to place the story. Can accept: Page, Spread or MasterSpread. &amp;&#35;40;Optional&#41;",
                "datatype": {
                  "type": "mixed"
                }
              },
              {
                "name": "placePoint",
                "shortdesc": "The coordinates of the upper left corner of the story bounding box, in the format [x, y]. &amp;&#35;40;Optional&#41;",
                "datatype": {
                  "type": "Measurement Unit &amp;&#35;40;Number or String&#41;=any",
                  "array": {}
                }
              },
              {
                "name": "destinationLayer",
                "shortdesc": "The layer on which to place the story. &amp;&#35;40;Optional&#41;",
                "datatype": {
                  "type": "Layer"
                }
              },
              {
                "name": "autoflowing",
                "optional": true,
                "shortdesc": "If true, allows the story to flow onto subsequent pages if the story does not fit on the specified page. If no subsequent pages exist in the document, creates the necessary pages. &amp;&#35;40;Optional&#41;",
                "datatype": {
                  "type": "bool",
                  "value": false
                }
              },
              {
                "name": "includeOverset",
                "optional": true,
                "shortdesc": "If true, includes topics in overset text in the story.  &amp;&#35;40;Optional&#41;",
                "datatype": {
                  "type": "bool",
                  "value": false
                }
              }
            ]
          },
          "datatype": {
            "type": "Story",
            "array": {}
          }
        },
        {
          "name": "insertLabel",
          "shortdesc": "Sets the label to the value associated with the specified key.",
          "parameters": {
            "parameter": [
              {
                "name": "key",
                "shortdesc": "The key.",
                "datatype": {
                  "type": "string"
                }
              },
              {
                "name": "value",
                "shortdesc": "The value.",
                "datatype": {
                  "type": "string"
                }
              }
            ]
          }
        },
        {
          "name": "extractLabel",
          "shortdesc": "Gets the label value associated with the specified key.",
          "parameters": {
            "parameter": [
              {
                "name": "key",
                "shortdesc": "The key.",
                "datatype": {
                  "type": "string"
                }
              }
            ]
          },
          "datatype": {
            "type": "string"
          }
        },
        {
          "name": "toSource",
          "shortdesc": "Generates a string which, if executed, will return the Index.",
          "datatype": {
            "type": "string"
          }
        },
        {
          "name": "getElements",
          "shortdesc": "Resolves the object specifier, creating an array of object references.",
          "datatype": {
            "type": "Index",
            "array": {}
          }
        },
        {
          "name": "toSpecifier",
          "shortdesc": "Retrieves the object specifier.",
          "datatype": {
            "type": "string"
          }
        },
        {
          "name": "addEventListener",
          "shortdesc": "Adds an event listener.",
          "parameters": {
            "parameter": [
              {
                "name": "eventType",
                "shortdesc": "The event type.",
                "datatype": {
                  "type": "string"
                }
              },
              {
                "name": "handler",
                "shortdesc": "The event handler. Can accept: File or JavaScript Function.",
                "datatype": {
                  "type": "mixed"
                }
              },
              {
                "name": "captures",
                "optional": true,
                "shortdesc": "This parameter is obsolete. &amp;&#35;40;Optional&#41;",
                "datatype": {
                  "type": "bool",
                  "value": false
                }
              }
            ]
          },
          "datatype": {
            "type": "EventListener"
          }
        },
        {
          "name": "removeEventListener",
          "shortdesc": "Removes the event listener.",
          "parameters": {
            "parameter": [
              {
                "name": "eventType",
                "shortdesc": "The registered event type.",
                "datatype": {
                  "type": "string"
                }
              },
              {
                "name": "handler",
                "shortdesc": "The registered event handler. Can accept: File or JavaScript Function.",
                "datatype": {
                  "type": "mixed"
                }
              },
              {
                "name": "captures",
                "optional": true,
                "shortdesc": "This parameter is obsolete. &amp;&#35;40;Optional&#41;",
                "datatype": {
                  "type": "bool",
                  "value": false
                }
              }
            ]
          },
          "datatype": {
            "type": "bool"
          }
        }
      ]
    }
  ]
}