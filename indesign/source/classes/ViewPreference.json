{
  "name": "ViewPreference",
  "dynamic": true,
  "superclass": {
    "href": "#/Preference",
    "$t": "Preference"
  },
  "shortdesc": "View preferences.",
  "elements": [
    {
      "type": "instance",
      "property": [
        {
          "name": "isValid",
          "rwaccess": "readonly",
          "shortdesc": "Returns true if the object specifier resolves to valid objects.",
          "datatype": {
            "type": "bool"
          }
        },
        {
          "name": "parent",
          "rwaccess": "readonly",
          "shortdesc": "The parent of the ViewPreference &amp;&#35;40;a Application or Document&#41;.",
          "datatype": {
            "type": "mixed"
          }
        },
        {
          "name": "events",
          "rwaccess": "readonly",
          "shortdesc": "A collection of events.",
          "datatype": {
            "type": "Events"
          }
        },
        {
          "name": "eventListeners",
          "rwaccess": "readonly",
          "shortdesc": "A collection of event listeners.",
          "datatype": {
            "type": "EventListeners"
          }
        },
        {
          "name": "pointsPerInch",
          "shortdesc": "The number of points per inch, typically 72. &amp;&#35;40;Range: 60 to 80&#41;",
          "datatype": {
            "type": "number",
            "min": 60,
            "max": 80
          }
        },
        {
          "name": "horizontalCustomPoints",
          "shortdesc": "The distance &amp;&#35;40;in points&#41; between major tick marks on the horizontal ruler. (Range: 4 to 256) Valid only when horizontal measurement units is custom.",
          "datatype": {
            "type": "number",
            "min": 4,
            "max": 256
          }
        },
        {
          "name": "verticalCustomPoints",
          "shortdesc": "The distance &amp;&#35;40;in points&#41; between major tick marks on the vertical ruler. (Range: 4 to 256) Valid only when vertical measurement units is custom.",
          "datatype": {
            "type": "number",
            "min": 4,
            "max": 256
          }
        },
        {
          "name": "strokeMeasurementUnits",
          "shortdesc": "The measurement unit for stroke measurements.",
          "datatype": {
            "type": "MeasurementUnits"
          }
        },
        {
          "name": "guideSnaptoZone",
          "shortdesc": "The range &amp;&#35;40;in pixels&#41; within which an object snaps to guides. (Range: 1 to 36) Note: Snapping occurs only when guides are shown.",
          "datatype": {
            "type": "number",
            "min": 1,
            "max": 36
          }
        },
        {
          "name": "cursorKeyIncrement",
          "shortdesc": "The distance to move a specified object when an arrow key is pressed. &amp;&#35;40;Range depends on the measurement unit. For points: 0.001 to 100; picas: 0p0.001 to 8p4; mm: 0 to 35.278; cm: 0 to 3.5278; inches: 0 to 1.3889; ciceros: 0c0.001 to 7c9.839&#41;",
          "datatype": {
            "type": "Measurement Unit &amp;&#35;40;Number or String&#41;=any",
            "min": 0.001,
            "max": 100
          }
        },
        {
          "name": "horizontalMeasurementUnits",
          "shortdesc": "The measurement unit for the horizontal ruler and other horizontally-measured spaces such as grid columns, horizontal offsets, column gutters, or others.",
          "datatype": {
            "type": "MeasurementUnits"
          }
        },
        {
          "name": "verticalMeasurementUnits",
          "shortdesc": "The measurement unit for the vertical ruler and other vertically-measured spaces such as grid rows, vertical offsets, row heights, or others.",
          "datatype": {
            "type": "MeasurementUnits"
          }
        },
        {
          "name": "rulerOrigin",
          "shortdesc": "The default zero point at the intersection of the vertical and horizontal rulers and the scope of the horizontal ruler.",
          "datatype": {
            "type": "RulerOrigin"
          }
        },
        {
          "name": "showRulers",
          "shortdesc": "If true, displays the horizontal and vertical rulers.",
          "datatype": {
            "type": "bool"
          }
        },
        {
          "name": "showFrameEdges",
          "shortdesc": "If true, displays borders of unselected frames and the diagonal lines in empty unselected frames.",
          "datatype": {
            "type": "bool"
          }
        },
        {
          "name": "typographicMeasurementUnits",
          "shortdesc": "The measurement units for typography.",
          "datatype": {
            "type": "MeasurementUnits"
          }
        },
        {
          "name": "textSizeMeasurementUnits",
          "shortdesc": "The measurement unit for text size measurements.",
          "datatype": {
            "type": "MeasurementUnits"
          }
        },
        {
          "name": "printDialogMeasurementUnits",
          "shortdesc": "The measurement unit for the print dialog.",
          "datatype": {
            "type": "MeasurementUnits"
          }
        },
        {
          "name": "showNotes",
          "shortdesc": "If true, notes are displayed.",
          "datatype": {
            "type": "bool"
          }
        },
        {
          "name": "properties",
          "shortdesc": "A property that allows setting of several properties at the same time.",
          "datatype": {
            "type": "Object"
          }
        }
      ],
      "method": [
        {
          "name": "toSource",
          "shortdesc": "Generates a string which, if executed, will return the ViewPreference.",
          "datatype": {
            "type": "string"
          }
        },
        {
          "name": "getElements",
          "shortdesc": "Resolves the object specifier, creating an array of object references.",
          "datatype": {
            "type": "ViewPreference",
            "array": {}
          }
        },
        {
          "name": "toSpecifier",
          "shortdesc": "Retrieves the object specifier.",
          "datatype": {
            "type": "string"
          }
        },
        {
          "name": "addEventListener",
          "shortdesc": "Adds an event listener.",
          "parameters": {
            "parameter": [
              {
                "name": "eventType",
                "shortdesc": "The event type.",
                "datatype": {
                  "type": "string"
                }
              },
              {
                "name": "handler",
                "shortdesc": "The event handler. Can accept: File or JavaScript Function.",
                "datatype": {
                  "type": "mixed"
                }
              },
              {
                "name": "captures",
                "optional": true,
                "shortdesc": "This parameter is obsolete. &amp;&#35;40;Optional&#41;",
                "datatype": {
                  "type": "bool",
                  "value": false
                }
              }
            ]
          },
          "datatype": {
            "type": "EventListener"
          }
        },
        {
          "name": "removeEventListener",
          "shortdesc": "Removes the event listener.",
          "parameters": {
            "parameter": [
              {
                "name": "eventType",
                "shortdesc": "The registered event type.",
                "datatype": {
                  "type": "string"
                }
              },
              {
                "name": "handler",
                "shortdesc": "The registered event handler. Can accept: File or JavaScript Function.",
                "datatype": {
                  "type": "mixed"
                }
              },
              {
                "name": "captures",
                "optional": true,
                "shortdesc": "This parameter is obsolete. &amp;&#35;40;Optional&#41;",
                "datatype": {
                  "type": "bool",
                  "value": false
                }
              }
            ]
          },
          "datatype": {
            "type": "bool"
          }
        }
      ]
    }
  ]
}