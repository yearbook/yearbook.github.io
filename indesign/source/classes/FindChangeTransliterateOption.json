{
  "name": "FindChangeTransliterateOption",
  "dynamic": true,
  "superclass": {
    "href": "#/Preference",
    "$t": "Preference"
  },
  "shortdesc": "Find/change transliterate options.",
  "elements": [
    {
      "type": "instance",
      "property": [
        {
          "name": "isValid",
          "rwaccess": "readonly",
          "shortdesc": "Returns true if the object specifier resolves to valid objects.",
          "datatype": {
            "type": "bool"
          }
        },
        {
          "name": "parent",
          "rwaccess": "readonly",
          "shortdesc": "The parent of the FindChangeTransliterateOption &amp;&#35;40;a Application&#41;.",
          "datatype": {
            "type": "Application"
          }
        },
        {
          "name": "events",
          "rwaccess": "readonly",
          "shortdesc": "A collection of events.",
          "datatype": {
            "type": "Events"
          }
        },
        {
          "name": "eventListeners",
          "rwaccess": "readonly",
          "shortdesc": "A collection of event listeners.",
          "datatype": {
            "type": "EventListeners"
          }
        },
        {
          "name": "kanaSensitive",
          "shortdesc": "If true, finds only text that matches the specified kana type.",
          "datatype": {
            "type": "bool"
          }
        },
        {
          "name": "widthSensitive",
          "shortdesc": "If true, finds only text that matches the specified character width.",
          "datatype": {
            "type": "bool"
          }
        },
        {
          "name": "includeLockedStoriesForFind",
          "shortdesc": "If true, includes locked stories in the find query.",
          "datatype": {
            "type": "bool"
          }
        },
        {
          "name": "includeLockedLayersForFind",
          "shortdesc": "If true, includes locked layers in the find query.",
          "datatype": {
            "type": "bool"
          }
        },
        {
          "name": "includeHiddenLayers",
          "shortdesc": "If true, includes hidden layers in the find/change query.",
          "datatype": {
            "type": "bool"
          }
        },
        {
          "name": "includeMasterPages",
          "shortdesc": "If true, includes master pages in the find/change query.",
          "datatype": {
            "type": "bool"
          }
        },
        {
          "name": "includeFootnotes",
          "shortdesc": "If true, includes footnotes in the find/change query.",
          "datatype": {
            "type": "bool"
          }
        },
        {
          "name": "wholeWord",
          "shortdesc": "If true, finds only the complete find text string. If false, also finds strings that contain the find text string.",
          "datatype": {
            "type": "bool"
          }
        },
        {
          "name": "caseSensitive",
          "shortdesc": "If true, finds strings whose use of case matches the find text string. If false, finds strings that match the find text string regardless of case.",
          "datatype": {
            "type": "bool"
          }
        },
        {
          "name": "properties",
          "shortdesc": "A property that allows setting of several properties at the same time.",
          "datatype": {
            "type": "Object"
          }
        }
      ],
      "method": [
        {
          "name": "toSource",
          "shortdesc": "Generates a string which, if executed, will return the FindChangeTransliterateOption.",
          "datatype": {
            "type": "string"
          }
        },
        {
          "name": "getElements",
          "shortdesc": "Resolves the object specifier, creating an array of object references.",
          "datatype": {
            "type": "FindChangeTransliterateOption",
            "array": {}
          }
        },
        {
          "name": "toSpecifier",
          "shortdesc": "Retrieves the object specifier.",
          "datatype": {
            "type": "string"
          }
        },
        {
          "name": "addEventListener",
          "shortdesc": "Adds an event listener.",
          "parameters": {
            "parameter": [
              {
                "name": "eventType",
                "shortdesc": "The event type.",
                "datatype": {
                  "type": "string"
                }
              },
              {
                "name": "handler",
                "shortdesc": "The event handler. Can accept: File or JavaScript Function.",
                "datatype": {
                  "type": "mixed"
                }
              },
              {
                "name": "captures",
                "optional": true,
                "shortdesc": "This parameter is obsolete. &amp;&#35;40;Optional&#41;",
                "datatype": {
                  "type": "bool",
                  "value": false
                }
              }
            ]
          },
          "datatype": {
            "type": "EventListener"
          }
        },
        {
          "name": "removeEventListener",
          "shortdesc": "Removes the event listener.",
          "parameters": {
            "parameter": [
              {
                "name": "eventType",
                "shortdesc": "The registered event type.",
                "datatype": {
                  "type": "string"
                }
              },
              {
                "name": "handler",
                "shortdesc": "The registered event handler. Can accept: File or JavaScript Function.",
                "datatype": {
                  "type": "mixed"
                }
              },
              {
                "name": "captures",
                "optional": true,
                "shortdesc": "This parameter is obsolete. &amp;&#35;40;Optional&#41;",
                "datatype": {
                  "type": "bool",
                  "value": false
                }
              }
            ]
          },
          "datatype": {
            "type": "bool"
          }
        }
      ]
    }
  ]
}