{
  "name": "PDFExportPreference",
  "dynamic": true,
  "superclass": {
    "href": "#/Preference",
    "$t": "Preference"
  },
  "shortdesc": "PDF export settings for the application object.",
  "elements": [
    {
      "type": "instance",
      "property": [
        {
          "name": "effectivePDFDestinationProfile",
          "rwaccess": "readonly",
          "shortdesc": "Effective destination color profile. Can return: PDFProfileSelector enumerator or String.",
          "datatype": {
            "type": "mixed"
          }
        },
        {
          "name": "effectiveOCRegistry",
          "rwaccess": "readonly",
          "shortdesc": "Effective PDF/X OC Registry.",
          "datatype": {
            "type": "string"
          }
        },
        {
          "name": "effectiveOutputCondition",
          "rwaccess": "readonly",
          "shortdesc": "Effective PDF/X output condition.",
          "datatype": {
            "type": "string"
          }
        },
        {
          "name": "effectivePDFXProfile",
          "rwaccess": "readonly",
          "shortdesc": "Effective PDF X color profile. Can return: PDFProfileSelector enumerator or String.",
          "datatype": {
            "type": "mixed"
          }
        },
        {
          "name": "isValid",
          "rwaccess": "readonly",
          "shortdesc": "Returns true if the object specifier resolves to valid objects.",
          "datatype": {
            "type": "bool"
          }
        },
        {
          "name": "parent",
          "rwaccess": "readonly",
          "shortdesc": "The parent of the PDFExportPreference &amp;&#35;40;a Application&#41;.",
          "datatype": {
            "type": "Application"
          }
        },
        {
          "name": "events",
          "rwaccess": "readonly",
          "shortdesc": "A collection of events.",
          "datatype": {
            "type": "Events"
          }
        },
        {
          "name": "eventListeners",
          "rwaccess": "readonly",
          "shortdesc": "A collection of event listeners.",
          "datatype": {
            "type": "EventListeners"
          }
        },
        {
          "name": "pageRange",
          "shortdesc": "The pages to print, specified either as an enumeration or a string. To specify a range, separate page numbers in the string with a hyphen &amp;&#35;40;-&#41;. To specify separate pages, separate page numbers in the string with a comma (,). Can return: PageRange enumerator or String.",
          "datatype": {
            "type": "mixed"
          }
        },
        {
          "name": "useSecurity",
          "shortdesc": "If true, activates security controls for the PDF document.",
          "datatype": {
            "type": "bool"
          }
        },
        {
          "name": "openDocumentPassword",
          "shortdesc": "The password to enter when opening the PDF document. Valid only when use security is true. Note: A script can set but not get this value.",
          "datatype": {
            "type": "string"
          }
        },
        {
          "name": "changeSecurityPassword",
          "shortdesc": "Changes the open document password to the specified string. Valid only when use security is true. Note: A script can set but not get this value.",
          "datatype": {
            "type": "string"
          }
        },
        {
          "name": "disallowPrinting",
          "shortdesc": "If true, users cannot print the PDF document. Valid only when use security is true.",
          "datatype": {
            "type": "bool"
          }
        },
        {
          "name": "disallowChanging",
          "shortdesc": "If true, users cannot fill in forms, sign, extract pages, or add comments in the PDF document. Valid only when use security is true.",
          "datatype": {
            "type": "bool"
          }
        },
        {
          "name": "disallowCopying",
          "shortdesc": "If true, users cannot copy and paste text, images, or other content from the PDF document. Valid only when use security is true.",
          "datatype": {
            "type": "bool"
          }
        },
        {
          "name": "disallowNotes",
          "shortdesc": "If true, users cannot add or change notes, edit text, or fill in form fields in the PDF document. Valid only when use security is true.",
          "datatype": {
            "type": "bool"
          }
        },
        {
          "name": "disallowFormFillIn",
          "shortdesc": "If true, users cannot change form fields in the PDF document. Valid only when use security is true.",
          "datatype": {
            "type": "bool"
          }
        },
        {
          "name": "disallowExtractionForAccessibility",
          "shortdesc": "If true, users cannot extract content from the PDF document using software tools for the visually impaired. Valid only when use security is true.",
          "datatype": {
            "type": "bool"
          }
        },
        {
          "name": "disallowDocumentAssembly",
          "shortdesc": "If true, users cannot insert, delete, or rotate pages in the PDF document. Valid only when use security is true.",
          "datatype": {
            "type": "bool"
          }
        },
        {
          "name": "disallowHiResPrinting",
          "shortdesc": "If true, users cannot print high-resolution copies of the PDF document. Valid only when use security is true.",
          "datatype": {
            "type": "bool"
          }
        },
        {
          "name": "disallowPlaintextMetadata",
          "shortdesc": "If true and acrobat compatibility is Acrobat 6 or higher, storage systems and search engines cannot access metadata stored in the PDF document. If true and acrobat compatibility is acrobat 5 or higher, users cannot copy and extract content from the document. Valid only when use security is true.",
          "datatype": {
            "type": "bool"
          }
        },
        {
          "name": "viewPDF",
          "shortdesc": "If true, automatically opens the PDF file after exporting.",
          "datatype": {
            "type": "bool"
          }
        },
        {
          "name": "subsetFontsBelow",
          "shortdesc": "Sets the threshold for embedding complete fonts based on how many of the fonts&apos; characters are used in the document. If the percentage of characters used in the document for any given font exceeds the specified value, the font is completely embedded; otherwise, the font is subsetted. &amp;&#35;40;Range: 0 to 100&#41; Notes: Embedding complete fonts increases file size. To completely embed all fonts, use 0 (zero).",
          "datatype": {
            "type": "number",
            "min": 0,
            "max": 100
          }
        },
        {
          "name": "pdfColorSpace",
          "shortdesc": "The color space to use to represent color information in the exported PDF document.",
          "datatype": {
            "type": "PDFColorSpace"
          }
        },
        {
          "name": "includeICCProfiles",
          "shortdesc": "The ICC Profiles to include in the exported PDF document. Can also accept: Boolean.",
          "datatype": {
            "type": "ICCProfiles"
          }
        },
        {
          "name": "omitEPS",
          "shortdesc": "If true, replaces EPS images with OPI links.",
          "datatype": {
            "type": "bool"
          }
        },
        {
          "name": "omitPDF",
          "shortdesc": "If true, replaces PDF images with OPI links.",
          "datatype": {
            "type": "bool"
          }
        },
        {
          "name": "omitBitmaps",
          "shortdesc": "If true, replaces bitmap images with OPI links.",
          "datatype": {
            "type": "bool"
          }
        },
        {
          "name": "cropImagesToFrames",
          "shortdesc": "If true, image data that falls outside the visible portion of an image&apos;s frame is not exported to the PDF document.",
          "datatype": {
            "type": "bool"
          }
        },
        {
          "name": "generateThumbnails",
          "shortdesc": "If true, generates thumbnail images for each page or spread.",
          "datatype": {
            "type": "bool"
          }
        },
        {
          "name": "optimizePDF",
          "shortdesc": "If true, optimizes the exported PDF document for faster viewing in a web browser. Note: Compresses text and line art, regardless of specified compression settings.",
          "datatype": {
            "type": "bool"
          }
        },
        {
          "name": "includeStructure",
          "shortdesc": "If true, creates a tagged PDF file. Note: If acrobat compatibility is acrobat 6 or higher, tags are visible only when the PDF is opened in Acrobat 6 or higher.",
          "datatype": {
            "type": "bool"
          }
        },
        {
          "name": "acrobatCompatibility",
          "shortdesc": "The exported PDF document&apos;s Acrobat compatibility.",
          "datatype": {
            "type": "AcrobatCompatibility"
          }
        },
        {
          "name": "simulateOverprint",
          "shortdesc": "If true, simulates the effects of overprinting spot inks with different neutral density values by converting spot colors to process colors for printing. Note: Not valid when the color output mode is defined to leave color profiles unchanged.",
          "datatype": {
            "type": "bool"
          }
        },
        {
          "name": "pdfDestinationProfile",
          "shortdesc": "The gamut of the final RGB or CMYK device. Can return: PDFProfileSelector enumerator or String.",
          "datatype": {
            "type": "mixed"
          }
        },
        {
          "name": "pdfXProfile",
          "shortdesc": "The PDF X color profile to use for the PDF document. . Can return: PDFProfileSelector enumerator or String.",
          "datatype": {
            "type": "mixed"
          }
        },
        {
          "name": "includeHyperlinks",
          "shortdesc": "If true, includes hyperlinks when exporting the document.",
          "datatype": {
            "type": "bool"
          }
        },
        {
          "name": "includeBookmarks",
          "shortdesc": "If true, displays bookmarks and table of contents entries as links in the bookmarks pane in the PDF document. If false, no bookmarks are exported.",
          "datatype": {
            "type": "bool"
          }
        },
        {
          "name": "exportNonprintingObjects",
          "shortdesc": "If true, makes non-printing objects visible in the PDF document.",
          "datatype": {
            "type": "bool"
          }
        },
        {
          "name": "exportGuidesAndGrids",
          "shortdesc": "If true, includes visible guides and baseline grids in the PDF document.",
          "datatype": {
            "type": "bool"
          }
        },
        {
          "name": "exportLayers",
          "shortdesc": "If true, saves each layer as an Acrobat layer within the PDF document.",
          "datatype": {
            "type": "bool"
          }
        },
        {
          "name": "standardsCompliance",
          "shortdesc": "The PDF/X standards compliance to test against.",
          "datatype": {
            "type": "PDFXStandards"
          }
        },
        {
          "name": "outputCondition",
          "shortdesc": "The name of the intended printing condition. Valid only when a PDF/X compliance standard has been defined for the document. Not valid when PDF/X-3 is the compliance standard or PDF export preset. For information on compliance standards, see standards compliance and PDF X standards.",
          "datatype": {
            "type": "string"
          }
        },
        {
          "name": "colorBitmapSampling",
          "shortdesc": "The sampling option to apply to color bitmap images in the PDF document.",
          "datatype": {
            "type": "Sampling"
          }
        },
        {
          "name": "colorBitmapSamplingDPI",
          "shortdesc": "The ppi of the resampled image. &amp;&#35;40;Range: 9 to 2400&#41;",
          "datatype": {
            "type": "number",
            "min": 9,
            "max": 2400
          }
        },
        {
          "name": "colorBitmapCompression",
          "shortdesc": "The amount of bitmap compression to use.",
          "datatype": {
            "type": "BitmapCompression"
          }
        },
        {
          "name": "colorBitmapQuality",
          "shortdesc": "The compression option to apply to color images.",
          "datatype": {
            "type": "CompressionQuality"
          }
        },
        {
          "name": "grayscaleBitmapSampling",
          "shortdesc": "The sampling option to apply to grayscale bitmap images.",
          "datatype": {
            "type": "Sampling"
          }
        },
        {
          "name": "grayscaleBitmapSamplingDPI",
          "shortdesc": "The ppi of the resampled image. &amp;&#35;40;Range: 9 to 2400&#41;",
          "datatype": {
            "type": "number",
            "min": 9,
            "max": 2400
          }
        },
        {
          "name": "grayscaleBitmapCompression",
          "shortdesc": "The bitmap compression option to apply to grayscale bitmap images.",
          "datatype": {
            "type": "BitmapCompression"
          }
        },
        {
          "name": "grayscaleBitmapQuality",
          "shortdesc": "The compression option to apply to grayscale bitmap images.",
          "datatype": {
            "type": "CompressionQuality"
          }
        },
        {
          "name": "monochromeBitmapSampling",
          "shortdesc": "The sampling option to apply to monochrome bitmap images.",
          "datatype": {
            "type": "Sampling"
          }
        },
        {
          "name": "monochromeBitmapSamplingDPI",
          "shortdesc": "The ppi of the resampled image. &amp;&#35;40;Range: 9 to 2400&#41;",
          "datatype": {
            "type": "number",
            "min": 9,
            "max": 2400
          }
        },
        {
          "name": "monochromeBitmapCompression",
          "shortdesc": "The bitmap compression option to apply to monochrome bitmap images.",
          "datatype": {
            "type": "MonoBitmapCompression"
          }
        },
        {
          "name": "compressTextAndLineArt",
          "shortdesc": "If true, compresses text and line art using ZIP compression.",
          "datatype": {
            "type": "bool"
          }
        },
        {
          "name": "thresholdToCompressColor",
          "shortdesc": "The minimum dpi at which color compression is applied. &amp;&#35;40;Range: 1 to 10 times the value specified for color bitmap sampling DPI.&#41;",
          "datatype": {
            "type": "number"
          }
        },
        {
          "name": "thresholdToCompressGray",
          "shortdesc": "The minimum dpi at which grayscale compression is applied. &amp;&#35;40;Range: 1 to 10 times the value specified for grayscale bitmap sampling DPI.&#41;",
          "datatype": {
            "type": "number"
          }
        },
        {
          "name": "thresholdToCompressMonochrome",
          "shortdesc": "The minimum dpi at which monochrome compression is applied. &amp;&#35;40;Range: 1 to 10 times the value specified for monochrome bitmap sampling DPI.&#41;",
          "datatype": {
            "type": "number"
          }
        },
        {
          "name": "colorTileSize",
          "shortdesc": "The tile size for color images. Valid only when color bitmap compression is JPEG 2000. &amp;&#35;40;Range: 128 to 2048&#41;",
          "datatype": {
            "type": "number",
            "min": 128,
            "max": 2048
          }
        },
        {
          "name": "grayTileSize",
          "shortdesc": "The tile size for grayscale images. Valid only when grayscale bitmap compression is JPEG 2000. &amp;&#35;40;Range: 128 to 2048&#41;",
          "datatype": {
            "type": "number",
            "min": 128,
            "max": 2048
          }
        },
        {
          "name": "compressionType",
          "shortdesc": "The objects to compress in the PDF document.",
          "datatype": {
            "type": "PDFCompressionType"
          }
        },
        {
          "name": "exportReaderSpreads",
          "shortdesc": "If true, each spread in the exported document is combined into a single page that has spread&apos;s original width.",
          "datatype": {
            "type": "bool"
          }
        },
        {
          "name": "pageMarksOffset",
          "shortdesc": "The offset from the edge of the page for page marks.",
          "datatype": {
            "type": "Measurement Unit &amp;&#35;40;Number or String&#41;=any",
            "min": 0,
            "max": 72
          }
        },
        {
          "name": "cropMarks",
          "shortdesc": "Prints crop marks that define where the page should be trimmed.",
          "datatype": {
            "type": "bool"
          }
        },
        {
          "name": "pageInformationMarks",
          "shortdesc": "If true, prints the filename, page number, current date and time, and color separation name.",
          "datatype": {
            "type": "bool"
          }
        },
        {
          "name": "bleedMarks",
          "shortdesc": "If true, print bleed marks.",
          "datatype": {
            "type": "bool"
          }
        },
        {
          "name": "colorBars",
          "shortdesc": "If true, add small squares of color representing the CMYK inks and tints of gray in 10% increments.",
          "datatype": {
            "type": "bool"
          }
        },
        {
          "name": "registrationMarks",
          "shortdesc": "If true, prints small targets outside the page area for aligning color separations.",
          "datatype": {
            "type": "bool"
          }
        },
        {
          "name": "printerMarkWeight",
          "shortdesc": "The stroke weight for printer&apos;s marks.",
          "datatype": {
            "type": "PDFMarkWeight"
          }
        },
        {
          "name": "bleedTop",
          "shortdesc": "The height of the bleed area at the top of the page. Note: Valid only when use document bleed to print is true.",
          "datatype": {
            "type": "Measurement Unit &amp;&#35;40;Number or String&#41;=any",
            "min": 0,
            "max": 432
          }
        },
        {
          "name": "bleedInside",
          "shortdesc": "The width of the bleed area at the inside of the page. Note: Valid only when use document bleed to print is true.",
          "datatype": {
            "type": "Measurement Unit &amp;&#35;40;Number or String&#41;=any",
            "min": 0,
            "max": 432
          }
        },
        {
          "name": "bleedBottom",
          "shortdesc": "The height of the bleed area at the bottom of the page. Note: Valid only when use document bleed to print is true.",
          "datatype": {
            "type": "Measurement Unit &amp;&#35;40;Number or String&#41;=any",
            "min": 0,
            "max": 432
          }
        },
        {
          "name": "bleedOutside",
          "shortdesc": "The width of the bleed area at the outside of the page. Note: Valid only when use document bleed to print is true.",
          "datatype": {
            "type": "Measurement Unit &amp;&#35;40;Number or String&#41;=any",
            "min": 0,
            "max": 432
          }
        },
        {
          "name": "pdfMarkType",
          "shortdesc": "The type of printer marks, either an enum value or the name of a custom marks file. Can return: MarkTypes enumerator or String.",
          "datatype": {
            "type": "mixed"
          }
        },
        {
          "name": "useDocumentBleedWithPDF",
          "shortdesc": "If true, uses the document&apos;s bleed settings in the PDF document.",
          "datatype": {
            "type": "bool"
          }
        },
        {
          "name": "includeSlugWithPDF",
          "shortdesc": "If true, includes the document&apos;s slug area in the PDF document.",
          "datatype": {
            "type": "bool"
          }
        },
        {
          "name": "ignoreSpreadOverrides",
          "shortdesc": "If true, ignores flattener spread overrides.",
          "datatype": {
            "type": "bool"
          }
        },
        {
          "name": "appliedFlattenerPreset",
          "shortdesc": "The transparency flattener preset to use.",
          "datatype": {
            "type": "FlattenerPreset"
          }
        },
        {
          "name": "outputConditionName",
          "shortdesc": "The name of the output condition. Valid only when a PDF/X standard has been defined for the document.",
          "datatype": {
            "type": "string"
          }
        },
        {
          "name": "ocRegistry",
          "shortdesc": "The web address for the output condition registry. Not valid when PDF/X-3 is the compliance standard or PDF export preset.",
          "datatype": {
            "type": "string"
          }
        },
        {
          "name": "interactiveElementsOption",
          "shortdesc": "How to draw interactive elements.",
          "datatype": {
            "type": "InteractiveElementsOptions"
          }
        },
        {
          "name": "exportWhichLayers",
          "shortdesc": "Which layers to export.",
          "datatype": {
            "type": "ExportLayerOptions"
          }
        },
        {
          "name": "properties",
          "shortdesc": "A property that allows setting of several properties at the same time.",
          "datatype": {
            "type": "Object"
          }
        }
      ],
      "method": [
        {
          "name": "toSource",
          "shortdesc": "Generates a string which, if executed, will return the PDFExportPreference.",
          "datatype": {
            "type": "string"
          }
        },
        {
          "name": "getElements",
          "shortdesc": "Resolves the object specifier, creating an array of object references.",
          "datatype": {
            "type": "PDFExportPreference",
            "array": {}
          }
        },
        {
          "name": "toSpecifier",
          "shortdesc": "Retrieves the object specifier.",
          "datatype": {
            "type": "string"
          }
        },
        {
          "name": "addEventListener",
          "shortdesc": "Adds an event listener.",
          "parameters": {
            "parameter": [
              {
                "name": "eventType",
                "shortdesc": "The event type.",
                "datatype": {
                  "type": "string"
                }
              },
              {
                "name": "handler",
                "shortdesc": "The event handler. Can accept: File or JavaScript Function.",
                "datatype": {
                  "type": "mixed"
                }
              },
              {
                "name": "captures",
                "optional": true,
                "shortdesc": "This parameter is obsolete. &amp;&#35;40;Optional&#41;",
                "datatype": {
                  "type": "bool",
                  "value": false
                }
              }
            ]
          },
          "datatype": {
            "type": "EventListener"
          }
        },
        {
          "name": "removeEventListener",
          "shortdesc": "Removes the event listener.",
          "parameters": {
            "parameter": [
              {
                "name": "eventType",
                "shortdesc": "The registered event type.",
                "datatype": {
                  "type": "string"
                }
              },
              {
                "name": "handler",
                "shortdesc": "The registered event handler. Can accept: File or JavaScript Function.",
                "datatype": {
                  "type": "mixed"
                }
              },
              {
                "name": "captures",
                "optional": true,
                "shortdesc": "This parameter is obsolete. &amp;&#35;40;Optional&#41;",
                "datatype": {
                  "type": "bool",
                  "value": false
                }
              }
            ]
          },
          "datatype": {
            "type": "bool"
          }
        }
      ]
    }
  ]
}