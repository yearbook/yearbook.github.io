{
  "name": "FindChangeGradientFeatherSetting",
  "dynamic": true,
  "superclass": {
    "href": "#/GradientFeatherSetting",
    "$t": "GradientFeatherSetting"
  },
  "shortdesc": "Gradient feather effect settings.",
  "elements": [
    {
      "type": "instance",
      "property": [
        {
          "name": "isValid",
          "rwaccess": "readonly",
          "shortdesc": "Returns true if the object specifier resolves to valid objects.",
          "datatype": {
            "type": "bool"
          }
        },
        {
          "name": "parent",
          "rwaccess": "readonly",
          "shortdesc": "The parent of the FindChangeGradientFeatherSetting &amp;&#35;40;a FindChangeTransparencySetting, FindChangeStrokeTransparencySetting, FindChangeFillTransparencySetting or FindChangeContentTransparencySetting&#41;.",
          "datatype": {
            "type": "mixed"
          }
        },
        {
          "name": "opacityGradientStops",
          "rwaccess": "readonly",
          "shortdesc": "A collection of opacity gradient stops.",
          "datatype": {
            "type": "OpacityGradientStops"
          }
        },
        {
          "name": "events",
          "rwaccess": "readonly",
          "shortdesc": "A collection of events.",
          "datatype": {
            "type": "Events"
          }
        },
        {
          "name": "eventListeners",
          "rwaccess": "readonly",
          "shortdesc": "A collection of event listeners.",
          "datatype": {
            "type": "EventListeners"
          }
        },
        {
          "name": "applied",
          "shortdesc": "If true, the gradient feather effect is applied. Can return: Boolean or NothingEnum enumerator.",
          "datatype": {
            "type": "mixed"
          }
        },
        {
          "name": "type",
          "shortdesc": "The type of gradient. Can return: GradientType enumerator or NothingEnum enumerator.",
          "datatype": {
            "type": "mixed"
          }
        },
        {
          "name": "angle",
          "shortdesc": "The angle of the gradient feather. Can return: Real &amp;&#35;40;-180 - 180&#41; or NothingEnum enumerator.",
          "datatype": {
            "type": "mixed"
          }
        },
        {
          "name": "length",
          "shortdesc": "The length of the axial gradient, or radius of the radial gradient. Can return: Unit or NothingEnum enumerator.",
          "datatype": {
            "type": "mixed"
          }
        },
        {
          "name": "gradientStart",
          "shortdesc": "The center point &amp;&#35;40;for a radial gradient&#41; or starting point (for a linear gradient) applied to the fill, as page coordinates in the format [x, y]. Can return: Array of 2 Units or NothingEnum enumerator.",
          "datatype": {
            "type": "mixed"
          }
        },
        {
          "name": "hiliteAngle",
          "shortdesc": "The hilite angle of the radial gradient feather. Can return: Real or NothingEnum enumerator.",
          "datatype": {
            "type": "mixed"
          }
        },
        {
          "name": "hiliteLength",
          "shortdesc": "The hilite length of the radial gradient feather. Can return: Unit or NothingEnum enumerator.",
          "datatype": {
            "type": "mixed"
          }
        },
        {
          "name": "properties",
          "shortdesc": "A property that allows setting of several properties at the same time.",
          "datatype": {
            "type": "Object"
          }
        }
      ],
      "method": [
        {
          "name": "toSource",
          "shortdesc": "Generates a string which, if executed, will return the FindChangeGradientFeatherSetting.",
          "datatype": {
            "type": "string"
          }
        },
        {
          "name": "getElements",
          "shortdesc": "Resolves the object specifier, creating an array of object references.",
          "datatype": {
            "type": "FindChangeGradientFeatherSetting",
            "array": {}
          }
        },
        {
          "name": "toSpecifier",
          "shortdesc": "Retrieves the object specifier.",
          "datatype": {
            "type": "string"
          }
        },
        {
          "name": "addEventListener",
          "shortdesc": "Adds an event listener.",
          "parameters": {
            "parameter": [
              {
                "name": "eventType",
                "shortdesc": "The event type.",
                "datatype": {
                  "type": "string"
                }
              },
              {
                "name": "handler",
                "shortdesc": "The event handler. Can accept: File or JavaScript Function.",
                "datatype": {
                  "type": "mixed"
                }
              },
              {
                "name": "captures",
                "optional": true,
                "shortdesc": "This parameter is obsolete. &amp;&#35;40;Optional&#41;",
                "datatype": {
                  "type": "bool",
                  "value": false
                }
              }
            ]
          },
          "datatype": {
            "type": "EventListener"
          }
        },
        {
          "name": "removeEventListener",
          "shortdesc": "Removes the event listener.",
          "parameters": {
            "parameter": [
              {
                "name": "eventType",
                "shortdesc": "The registered event type.",
                "datatype": {
                  "type": "string"
                }
              },
              {
                "name": "handler",
                "shortdesc": "The registered event handler. Can accept: File or JavaScript Function.",
                "datatype": {
                  "type": "mixed"
                }
              },
              {
                "name": "captures",
                "optional": true,
                "shortdesc": "This parameter is obsolete. &amp;&#35;40;Optional&#41;",
                "datatype": {
                  "type": "bool",
                  "value": false
                }
              }
            ]
          },
          "datatype": {
            "type": "bool"
          }
        }
      ]
    }
  ]
}