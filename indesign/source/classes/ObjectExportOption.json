{
  "name": "ObjectExportOption",
  "dynamic": true,
  "superclass": {
    "href": "#/Preference",
    "$t": "Preference"
  },
  "shortdesc": "Export options for the object",
  "elements": [
    {
      "type": "instance",
      "property": [
        {
          "name": "isValid",
          "rwaccess": "readonly",
          "shortdesc": "Returns true if the object specifier resolves to valid objects.",
          "datatype": {
            "type": "bool"
          }
        },
        {
          "name": "parent",
          "rwaccess": "readonly",
          "shortdesc": "The parent of the ObjectExportOption &amp;&#35;40;a ObjectStyle, SplineItem, Polygon, GraphicLine, Rectangle, Oval, Group or TextFrame&#41;.",
          "datatype": {
            "type": "mixed"
          }
        },
        {
          "name": "events",
          "rwaccess": "readonly",
          "shortdesc": "A collection of events.",
          "datatype": {
            "type": "Events"
          }
        },
        {
          "name": "eventListeners",
          "rwaccess": "readonly",
          "shortdesc": "A collection of event listeners.",
          "datatype": {
            "type": "EventListeners"
          }
        },
        {
          "name": "altTextSourceType",
          "shortdesc": "The source type of alternate text",
          "datatype": {
            "type": "SourceType"
          }
        },
        {
          "name": "actualTextSourceType",
          "shortdesc": "The source type of actual text",
          "datatype": {
            "type": "SourceType"
          }
        },
        {
          "name": "customAltText",
          "shortdesc": "The custom alternate text entered by the user",
          "datatype": {
            "type": "string"
          }
        },
        {
          "name": "customActualText",
          "shortdesc": "The custom actual text entered by the user",
          "datatype": {
            "type": "string"
          }
        },
        {
          "name": "altMetadataProperty",
          "shortdesc": "The metadata property to use as source of alternate text. Can return: Ordered array containing namespacePrefix:String, propertyPath:String.",
          "datatype": {
            "type": "mixed"
          }
        },
        {
          "name": "actualMetadataProperty",
          "shortdesc": "The metadata property to use as source of actual text. Can return: Ordered array containing namespacePrefix:String, propertyPath:String.",
          "datatype": {
            "type": "mixed"
          }
        },
        {
          "name": "applyTagType",
          "shortdesc": "The tag type of page item",
          "datatype": {
            "type": "TagType"
          }
        },
        {
          "name": "customImageConversion",
          "shortdesc": "If true, custom image conversion is enabled for object",
          "datatype": {
            "type": "bool"
          }
        },
        {
          "name": "imageConversionType",
          "shortdesc": "Allows user to select the image format for conversion",
          "datatype": {
            "type": "ImageFormat"
          }
        },
        {
          "name": "customImageSizeOption",
          "shortdesc": "Allows user to select the image size option for conversion",
          "datatype": {
            "type": "ImageSizeOption"
          }
        },
        {
          "name": "imageExportResolution",
          "shortdesc": "The export resolution",
          "datatype": {
            "type": "ImageResolution"
          }
        },
        {
          "name": "gifOptionsPalette",
          "shortdesc": "The color palette for GIF conversion. Note: Not valid when image conversion is JPEG.",
          "datatype": {
            "type": "GIFOptionsPalette"
          }
        },
        {
          "name": "gifOptionsInterlaced",
          "shortdesc": "If true, generates interlaced GIFs. Note: Not valid  when image conversion is JPEG.",
          "datatype": {
            "type": "bool"
          }
        },
        {
          "name": "jpegOptionsQuality",
          "shortdesc": "The quality of converted JPEG images. Note: Not valid when image conversion is GIF.",
          "datatype": {
            "type": "JPEGOptionsQuality"
          }
        },
        {
          "name": "jpegOptionsFormat",
          "shortdesc": "The formatting method for converted JPEG images. Note: Not valid  when image conversion is GIF.",
          "datatype": {
            "type": "JPEGOptionsFormat"
          }
        },
        {
          "name": "imageAlignment",
          "shortdesc": "Alignment applied to images",
          "datatype": {
            "type": "ImageAlignmentType"
          }
        },
        {
          "name": "imageSpaceBefore",
          "shortdesc": "Space Before applied to images",
          "datatype": {
            "type": "number",
            "min": 0,
            "max": 8640
          }
        },
        {
          "name": "imageSpaceAfter",
          "shortdesc": "Space After applied to images",
          "datatype": {
            "type": "number",
            "min": 0,
            "max": 8640
          }
        },
        {
          "name": "useImagePageBreak",
          "shortdesc": "If true, image page break settings will be used in objects",
          "datatype": {
            "type": "bool"
          }
        },
        {
          "name": "imagePageBreak",
          "shortdesc": "Image page break settings to be used with objects",
          "datatype": {
            "type": "ImagePageBreakType"
          }
        },
        {
          "name": "customLayout",
          "shortdesc": "If true, custom layout is enabled for object",
          "datatype": {
            "type": "bool"
          }
        },
        {
          "name": "customLayoutType",
          "shortdesc": "Custom Layout settings to be used for object",
          "datatype": {
            "type": "CustomLayoutTypeEnum"
          }
        },
        {
          "name": "properties",
          "shortdesc": "A property that allows setting of several properties at the same time.",
          "datatype": {
            "type": "Object"
          }
        }
      ],
      "method": [
        {
          "name": "altText",
          "shortdesc": "Provides the alternate text for the object",
          "datatype": {
            "type": "string"
          }
        },
        {
          "name": "actualText",
          "shortdesc": "Provides the actual text for the object",
          "datatype": {
            "type": "string"
          }
        },
        {
          "name": "toSource",
          "shortdesc": "Generates a string which, if executed, will return the ObjectExportOption.",
          "datatype": {
            "type": "string"
          }
        },
        {
          "name": "getElements",
          "shortdesc": "Resolves the object specifier, creating an array of object references.",
          "datatype": {
            "type": "ObjectExportOption",
            "array": {}
          }
        },
        {
          "name": "toSpecifier",
          "shortdesc": "Retrieves the object specifier.",
          "datatype": {
            "type": "string"
          }
        },
        {
          "name": "addEventListener",
          "shortdesc": "Adds an event listener.",
          "parameters": {
            "parameter": [
              {
                "name": "eventType",
                "shortdesc": "The event type.",
                "datatype": {
                  "type": "string"
                }
              },
              {
                "name": "handler",
                "shortdesc": "The event handler. Can accept: File or JavaScript Function.",
                "datatype": {
                  "type": "mixed"
                }
              },
              {
                "name": "captures",
                "optional": true,
                "shortdesc": "This parameter is obsolete. &amp;&#35;40;Optional&#41;",
                "datatype": {
                  "type": "bool",
                  "value": false
                }
              }
            ]
          },
          "datatype": {
            "type": "EventListener"
          }
        },
        {
          "name": "removeEventListener",
          "shortdesc": "Removes the event listener.",
          "parameters": {
            "parameter": [
              {
                "name": "eventType",
                "shortdesc": "The registered event type.",
                "datatype": {
                  "type": "string"
                }
              },
              {
                "name": "handler",
                "shortdesc": "The registered event handler. Can accept: File or JavaScript Function.",
                "datatype": {
                  "type": "mixed"
                }
              },
              {
                "name": "captures",
                "optional": true,
                "shortdesc": "This parameter is obsolete. &amp;&#35;40;Optional&#41;",
                "datatype": {
                  "type": "bool",
                  "value": false
                }
              }
            ]
          },
          "datatype": {
            "type": "bool"
          }
        }
      ]
    }
  ]
}