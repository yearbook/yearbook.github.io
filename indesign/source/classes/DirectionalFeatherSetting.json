{
  "name": "DirectionalFeatherSetting",
  "dynamic": true,
  "superclass": {
    "href": "#/Preference",
    "$t": "Preference"
  },
  "shortdesc": "Directional feather effect settings.",
  "elements": [
    {
      "type": "instance",
      "property": [
        {
          "name": "isValid",
          "rwaccess": "readonly",
          "shortdesc": "Returns true if the object specifier resolves to valid objects.",
          "datatype": {
            "type": "bool"
          }
        },
        {
          "name": "parent",
          "rwaccess": "readonly",
          "shortdesc": "The parent of the DirectionalFeatherSetting &amp;&#35;40;a TransparencySetting, StrokeTransparencySetting, FillTransparencySetting or ContentTransparencySetting&#41;.",
          "datatype": {
            "type": "mixed"
          }
        },
        {
          "name": "events",
          "rwaccess": "readonly",
          "shortdesc": "A collection of events.",
          "datatype": {
            "type": "Events"
          }
        },
        {
          "name": "eventListeners",
          "rwaccess": "readonly",
          "shortdesc": "A collection of event listeners.",
          "datatype": {
            "type": "EventListeners"
          }
        },
        {
          "name": "applied",
          "shortdesc": "If true, the directional feather effect is applied.",
          "datatype": {
            "type": "bool"
          }
        },
        {
          "name": "leftWidth",
          "shortdesc": "The feather width &amp;&#35;40;in pixels&#41; on the left side of the DirectionalFeatherSetting.",
          "datatype": {
            "type": "Measurement Unit &amp;&#35;40;Number or String&#41;=any",
            "min": 0,
            "max": 1000
          }
        },
        {
          "name": "rightWidth",
          "shortdesc": "The feather width &amp;&#35;40;in pixels&#41; on the right side of the DirectionalFeatherSetting. (Range: .2 to 250)",
          "datatype": {
            "type": "Measurement Unit &amp;&#35;40;Number or String&#41;=any",
            "min": 0,
            "max": 1000
          }
        },
        {
          "name": "topWidth",
          "shortdesc": "The feather width &amp;&#35;40;in pixels&#41; on the top side of the object DirectionalFeatherSetting. (Range: .2 to 250)",
          "datatype": {
            "type": "Measurement Unit &amp;&#35;40;Number or String&#41;=any",
            "min": 0,
            "max": 1000
          }
        },
        {
          "name": "bottomWidth",
          "shortdesc": "The feather width &amp;&#35;40;in pixels&#41; on the bottom side of the object DirectionalFeatherSetting. (Range: .2 to 250)",
          "datatype": {
            "type": "Measurement Unit &amp;&#35;40;Number or String&#41;=any",
            "min": 0,
            "max": 1000
          }
        },
        {
          "name": "chokeAmount",
          "shortdesc": "The amount to choke the directional feather &amp;&#35;40;as a percentage of the feather width&#41;. (Range: 0 to 100)",
          "datatype": {
            "type": "number",
            "min": 0,
            "max": 100
          }
        },
        {
          "name": "angle",
          "shortdesc": "The angle of the feather. &amp;&#35;40;Range: 180 to -180&#41;",
          "datatype": {
            "type": "number",
            "min": -180,
            "max": 180
          }
        },
        {
          "name": "followShapeMode",
          "shortdesc": "The shape-following algorithm applied to the feather.",
          "datatype": {
            "type": "FollowShapeModeOptions"
          }
        },
        {
          "name": "noise",
          "shortdesc": "The amount of noise &amp;&#35;40;as a percentage&#41; applied to the feather region. (Range: 0 to 100)",
          "datatype": {
            "type": "number",
            "min": 0,
            "max": 100
          }
        },
        {
          "name": "properties",
          "shortdesc": "A property that allows setting of several properties at the same time.",
          "datatype": {
            "type": "Object"
          }
        }
      ],
      "method": [
        {
          "name": "toSource",
          "shortdesc": "Generates a string which, if executed, will return the DirectionalFeatherSetting.",
          "datatype": {
            "type": "string"
          }
        },
        {
          "name": "getElements",
          "shortdesc": "Resolves the object specifier, creating an array of object references.",
          "datatype": {
            "type": "DirectionalFeatherSetting",
            "array": {}
          }
        },
        {
          "name": "toSpecifier",
          "shortdesc": "Retrieves the object specifier.",
          "datatype": {
            "type": "string"
          }
        },
        {
          "name": "addEventListener",
          "shortdesc": "Adds an event listener.",
          "parameters": {
            "parameter": [
              {
                "name": "eventType",
                "shortdesc": "The event type.",
                "datatype": {
                  "type": "string"
                }
              },
              {
                "name": "handler",
                "shortdesc": "The event handler. Can accept: File or JavaScript Function.",
                "datatype": {
                  "type": "mixed"
                }
              },
              {
                "name": "captures",
                "optional": true,
                "shortdesc": "This parameter is obsolete. &amp;&#35;40;Optional&#41;",
                "datatype": {
                  "type": "bool",
                  "value": false
                }
              }
            ]
          },
          "datatype": {
            "type": "EventListener"
          }
        },
        {
          "name": "removeEventListener",
          "shortdesc": "Removes the event listener.",
          "parameters": {
            "parameter": [
              {
                "name": "eventType",
                "shortdesc": "The registered event type.",
                "datatype": {
                  "type": "string"
                }
              },
              {
                "name": "handler",
                "shortdesc": "The registered event handler. Can accept: File or JavaScript Function.",
                "datatype": {
                  "type": "mixed"
                }
              },
              {
                "name": "captures",
                "optional": true,
                "shortdesc": "This parameter is obsolete. &amp;&#35;40;Optional&#41;",
                "datatype": {
                  "type": "bool",
                  "value": false
                }
              }
            ]
          },
          "datatype": {
            "type": "bool"
          }
        }
      ]
    }
  ]
}