{
  "name": "TableStyle",
  "dynamic": true,
  "shortdesc": "A table style.",
  "elements": [
    {
      "type": "instance",
      "property": [
        {
          "name": "id",
          "rwaccess": "readonly",
          "shortdesc": "The unique ID of the TableStyle.",
          "datatype": {
            "type": "Number"
          }
        },
        {
          "name": "isValid",
          "rwaccess": "readonly",
          "shortdesc": "Returns true if the object specifier resolves to valid objects.",
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "parent",
          "rwaccess": "readonly",
          "shortdesc": "The parent of the TableStyle &#40;a Document, Application or TableStyleGroup).",
          "datatype": {
            "type": "Mixed"
          }
        },
        {
          "name": "index",
          "rwaccess": "readonly",
          "shortdesc": "The index of the TableStyle within its containing object.",
          "datatype": {
            "type": "Number"
          }
        },
        {
          "name": "events",
          "rwaccess": "readonly",
          "shortdesc": "A collection of events.",
          "datatype": {
            "type": "Events"
          }
        },
        {
          "name": "eventListeners",
          "rwaccess": "readonly",
          "shortdesc": "A collection of event listeners.",
          "datatype": {
            "type": "EventListeners"
          }
        },
        {
          "name": "name",
          "shortdesc": "The name of the TableStyle.",
          "datatype": {
            "type": "String"
          }
        },
        {
          "name": "basedOn",
          "shortdesc": "The style that this style is based on. Can return: TableStyle or String.",
          "datatype": {
            "type": "Mixed"
          }
        },
        {
          "name": "strokeOrder",
          "shortdesc": "The order in which to display row and column strokes at corners.",
          "datatype": {
            "type": "StrokeOrderTypes"
          }
        },
        {
          "name": "topBorderStrokeWeight",
          "shortdesc": "The stroke weight of the table's top border stroke.",
          "datatype": {
            "type": "Measurement Unit &amp;&#35;40;Number or String&#41;=any"
          }
        },
        {
          "name": "topBorderStrokeType",
          "shortdesc": "The stroke type of the top border. Can also accept: String.",
          "datatype": {
            "type": "StrokeStyle"
          }
        },
        {
          "name": "topBorderStrokeColor",
          "shortdesc": "The color, specified as a swatch &#40;color, gradient, tint, or mixed ink), of the table's top border stroke.",
          "datatype": {
            "type": "Swatch"
          }
        },
        {
          "name": "topBorderStrokeTint",
          "shortdesc": "The tint &#40;as a percentage) of the table's top border stroke. (Range: 0 to 100)",
          "datatype": {
            "type": "Number"
          }
        },
        {
          "name": "topBorderStrokeOverprint",
          "shortdesc": "If true, the top border strokes will overprint.",
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "topBorderStrokeGapColor",
          "shortdesc": "The gap color, specified as a swatch &#40;color, gradient, tint, or mixed ink), of the table's top border stroke. Note: Valid only when top border stroke type is not solid.",
          "datatype": {
            "type": "Swatch"
          }
        },
        {
          "name": "topBorderStrokeGapTint",
          "shortdesc": "The tint &#40;as a percentage) of the gap color of the table's top border stroke. (Range: 0 to 100) Note: Valid only when top border stroke type is not solid.",
          "datatype": {
            "type": "Number"
          }
        },
        {
          "name": "topBorderStrokeGapOverprint",
          "shortdesc": "If true, the gap of the top border stroke will overprint. Note: Valid only when top border stroke type is not solid.",
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "leftBorderStrokeWeight",
          "shortdesc": "The stroke weight of the left border stroke.",
          "datatype": {
            "type": "Measurement Unit &amp;&#35;40;Number or String&#41;=any"
          }
        },
        {
          "name": "leftBorderStrokeType",
          "shortdesc": "The stroke type of the left border. Can also accept: String.",
          "datatype": {
            "type": "StrokeStyle"
          }
        },
        {
          "name": "leftBorderStrokeColor",
          "shortdesc": "The color, specified as a swatch &#40;color, gradient, tint, or mixed ink), of the left border stroke.",
          "datatype": {
            "type": "Swatch"
          }
        },
        {
          "name": "leftBorderStrokeTint",
          "shortdesc": "The tint &#40;as a percentage) of the left border stroke. (Range: 0 to 100)",
          "datatype": {
            "type": "Number"
          }
        },
        {
          "name": "leftBorderStrokeOverprint",
          "shortdesc": "If true, the left border stroke will overprint.",
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "leftBorderStrokeGapColor",
          "shortdesc": "The gap color, specified as a swatch &#40;color, gradient, tint, or mixed ink), of the left border stroke. Note: Valid only when left border stroke type is not solid.",
          "datatype": {
            "type": "Swatch"
          }
        },
        {
          "name": "leftBorderStrokeGapTint",
          "shortdesc": "The tint &#40;as a percentage) of the gap color of the left border stroke. (Range: 0 to 100) Note: Valid only when left border stroke type is not solid.",
          "datatype": {
            "type": "Number"
          }
        },
        {
          "name": "leftBorderStrokeGapOverprint",
          "shortdesc": "If true, the gap of the left border stroke will overprint. Note: Valid only when left border stroke type is not solid.",
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "bottomBorderStrokeWeight",
          "shortdesc": "The stroke weight of the bottom border stroke.",
          "datatype": {
            "type": "Measurement Unit &amp;&#35;40;Number or String&#41;=any"
          }
        },
        {
          "name": "bottomBorderStrokeType",
          "shortdesc": "The stroke type of the bottom border. Can also accept: String.",
          "datatype": {
            "type": "StrokeStyle"
          }
        },
        {
          "name": "bottomBorderStrokeColor",
          "shortdesc": "The color, specified as a swatch &#40;color, gradient, tint, or mixed ink), of the bottom border stroke.",
          "datatype": {
            "type": "Swatch"
          }
        },
        {
          "name": "bottomBorderStrokeTint",
          "shortdesc": "The tint &#40;as a percentage) of the bottom border stroke. (Range: 0 to 100)",
          "datatype": {
            "type": "Number"
          }
        },
        {
          "name": "bottomBorderStrokeOverprint",
          "shortdesc": "If true, the bottom border stroke will overprint.",
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "bottomBorderStrokeGapColor",
          "shortdesc": "The gap color, specified as a swatch &#40;color, gradient, tint, or mixed ink), of the bottom border stroke. Note: Valid only when bottom border stroke type is not solid.",
          "datatype": {
            "type": "Swatch"
          }
        },
        {
          "name": "bottomBorderStrokeGapTint",
          "shortdesc": "The tint &#40;as a percentage) of the gap color of the bottom border stroke. (Range: 0 to 100) Note: Valid only when bottom border stroke type is not solid.",
          "datatype": {
            "type": "Number"
          }
        },
        {
          "name": "bottomBorderStrokeGapOverprint",
          "shortdesc": "If true, the gap of the bottom border stroke will overprint. Note: Valid only when bottom border stroke type is not solid.",
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "rightBorderStrokeWeight",
          "shortdesc": "The stroke weight of the right border stroke.",
          "datatype": {
            "type": "Measurement Unit &amp;&#35;40;Number or String&#41;=any"
          }
        },
        {
          "name": "rightBorderStrokeType",
          "shortdesc": "The stroke type of the right border. Can also accept: String.",
          "datatype": {
            "type": "StrokeStyle"
          }
        },
        {
          "name": "rightBorderStrokeColor",
          "shortdesc": "The color, specified as a swatch &#40;color, gradient, tint, or mixed ink), of the right border stroke.",
          "datatype": {
            "type": "Swatch"
          }
        },
        {
          "name": "rightBorderStrokeTint",
          "shortdesc": "The tint &#40;as a percentage) of the right border stroke. (Range: 0 to 100)",
          "datatype": {
            "type": "Number"
          }
        },
        {
          "name": "rightBorderStrokeOverprint",
          "shortdesc": "If true, the right border stroke will overprint.",
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "rightBorderStrokeGapColor",
          "shortdesc": "The gap color, specified as a swatch &#40;color, gradient, tint, or mixed ink), of the right border stroke. Note: Valid only when right border stroke type is not solid.",
          "datatype": {
            "type": "Swatch"
          }
        },
        {
          "name": "rightBorderStrokeGapTint",
          "shortdesc": "The tint &#40;as a percentage) of the gap color of the right border stroke. (Range: 0 to 100) Note: Valid only when right border stroke type is not solid.",
          "datatype": {
            "type": "Number"
          }
        },
        {
          "name": "rightBorderStrokeGapOverprint",
          "shortdesc": "If true, the gap color of the right border stroke will overprint. Note: Valid only when right border stroke type is not solid.",
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "spaceBefore",
          "shortdesc": "The space above the table.",
          "datatype": {
            "type": "Measurement Unit &amp;&#35;40;Number or String&#41;=any"
          }
        },
        {
          "name": "spaceAfter",
          "shortdesc": "The space below the table.",
          "datatype": {
            "type": "Measurement Unit &amp;&#35;40;Number or String&#41;=any"
          }
        },
        {
          "name": "skipFirstAlternatingStrokeRows",
          "shortdesc": "The number of body rows at the beginning of the table in which to skip border stroke formatting. Note: Valid when start row stroke count is 1 or greater and/or end row stroke count is 1 or greater.",
          "datatype": {
            "type": "Number"
          }
        },
        {
          "name": "skipLastAlternatingStrokeRows",
          "shortdesc": "The number of body rows at the end of the table in which to skip border stroke formatting. Note: Valid when start row stroke count is 1 or greater and/or end row stroke count is 1 or greater.",
          "datatype": {
            "type": "Number"
          }
        },
        {
          "name": "startRowStrokeCount",
          "shortdesc": "The number of rows in the first alternating row strokes group.",
          "datatype": {
            "type": "Number"
          }
        },
        {
          "name": "startRowStrokeColor",
          "shortdesc": "The color, specified as a swatch &#40;color, gradient, tint, or mixed ink), of row borders in the first alternating row strokes group. Note: Valid when start row stroke count is 1 or greater.",
          "datatype": {
            "type": "Swatch"
          }
        },
        {
          "name": "startRowStrokeWeight",
          "shortdesc": "The stroke weight of row borders in the first alternating row strokes group. Note: Valid when start row stroke count is 1 or greater.",
          "datatype": {
            "type": "Measurement Unit &amp;&#35;40;Number or String&#41;=any"
          }
        },
        {
          "name": "startRowStrokeType",
          "shortdesc": "The stroke type of rows in the first alternating strokes group. Can also accept: String.",
          "datatype": {
            "type": "StrokeStyle"
          }
        },
        {
          "name": "startRowStrokeTint",
          "shortdesc": "The tint &#40;as a percentage) of the borders in the first alternating row strokes group. (Range: 0 to 100) Note: Valid when start row stroke count is 1 or greater.",
          "datatype": {
            "type": "Number"
          }
        },
        {
          "name": "startRowStrokeGapOverprint",
          "shortdesc": "If true, the gap color of the row border stroke in the first alternating row strokes group will overprint. Note: Valid when start row stroke count is 1 or greater.",
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "startRowStrokeGapColor",
          "shortdesc": "The stroke gap color of row borders in the first alternating row strokes group, specified as a swatch &#40;color, gradient, tint, or mixed ink). Note: Valid when start row stroke count is 1 or greater.",
          "datatype": {
            "type": "Swatch"
          }
        },
        {
          "name": "startRowStrokeGapTint",
          "shortdesc": "The tint &#40;as a percentage) of the gap color of row borders in the first alternating rows group. (Range: 0 to 100) Note: Valid when start row stroke count is 1 or greater.",
          "datatype": {
            "type": "Number"
          }
        },
        {
          "name": "startRowStrokeOverprint",
          "shortdesc": "If true, the row borders in the first alternating row strokes group will overprint. Note: Valid when start row stroke count is 1 or greater.",
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "endRowStrokeCount",
          "shortdesc": "The number of rows in the second alternating row strokes group.",
          "datatype": {
            "type": "Number"
          }
        },
        {
          "name": "endRowStrokeColor",
          "shortdesc": "The stroke color, specified as a swatch &#40;color, gradient, tint, or mixed ink), of row borders in the second alternating row strokes group. Note: Valid when end row stroke count is 1 or greater.",
          "datatype": {
            "type": "Swatch"
          }
        },
        {
          "name": "endRowStrokeWeight",
          "shortdesc": "The stroke weight of row borders in the second alternating row strokes group. Note: Valid when end row stroke count is 1 or greater.",
          "datatype": {
            "type": "Measurement Unit &amp;&#35;40;Number or String&#41;=any"
          }
        },
        {
          "name": "endRowStrokeType",
          "shortdesc": "The stroke type of rows in the second alternating strokes group. Can also accept: String.",
          "datatype": {
            "type": "StrokeStyle"
          }
        },
        {
          "name": "endRowStrokeTint",
          "shortdesc": "The tint &#40;as a percentage) of the row borders in the second alternating strokes group. (Range: 0 to 100) Note: Valid when end row stroke count is 1 or greater.",
          "datatype": {
            "type": "Number"
          }
        },
        {
          "name": "endRowStrokeOverprint",
          "shortdesc": "If true, the rows in the second alternating rows group will overprint. Note: Valid when end row stroke count is 1 or greater.",
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "endRowStrokeGapColor",
          "shortdesc": "The gap color, specified as a swatch &#40;color, gradient, tint, or mixed ink), of row borders in the second alternating rows group. Note: Valid when end row stroke count is 1 or greater.",
          "datatype": {
            "type": "Swatch"
          }
        },
        {
          "name": "endRowStrokeGapTint",
          "shortdesc": "The tint &#40;as a percentage) of the gap color of rows in the second alternating strokes group. (Range: 0 to 100) Note: Valid when end row stroke count is 1 or greater and end row stroke type is not solid.",
          "datatype": {
            "type": "Number"
          }
        },
        {
          "name": "endRowStrokeGapOverprint",
          "shortdesc": "If true, the gap of the row borders in the second alternating rows group will overprint. Note: Valid when end row stroke count is 1 or greater.",
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "skipFirstAlternatingStrokeColumns",
          "shortdesc": "The number of columns on the left of the table in which to skip border stroke formatting. Note: Valid when start column stroke count is 1 or greater and/or end column stroke count is 1 or greater.",
          "datatype": {
            "type": "Number"
          }
        },
        {
          "name": "skipLastAlternatingStrokeColumns",
          "shortdesc": "The number of columns on the right side of the table in which to skip border stroke formatting. Note: Valid when start column stroke count is 1 or greater and/or end column stroke count is 1 or greater.",
          "datatype": {
            "type": "Number"
          }
        },
        {
          "name": "startColumnStrokeCount",
          "shortdesc": "The number of columns in the first alternating column strokes group.",
          "datatype": {
            "type": "Number"
          }
        },
        {
          "name": "startColumnStrokeColor",
          "shortdesc": "The stroke color, specified as a swatch &#40;color, gradient, tint, or mixed ink), of column borders in the first alternating column strokes group.",
          "datatype": {
            "type": "Swatch"
          }
        },
        {
          "name": "startColumnStrokeWeight",
          "shortdesc": "The stroke weight of column borders in the first alternating column strokes group. Note: Valid when start column stroke count is 1 or greater.",
          "datatype": {
            "type": "Measurement Unit &amp;&#35;40;Number or String&#41;=any"
          }
        },
        {
          "name": "startColumnStrokeType",
          "shortdesc": "The stroke type of columns in the first alternating strokes group. Can also accept: String.",
          "datatype": {
            "type": "StrokeStyle"
          }
        },
        {
          "name": "startColumnStrokeTint",
          "shortdesc": "The tint &#40;as a percentage) of column borders in the first alternating column strokes group. (Range: 0 to 100) Note: Valid when start column stroke count is 1 or greater.",
          "datatype": {
            "type": "Number"
          }
        },
        {
          "name": "startColumnStrokeOverprint",
          "shortdesc": "If true, the column borders in the first alternating column strokes group will overprint. Note: Valid when start column stroke count is 1 or greater.",
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "startColumnStrokeGapColor",
          "shortdesc": "The stroke gap color, specified as a swatch &#40;color, gradient, tint, or mixed ink), of column borders in the first alternating column strokes group. Note: Valid when start column stroke count is 1 or greater.",
          "datatype": {
            "type": "Swatch"
          }
        },
        {
          "name": "startColumnStrokeGapTint",
          "shortdesc": "The tint &#40;as a percentage) of the gap color of column borders in the first alternating column strokes group. (Range: 0 to 100) Note: Valid when start column stroke count is 1 or greater.",
          "datatype": {
            "type": "Number"
          }
        },
        {
          "name": "startColumnStrokeGapOverprint",
          "shortdesc": "If true, the gap of the column borders in the first alternating column strokes group will overprint. Note: Valid when start column stroke count is 1 or greater.",
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "endColumnStrokeCount",
          "shortdesc": "The number of columns in the second alternating column strokes group.",
          "datatype": {
            "type": "Number"
          }
        },
        {
          "name": "endColumnStrokeColor",
          "shortdesc": "The stroke color, specified as a swatch &#40;color, gradient, tint, or mixed ink), of column borders in the second alternating column strokes group. Note: Valid when end column stroke count is 1 or greater.",
          "datatype": {
            "type": "Swatch"
          }
        },
        {
          "name": "endColumnStrokeWeight",
          "shortdesc": "The stroke weight of column borders in the second alternating column strokes group. Note: Valid when end column stroke count is 1 or greater.",
          "datatype": {
            "type": "Measurement Unit &amp;&#35;40;Number or String&#41;=any"
          }
        },
        {
          "name": "endColumnLineStyle",
          "shortdesc": "The stroke type of columns in the second alternating strokes group. Can also accept: String.",
          "datatype": {
            "type": "StrokeStyle"
          }
        },
        {
          "name": "endColumnStrokeTint",
          "shortdesc": "The tint &#40;as a percentage) of column borders in the second alternating column strokes group. (Range: 0 to 100) Note: Valid when end column stroke count is 1 or greater.",
          "datatype": {
            "type": "Number"
          }
        },
        {
          "name": "endColumnStrokeOverprint",
          "shortdesc": "If true, the column borders in the second alternating column strokes group will overprint. Note: Valid when end column stroke count is 1 or greater.",
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "endColumnStrokeGapColor",
          "shortdesc": "The stroke gap color, specified as a swatch &#40;color, gradient, tint, or mixed ink), of column borders in the second alternating column strokes group. Note: Valid when end column stroke count is 1 or greater.",
          "datatype": {
            "type": "Swatch"
          }
        },
        {
          "name": "endColumnStrokeGapTint",
          "shortdesc": "The tint &#40;as a percentage) of the gap color of column borders in the second alternating column strokes group. (Range: 0 to 100) Note: Valid when end column stroke count is 1 or greater.",
          "datatype": {
            "type": "Number"
          }
        },
        {
          "name": "endColumnStrokeGapOverprint",
          "shortdesc": "If true, the gap of the column border stroke in the second alternating column strokes group will overprint. Note: Valid when end column stroke count is 1 or greater.",
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "columnFillsPriority",
          "shortdesc": "If true, hides alternating row fills. If false, hides alternating column fills.",
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "skipFirstAlternatingFillRows",
          "shortdesc": "The number of body rows at the beginning of the table to skip before applying the row fill color. Note: Valid when alternating fills are defined for table rows.",
          "datatype": {
            "type": "Number"
          }
        },
        {
          "name": "skipLastAlternatingFillRows",
          "shortdesc": "The number of body rows at the end of the table in which to not apply the row fill color. Note: Valid when alternating fills are defined for table rows.",
          "datatype": {
            "type": "Number"
          }
        },
        {
          "name": "startRowFillColor",
          "shortdesc": "The fill color, specified as a swatch &#40;color, gradient, tint, or mixed ink), of rows in the first alternating fills group. Note: Valid when alternating fills are defined for table rows.",
          "datatype": {
            "type": "Swatch"
          }
        },
        {
          "name": "startRowFillCount",
          "shortdesc": "The number of rows in the first alternating fills group. Note: Valid when alternating fills are defined for table rows.",
          "datatype": {
            "type": "Number"
          }
        },
        {
          "name": "startRowFillTint",
          "shortdesc": "The tint &#40;as a percentage) of the rows in the first alternating fills group. (Range: 0 to 100) Note: Valid when alternating fills are defined for table rows.",
          "datatype": {
            "type": "Number"
          }
        },
        {
          "name": "startRowFillOverprint",
          "shortdesc": "If true, the rows in the first alternating fills group will overprint. Note: Valid when alternating fills are defined for table rows.",
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "endRowFillCount",
          "shortdesc": "The number of rows in the second alternating fills group. Note: Valid when alternating fills are defined for table rows.",
          "datatype": {
            "type": "Number"
          }
        },
        {
          "name": "endRowFillColor",
          "shortdesc": "The fill color, specified as a swatch &#40;color, gradient, tint, or mixed ink), of rows in the second alternating fills group. Note: Valid when alternating fills are defined for table rows.",
          "datatype": {
            "type": "Swatch"
          }
        },
        {
          "name": "endRowFillTint",
          "shortdesc": "The tint &#40;as a percentage) of the rows in the second alternating fills group. (Range: 0 to 100) Note: Valid when alternating fills are defined for table rows.",
          "datatype": {
            "type": "Number"
          }
        },
        {
          "name": "endRowFillOverprint",
          "shortdesc": "If true, the rows in the second alternating fills group will overprint. Note: Valid when alternating fills are defined for table rows.",
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "skipFirstAlternatingFillColumns",
          "shortdesc": "The number of columns on the left side of the table to skip before applying the column fill color. Note: Valid when alternating fills are defined for table columns.",
          "datatype": {
            "type": "Number"
          }
        },
        {
          "name": "skipLastAlternatingFillColumns",
          "shortdesc": "The number columns on the right side of the table in which to not apply the column fill color. Note: Valid when alternating fills are defined for table columns.",
          "datatype": {
            "type": "Number"
          }
        },
        {
          "name": "startColumnFillCount",
          "shortdesc": "The number of columns in the first alternating fills group. Note: Valid when alternating fills are defined for table columns.",
          "datatype": {
            "type": "Number"
          }
        },
        {
          "name": "startColumnFillColor",
          "shortdesc": "The fill color, specified as a swatch &#40;color, gradient, tint, or mixed ink), of columns in the first alternating fills group. Note: Valid when alternating fills are defined for table columns.",
          "datatype": {
            "type": "Swatch"
          }
        },
        {
          "name": "startColumnFillTint",
          "shortdesc": "The tint &#40;as a percentage) of the columns in the first alternating fills group. (Range: 0 to 100) Note: Valid when alternating fills are defined for table columns.",
          "datatype": {
            "type": "Number"
          }
        },
        {
          "name": "startColumnFillOverprint",
          "shortdesc": "If true, the columns in the first alternating fills group will overprint. Note: Valid when alternating fills are defined for table columns.",
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "endColumnFillCount",
          "shortdesc": "The number of columns in the second alternating fills group. Note: Valid when alternating fills are defined for table columns.",
          "datatype": {
            "type": "Number"
          }
        },
        {
          "name": "endColumnFillColor",
          "shortdesc": "The fill color, specified as a swatch &#40;color, gradient, tint, or mixed ink), of columns in the second alternating fill group. Note: Valid when alternating fills are defined for table columns.",
          "datatype": {
            "type": "Swatch"
          }
        },
        {
          "name": "endColumnFillTint",
          "shortdesc": "The tint &#40;as a percentage) of the columns in the second alternating fills group. (Range: 0 to 100) Note: Valid when alternating fills are defined for table columns.",
          "datatype": {
            "type": "Number"
          }
        },
        {
          "name": "endColumnFillOverprint",
          "shortdesc": "If true, the columns in the second alternating fills group will overprint. Note: Valid when alternating fills are defined for table columns.",
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "headerRegionSameAsBodyRegion",
          "shortdesc": "If true, use the cell style of the body region for the header region.",
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "footerRegionSameAsBodyRegion",
          "shortdesc": "If true, uses the cell style of the body region for the footer region.",
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "leftColumnRegionSameAsBodyRegion",
          "shortdesc": "If true, uses the cell style of the body region for the left column region.",
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "rightColumnRegionSameAsBodyRegion",
          "shortdesc": "If true, uses the cell style of the body region for the right column region.",
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "headerRegionCellStyle",
          "shortdesc": "The cell style of the header region. Can also accept: String.",
          "datatype": {
            "type": "CellStyle"
          }
        },
        {
          "name": "footerRegionCellStyle",
          "shortdesc": "The cell style of the footer region. Can also accept: String.",
          "datatype": {
            "type": "CellStyle"
          }
        },
        {
          "name": "leftColumnRegionCellStyle",
          "shortdesc": "The cell style of the left column region. Can also accept: String.",
          "datatype": {
            "type": "CellStyle"
          }
        },
        {
          "name": "rightColumnRegionCellStyle",
          "shortdesc": "The cell style of the right column region. Can also accept: String.",
          "datatype": {
            "type": "CellStyle"
          }
        },
        {
          "name": "bodyRegionCellStyle",
          "shortdesc": "The cell style of the body region. Can also accept: String.",
          "datatype": {
            "type": "CellStyle"
          }
        },
        {
          "name": "label",
          "shortdesc": "A property that can be set to any string.",
          "datatype": {
            "type": "String"
          }
        },
        {
          "name": "properties",
          "shortdesc": "A property that allows setting of several properties at the same time.",
          "datatype": {
            "type": "Object"
          }
        }
      ],
      "method": [
        {
          "name": "remove",
          "shortdesc": "Deletes the style.",
          "parameters": [
            {
              "name": "replacingWith",
              "shortdesc": "The style to apply in place of the deleted style. &#40;Optional)",
              "datatype": {
                "type": "TableStyle"
              }
            }
          ]
        },
        {
          "name": "duplicate",
          "shortdesc": "Duplicates the TableStyle.",
          "datatype": {
            "type": "TableStyle"
          }
        },
        {
          "name": "move",
          "shortdesc": "Moves the style to the specified location.",
          "parameters": [
            {
              "name": "to",
              "shortdesc": "The location relative to the reference object or within the containing object.",
              "datatype": {
                "type": "LocationOptions"
              }
            },
            {
              "name": "reference",
              "shortdesc": "The reference object. Note: Required when the to parameter specifies before or after. Can accept: ParagraphStyle, ParagraphStyleGroup, CharacterStyle, CharacterStyleGroup, CellStyle, CellStyleGroup, TableStyle, TableStyleGroup, Document or Application. &#40;Optional)",
              "datatype": {
                "type": "Mixed"
              }
            }
          ],
          "datatype": {
            "type": "TableStyle"
          }
        },
        {
          "name": "insertLabel",
          "shortdesc": "Sets the label to the value associated with the specified key.",
          "parameters": [
            {
              "name": "key",
              "shortdesc": "The key.",
              "datatype": {
                "type": "String"
              }
            },
            {
              "name": "value",
              "shortdesc": "The value.",
              "datatype": {
                "type": "String"
              }
            }
          ]
        },
        {
          "name": "extractLabel",
          "shortdesc": "Gets the label value associated with the specified key.",
          "parameters": [
            {
              "name": "key",
              "shortdesc": "The key.",
              "datatype": {
                "type": "String"
              }
            }
          ],
          "datatype": {
            "type": "String"
          }
        },
        {
          "name": "toSource",
          "shortdesc": "Generates a string which, if executed, will return the TableStyle.",
          "datatype": {
            "type": "String"
          }
        },
        {
          "name": "getElements",
          "shortdesc": "Resolves the object specifier, creating an array of object references.",
          "datatype": {
            "type": "TableStyle",
            "array": true
          }
        },
        {
          "name": "toSpecifier",
          "shortdesc": "Retrieves the object specifier.",
          "datatype": {
            "type": "String"
          }
        },
        {
          "name": "addEventListener",
          "shortdesc": "Adds an event listener.",
          "parameters": [
            {
              "name": "eventType",
              "shortdesc": "The event type.",
              "datatype": {
                "type": "String"
              }
            },
            {
              "name": "handler",
              "shortdesc": "The event handler. Can accept: File or JavaScript Function.",
              "datatype": {
                "type": "Mixed"
              }
            },
            {
              "name": "captures",
              "optional": true,
              "shortdesc": "This parameter is obsolete. &#40;Optional)",
              "datatype": {
                "type": "Boolean",
                "value": false
              }
            }
          ],
          "datatype": {
            "type": "EventListener"
          }
        },
        {
          "name": "removeEventListener",
          "shortdesc": "Removes the event listener.",
          "parameters": [
            {
              "name": "eventType",
              "shortdesc": "The registered event type.",
              "datatype": {
                "type": "String"
              }
            },
            {
              "name": "handler",
              "shortdesc": "The registered event handler. Can accept: File or JavaScript Function.",
              "datatype": {
                "type": "Mixed"
              }
            },
            {
              "name": "captures",
              "optional": true,
              "shortdesc": "This parameter is obsolete. &#40;Optional)",
              "datatype": {
                "type": "Boolean",
                "value": false
              }
            }
          ],
          "datatype": {
            "type": "Boolean"
          }
        }
      ]
    }
  ]
}