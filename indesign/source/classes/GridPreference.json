{
  "name": "GridPreference",
  "dynamic": true,
  "superclass": {
    "href": "#/Preference",
    "$t": "Preference"
  },
  "shortdesc": "Grid preferences.",
  "elements": [
    {
      "type": "instance",
      "property": [
        {
          "name": "isValid",
          "rwaccess": "readonly",
          "shortdesc": "Returns true if the object specifier resolves to valid objects.",
          "datatype": {
            "type": "bool"
          }
        },
        {
          "name": "parent",
          "rwaccess": "readonly",
          "shortdesc": "The parent of the GridPreference &amp;&#35;40;a Application or Document&#41;.",
          "datatype": {
            "type": "mixed"
          }
        },
        {
          "name": "events",
          "rwaccess": "readonly",
          "shortdesc": "A collection of events.",
          "datatype": {
            "type": "Events"
          }
        },
        {
          "name": "eventListeners",
          "rwaccess": "readonly",
          "shortdesc": "A collection of event listeners.",
          "datatype": {
            "type": "EventListeners"
          }
        },
        {
          "name": "documentGridShown",
          "shortdesc": "If true, displays the document grid.",
          "datatype": {
            "type": "bool"
          }
        },
        {
          "name": "documentGridSnapto",
          "shortdesc": "If true, an object snaps to the nearest grid line when the object is created, moved, or resized.",
          "datatype": {
            "type": "bool"
          }
        },
        {
          "name": "horizontalGridlineDivision",
          "shortdesc": "The amount of space between major horizontal lines in the document grid.",
          "datatype": {
            "type": "Measurement Unit &amp;&#35;40;Number or String&#41;=any",
            "min": 0.01,
            "max": 1000
          }
        },
        {
          "name": "verticalGridlineDivision",
          "shortdesc": "The amount of space between major vertical lines in the document grid.",
          "datatype": {
            "type": "Measurement Unit &amp;&#35;40;Number or String&#41;=any",
            "min": 0.01,
            "max": 1000
          }
        },
        {
          "name": "horizontalGridSubdivision",
          "shortdesc": "The number of rows into which to subdivide the space between horizontal document grid lines.",
          "datatype": {
            "type": "number",
            "min": 1,
            "max": 1000
          }
        },
        {
          "name": "verticalGridSubdivision",
          "shortdesc": "The number of columns into which to subdivide the space between vertical document grid lines.",
          "datatype": {
            "type": "number",
            "min": 1,
            "max": 1000
          }
        },
        {
          "name": "gridColor",
          "shortdesc": "The color of the document grid, specified either as an array of three doubles, each in the range 0 to 255, representing R, G, and B values, or as a UI color. Can return: Array of 3 Reals &amp;&#35;40;0 - 255&#41; or UIColors enumerator.",
          "datatype": {
            "type": "mixed"
          }
        },
        {
          "name": "gridsInBack",
          "shortdesc": "If true, places grids behind all other objects on the spread.",
          "datatype": {
            "type": "bool"
          }
        },
        {
          "name": "baselineGridShown",
          "shortdesc": "If true, displays the baseline grid.",
          "datatype": {
            "type": "bool"
          }
        },
        {
          "name": "baselineStart",
          "shortdesc": "The amount to offset the baseline grid from the zero point.",
          "datatype": {
            "type": "Measurement Unit &amp;&#35;40;Number or String&#41;=any",
            "min": 0,
            "max": 1000
          }
        },
        {
          "name": "baselineDivision",
          "shortdesc": "The amount of space between baseline grid lines.",
          "datatype": {
            "type": "Measurement Unit &amp;&#35;40;Number or String&#41;=any",
            "min": 1,
            "max": 8640
          }
        },
        {
          "name": "baselineViewThreshold",
          "shortdesc": "The magnification &amp;&#35;40;as a percentage&#41; less than which ruler guides do not appear. (Range: 5 to 4000)",
          "datatype": {
            "type": "number",
            "min": 5,
            "max": 4000
          }
        },
        {
          "name": "baselineColor",
          "shortdesc": "The color of the baseline grid, specified either as an array of three doubles, each in the range 0 to 255, representing R, G, and B values, or as a UI color. . Can return: Array of 3 Reals &amp;&#35;40;0 - 255&#41; or UIColors enumerator.",
          "datatype": {
            "type": "mixed"
          }
        },
        {
          "name": "baselineGridRelativeOption",
          "shortdesc": "The zero point for the baseline grid offset.",
          "datatype": {
            "type": "BaselineGridRelativeOption"
          }
        },
        {
          "name": "properties",
          "shortdesc": "A property that allows setting of several properties at the same time.",
          "datatype": {
            "type": "Object"
          }
        }
      ],
      "method": [
        {
          "name": "toSource",
          "shortdesc": "Generates a string which, if executed, will return the GridPreference.",
          "datatype": {
            "type": "string"
          }
        },
        {
          "name": "getElements",
          "shortdesc": "Resolves the object specifier, creating an array of object references.",
          "datatype": {
            "type": "GridPreference",
            "array": {}
          }
        },
        {
          "name": "toSpecifier",
          "shortdesc": "Retrieves the object specifier.",
          "datatype": {
            "type": "string"
          }
        },
        {
          "name": "addEventListener",
          "shortdesc": "Adds an event listener.",
          "parameters": {
            "parameter": [
              {
                "name": "eventType",
                "shortdesc": "The event type.",
                "datatype": {
                  "type": "string"
                }
              },
              {
                "name": "handler",
                "shortdesc": "The event handler. Can accept: File or JavaScript Function.",
                "datatype": {
                  "type": "mixed"
                }
              },
              {
                "name": "captures",
                "optional": true,
                "shortdesc": "This parameter is obsolete. &amp;&#35;40;Optional&#41;",
                "datatype": {
                  "type": "bool",
                  "value": false
                }
              }
            ]
          },
          "datatype": {
            "type": "EventListener"
          }
        },
        {
          "name": "removeEventListener",
          "shortdesc": "Removes the event listener.",
          "parameters": {
            "parameter": [
              {
                "name": "eventType",
                "shortdesc": "The registered event type.",
                "datatype": {
                  "type": "string"
                }
              },
              {
                "name": "handler",
                "shortdesc": "The registered event handler. Can accept: File or JavaScript Function.",
                "datatype": {
                  "type": "mixed"
                }
              },
              {
                "name": "captures",
                "optional": true,
                "shortdesc": "This parameter is obsolete. &amp;&#35;40;Optional&#41;",
                "datatype": {
                  "type": "bool",
                  "value": false
                }
              }
            ]
          },
          "datatype": {
            "type": "bool"
          }
        }
      ]
    }
  ]
}