{
  "name": "CjkGridPreference",
  "dynamic": true,
  "superclass": {
    "href": "#/Preference",
    "$t": "Preference"
  },
  "shortdesc": "Character grid preferences.",
  "elements": [
    {
      "type": "instance",
      "property": [
        {
          "name": "isValid",
          "rwaccess": "readonly",
          "shortdesc": "Returns true if the object specifier resolves to valid objects.",
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "parent",
          "rwaccess": "readonly",
          "shortdesc": "The parent of the CjkGridPreference &#40;a Application or Document).",
          "datatype": {
            "type": "Mixed"
          }
        },
        {
          "name": "events",
          "rwaccess": "readonly",
          "shortdesc": "A collection of events.",
          "datatype": {
            "type": "Events"
          }
        },
        {
          "name": "eventListeners",
          "rwaccess": "readonly",
          "shortdesc": "A collection of event listeners.",
          "datatype": {
            "type": "EventListeners"
          }
        },
        {
          "name": "showAllLayoutGrids",
          "shortdesc": "If true, displays the layout grids.",
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "showAllFrameGrids",
          "shortdesc": "If true, displays the frame &#40;story) grids.",
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "minimumScale",
          "shortdesc": "The view magnification &#40;as a percentage) less than which grids do not appear. (Range: 5 to 4000)",
          "datatype": {
            "type": "Number"
          }
        },
        {
          "name": "snapToLayoutGrid",
          "shortdesc": "If true, objects snap to the layout grid.",
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "layoutGridColorIndex",
          "shortdesc": "The layout grid color, specified either as an array of three doubles, each in the range 0 to 255 and representing R, G, and B values, or as a UI color. Can return: Array of 3 Reals &#40;0 - 255) or UIColors enumerator.",
          "datatype": {
            "type": "Mixed"
          }
        },
        {
          "name": "colorEveryNthCell",
          "shortdesc": "Applies the grid color to every nth cell, where n is the value of this property.",
          "datatype": {
            "type": "Number"
          }
        },
        {
          "name": "singleLineColorMode",
          "shortdesc": "If true, applies the grid color from the the edge of the line. If false, applies the grid color from the corner of the frame.",
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "icfMode",
          "shortdesc": "If true, uses ICF mode for grid cells. If false, uses virtual body mode.",
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "useCircularCells",
          "shortdesc": "If true, cell shape is circular. If false, cell shape is rectangular.",
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "showCharacterCount",
          "shortdesc": "If true, displays the character count for the frame.",
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "properties",
          "shortdesc": "A property that allows setting of several properties at the same time.",
          "datatype": {
            "type": "Object"
          }
        }
      ],
      "method": [
        {
          "name": "toSource",
          "shortdesc": "Generates a string which, if executed, will return the CjkGridPreference.",
          "datatype": {
            "type": "String"
          }
        },
        {
          "name": "getElements",
          "shortdesc": "Resolves the object specifier, creating an array of object references.",
          "datatype": {
            "type": "CjkGridPreference",
            "array": true
          }
        },
        {
          "name": "toSpecifier",
          "shortdesc": "Retrieves the object specifier.",
          "datatype": {
            "type": "String"
          }
        },
        {
          "name": "addEventListener",
          "shortdesc": "Adds an event listener.",
          "parameters": [
            {
              "name": "eventType",
              "shortdesc": "The event type.",
              "datatype": {
                "type": "String"
              }
            },
            {
              "name": "handler",
              "shortdesc": "The event handler. Can accept: File or JavaScript Function.",
              "datatype": {
                "type": "Mixed"
              }
            },
            {
              "name": "captures",
              "optional": true,
              "shortdesc": "This parameter is obsolete. &#40;Optional)",
              "datatype": {
                "type": "Boolean",
                "value": false
              }
            }
          ],
          "datatype": {
            "type": "EventListener"
          }
        },
        {
          "name": "removeEventListener",
          "shortdesc": "Removes the event listener.",
          "parameters": [
            {
              "name": "eventType",
              "shortdesc": "The registered event type.",
              "datatype": {
                "type": "String"
              }
            },
            {
              "name": "handler",
              "shortdesc": "The registered event handler. Can accept: File or JavaScript Function.",
              "datatype": {
                "type": "Mixed"
              }
            },
            {
              "name": "captures",
              "optional": true,
              "shortdesc": "This parameter is obsolete. &#40;Optional)",
              "datatype": {
                "type": "Boolean",
                "value": false
              }
            }
          ],
          "datatype": {
            "type": "Boolean"
          }
        }
      ]
    }
  ]
}