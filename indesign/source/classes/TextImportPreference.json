{
  "name": "TextImportPreference",
  "dynamic": true,
  "superclass": {
    "href": "#/Preference",
    "$t": "Preference"
  },
  "shortdesc": "Text import preferences.",
  "elements": [
    {
      "type": "instance",
      "property": [
        {
          "name": "isValid",
          "rwaccess": "readonly",
          "shortdesc": "Returns true if the object specifier resolves to valid objects.",
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "parent",
          "rwaccess": "readonly",
          "shortdesc": "The parent of the TextImportPreference &#40;a Application).",
          "datatype": {
            "type": "Application"
          }
        },
        {
          "name": "events",
          "rwaccess": "readonly",
          "shortdesc": "A collection of events.",
          "datatype": {
            "type": "Events"
          }
        },
        {
          "name": "eventListeners",
          "rwaccess": "readonly",
          "shortdesc": "A collection of event listeners.",
          "datatype": {
            "type": "EventListeners"
          }
        },
        {
          "name": "characterSet",
          "shortdesc": "The computer language character set used to create the text file.",
          "datatype": {
            "type": "TextImportCharacterSet"
          }
        },
        {
          "name": "platform",
          "shortdesc": "The platform used to create the imported text file.",
          "datatype": {
            "type": "ImportPlatform"
          }
        },
        {
          "name": "dictionary",
          "shortdesc": "The dictionary to use for the imported text.",
          "datatype": {
            "type": "String"
          }
        },
        {
          "name": "stripReturnsBetweenLines",
          "shortdesc": "If true, the import filter removes extra carriage returns at the ends of lines.",
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "stripReturnsBetweenParagraphs",
          "shortdesc": "If true, the import filter removes extra carriage returns between paragraphs.",
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "convertSpacesIntoTabs",
          "shortdesc": "If true, converts the specified number of spaces into a tab. For information on specifying the number of spaces, see spaces into tabs count.",
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "spacesIntoTabsCount",
          "shortdesc": "The number of spaces to convert to a tab. Note: Valid when convert spaces into tabs is true.",
          "datatype": {
            "type": "Number"
          }
        },
        {
          "name": "useTypographersQuotes",
          "shortdesc": "If true, convert straight quotes and apostrophes in the imported text to typographic quotation marks and apostrophes.",
          "datatype": {
            "type": "Boolean"
          }
        },
        {
          "name": "properties",
          "shortdesc": "A property that allows setting of several properties at the same time.",
          "datatype": {
            "type": "Object"
          }
        }
      ],
      "method": [
        {
          "name": "toSource",
          "shortdesc": "Generates a string which, if executed, will return the TextImportPreference.",
          "datatype": {
            "type": "String"
          }
        },
        {
          "name": "getElements",
          "shortdesc": "Resolves the object specifier, creating an array of object references.",
          "datatype": {
            "type": "TextImportPreference",
            "array": true
          }
        },
        {
          "name": "toSpecifier",
          "shortdesc": "Retrieves the object specifier.",
          "datatype": {
            "type": "String"
          }
        },
        {
          "name": "addEventListener",
          "shortdesc": "Adds an event listener.",
          "parameters": [
            {
              "name": "eventType",
              "shortdesc": "The event type.",
              "datatype": {
                "type": "String"
              }
            },
            {
              "name": "handler",
              "shortdesc": "The event handler. Can accept: File or JavaScript Function.",
              "datatype": {
                "type": "Mixed"
              }
            },
            {
              "name": "captures",
              "optional": true,
              "shortdesc": "This parameter is obsolete. &#40;Optional)",
              "datatype": {
                "type": "Boolean",
                "value": false
              }
            }
          ],
          "datatype": {
            "type": "EventListener"
          }
        },
        {
          "name": "removeEventListener",
          "shortdesc": "Removes the event listener.",
          "parameters": [
            {
              "name": "eventType",
              "shortdesc": "The registered event type.",
              "datatype": {
                "type": "String"
              }
            },
            {
              "name": "handler",
              "shortdesc": "The registered event handler. Can accept: File or JavaScript Function.",
              "datatype": {
                "type": "Mixed"
              }
            },
            {
              "name": "captures",
              "optional": true,
              "shortdesc": "This parameter is obsolete. &#40;Optional)",
              "datatype": {
                "type": "Boolean",
                "value": false
              }
            }
          ],
          "datatype": {
            "type": "Boolean"
          }
        }
      ]
    }
  ]
}