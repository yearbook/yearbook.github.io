{
  "name": "DocumentPreference",
  "dynamic": true,
  "superclass": {
    "href": "#/Preference",
    "$t": "Preference"
  },
  "shortdesc": "Document preferences.",
  "elements": [
    {
      "type": "instance",
      "property": [
        {
          "name": "isValid",
          "rwaccess": "readonly",
          "shortdesc": "Returns true if the object specifier resolves to valid objects.",
          "datatype": {
            "type": "bool"
          }
        },
        {
          "name": "parent",
          "rwaccess": "readonly",
          "shortdesc": "The parent of the DocumentPreference &amp;&#35;40;a Application or Document&#41;.",
          "datatype": {
            "type": "mixed"
          }
        },
        {
          "name": "events",
          "rwaccess": "readonly",
          "shortdesc": "A collection of events.",
          "datatype": {
            "type": "Events"
          }
        },
        {
          "name": "eventListeners",
          "rwaccess": "readonly",
          "shortdesc": "A collection of event listeners.",
          "datatype": {
            "type": "EventListeners"
          }
        },
        {
          "name": "pageHeight",
          "shortdesc": "The height of the page.",
          "datatype": {
            "type": "Measurement Unit &amp;&#35;40;Number or String&#41;=any"
          }
        },
        {
          "name": "pageWidth",
          "shortdesc": "The width of the page.",
          "datatype": {
            "type": "Measurement Unit &amp;&#35;40;Number or String&#41;=any"
          }
        },
        {
          "name": "pageOrientation",
          "shortdesc": "The page orientation.",
          "datatype": {
            "type": "PageOrientation"
          }
        },
        {
          "name": "columnGuideColor",
          "shortdesc": "The color of the column guides, specified either as an array of three doubles, each in the range 0 to 255 and representing R, G, and B values,, or as a UI color. Can return: Array of 3 Reals &amp;&#35;40;0 - 255&#41; or UIColors enumerator.",
          "datatype": {
            "type": "mixed"
          }
        },
        {
          "name": "marginGuideColor",
          "shortdesc": "The color of the margin guides, specified either as an array of three doubles, each in the range 0 to 255, representing R, G, and B values, or as a UI color. Can return: Array of 3 Reals &amp;&#35;40;0 - 255&#41; or UIColors enumerator.",
          "datatype": {
            "type": "mixed"
          }
        },
        {
          "name": "createPrimaryTextFrame",
          "shortdesc": "If true, the document A-master has primary text frames when a new document is created.",
          "datatype": {
            "type": "bool"
          }
        },
        {
          "name": "pagesPerDocument",
          "shortdesc": "The number of pages in the document. &amp;&#35;40;Range: 1 to 9999&#41;",
          "datatype": {
            "type": "number"
          }
        },
        {
          "name": "facingPages",
          "shortdesc": "If true, the document has facing pages.",
          "datatype": {
            "type": "bool"
          }
        },
        {
          "name": "documentBleedTopOffset",
          "shortdesc": "The amount to offset the top document bleed.",
          "datatype": {
            "type": "Measurement Unit &amp;&#35;40;Number or String&#41;=any"
          }
        },
        {
          "name": "documentBleedBottomOffset",
          "shortdesc": "The amount to offset the bottom document bleed. Note: To set the bleed bottom offset, document bleed uniform size must be false.",
          "datatype": {
            "type": "Measurement Unit &amp;&#35;40;Number or String&#41;=any"
          }
        },
        {
          "name": "documentBleedInsideOrLeftOffset",
          "shortdesc": "The amount to offset the inside or left document bleed. Note: To set the bleed inside or left offset, document bleed uniform size must be false.",
          "datatype": {
            "type": "Measurement Unit &amp;&#35;40;Number or String&#41;=any"
          }
        },
        {
          "name": "documentBleedOutsideOrRightOffset",
          "shortdesc": "The amount to offset the outside or right document bleed. Note: To set the bleed outside or right offset, document bleed uniform size must be false.",
          "datatype": {
            "type": "Measurement Unit &amp;&#35;40;Number or String&#41;=any"
          }
        },
        {
          "name": "documentBleedUniformSize",
          "shortdesc": "If true, uses the document bleed top offset value for bleed offset measurements on all sides of the document. The default setting is true.",
          "datatype": {
            "type": "bool"
          }
        },
        {
          "name": "slugTopOffset",
          "shortdesc": "The amount to offset the top slug.",
          "datatype": {
            "type": "Measurement Unit &amp;&#35;40;Number or String&#41;=any"
          }
        },
        {
          "name": "slugBottomOffset",
          "shortdesc": "The amount to offset the bottom slug. Note: To set the slug bottom offset, document slug uniform size must be false.",
          "datatype": {
            "type": "Measurement Unit &amp;&#35;40;Number or String&#41;=any"
          }
        },
        {
          "name": "slugInsideOrLeftOffset",
          "shortdesc": "The amount to offset the inside or left slug. Note: To set the slug inside or left offset, document slug uniform size must be false.",
          "datatype": {
            "type": "Measurement Unit &amp;&#35;40;Number or String&#41;=any"
          }
        },
        {
          "name": "slugRightOrOutsideOffset",
          "shortdesc": "The amount to offset the outside or right slug. Note: To set the slug right or outside offset, document slug uniform size must be false.",
          "datatype": {
            "type": "Measurement Unit &amp;&#35;40;Number or String&#41;=any"
          }
        },
        {
          "name": "documentSlugUniformSize",
          "shortdesc": "If true, uses the slug top offset value for slug measurements on all sides of the document. The default value is false.",
          "datatype": {
            "type": "bool"
          }
        },
        {
          "name": "preserveLayoutWhenShuffling",
          "shortdesc": "If true, preserves the layout of spreads that contained more than two pages when allow page shuffle was turned on. If false, changes multi-page spreads to two-page spreads if the spreads were created or changed since allow page shuffle was turned on.",
          "datatype": {
            "type": "bool"
          }
        },
        {
          "name": "allowPageShuffle",
          "shortdesc": "If true, guarantees that when pages are added to a spread it will contain a maximum of two pages. If false, allows pages to be added or moved into existing spreads. For override information, see preserve layout when shuffling.",
          "datatype": {
            "type": "bool"
          }
        },
        {
          "name": "overprintBlack",
          "shortdesc": "If true, overprints black when saving the document.",
          "datatype": {
            "type": "bool"
          }
        },
        {
          "name": "columnGuideLocked",
          "shortdesc": "If true, locks column guides.",
          "datatype": {
            "type": "bool"
          }
        },
        {
          "name": "startPageNumber",
          "shortdesc": "The starting page number for a document. This is the same as the starting page number for the first section of a document. Default value is 1.",
          "datatype": {
            "type": "number",
            "min": 1,
            "max": 999999
          }
        },
        {
          "name": "intent",
          "shortdesc": "The intent for a document.",
          "datatype": {
            "type": "DocumentIntentOptions"
          }
        },
        {
          "name": "pageBinding",
          "shortdesc": "The placement of the page binding.",
          "datatype": {
            "type": "PageBindingOptions"
          }
        },
        {
          "name": "columnDirection",
          "shortdesc": "The direction of text in the column.",
          "datatype": {
            "type": "HorizontalOrVertical"
          }
        },
        {
          "name": "pageSize",
          "shortdesc": "The size of the page.",
          "datatype": {
            "type": "string"
          }
        },
        {
          "name": "snippetImportUsesOriginalLocation",
          "shortdesc": "If true, causes UI-based snippet import to use original location for page items.",
          "datatype": {
            "type": "bool"
          }
        },
        {
          "name": "properties",
          "shortdesc": "A property that allows setting of several properties at the same time.",
          "datatype": {
            "type": "Object"
          }
        }
      ],
      "method": [
        {
          "name": "toSource",
          "shortdesc": "Generates a string which, if executed, will return the DocumentPreference.",
          "datatype": {
            "type": "string"
          }
        },
        {
          "name": "getElements",
          "shortdesc": "Resolves the object specifier, creating an array of object references.",
          "datatype": {
            "type": "DocumentPreference",
            "array": {}
          }
        },
        {
          "name": "toSpecifier",
          "shortdesc": "Retrieves the object specifier.",
          "datatype": {
            "type": "string"
          }
        },
        {
          "name": "addEventListener",
          "shortdesc": "Adds an event listener.",
          "parameters": {
            "parameter": [
              {
                "name": "eventType",
                "shortdesc": "The event type.",
                "datatype": {
                  "type": "string"
                }
              },
              {
                "name": "handler",
                "shortdesc": "The event handler. Can accept: File or JavaScript Function.",
                "datatype": {
                  "type": "mixed"
                }
              },
              {
                "name": "captures",
                "optional": true,
                "shortdesc": "This parameter is obsolete. &amp;&#35;40;Optional&#41;",
                "datatype": {
                  "type": "bool",
                  "value": false
                }
              }
            ]
          },
          "datatype": {
            "type": "EventListener"
          }
        },
        {
          "name": "removeEventListener",
          "shortdesc": "Removes the event listener.",
          "parameters": {
            "parameter": [
              {
                "name": "eventType",
                "shortdesc": "The registered event type.",
                "datatype": {
                  "type": "string"
                }
              },
              {
                "name": "handler",
                "shortdesc": "The registered event handler. Can accept: File or JavaScript Function.",
                "datatype": {
                  "type": "mixed"
                }
              },
              {
                "name": "captures",
                "optional": true,
                "shortdesc": "This parameter is obsolete. &amp;&#35;40;Optional&#41;",
                "datatype": {
                  "type": "bool",
                  "value": false
                }
              }
            ]
          },
          "datatype": {
            "type": "bool"
          }
        }
      ]
    }
  ]
}