{
  "name": "Link",
  "dynamic": true,
  "shortdesc": "A link to a placed file.",
  "elements": [
    {
      "type": "class",
      "property": [
        {
          "name": "AFTER_NEW",
          "rwaccess": "readonly",
          "shortdesc": "Dispatched after a Link is created. This event bubbles. This event is not cancelable.",
          "datatype": {
            "type": "string",
            "value": "afterNew"
          }
        },
        {
          "name": "BEFORE_DELETE",
          "rwaccess": "readonly",
          "shortdesc": "Dispatched before a Link is deleted. This event bubbles. This event is cancelable.",
          "datatype": {
            "type": "string",
            "value": "beforeDelete"
          }
        },
        {
          "name": "AFTER_DELETE",
          "rwaccess": "readonly",
          "shortdesc": "Dispatched after a Link is deleted. This event bubbles. This event is not cancelable.",
          "datatype": {
            "type": "string",
            "value": "afterDelete"
          }
        },
        {
          "name": "BEFORE_UPDATE",
          "rwaccess": "readonly",
          "shortdesc": "Dispatched before a Link is updated. This event bubbles. This event is cancelable.",
          "datatype": {
            "type": "string",
            "value": "beforeUpdate"
          }
        },
        {
          "name": "AFTER_UPDATE",
          "rwaccess": "readonly",
          "shortdesc": "Dispatched after a Link is updated. This event bubbles. This event is not cancelable.",
          "datatype": {
            "type": "string",
            "value": "afterUpdate"
          }
        },
        {
          "name": "BEFORE_EMBED",
          "rwaccess": "readonly",
          "shortdesc": "Dispatched before a Link is embedded. This event bubbles. This event is cancelable.",
          "datatype": {
            "type": "string",
            "value": "beforeEmbed"
          }
        },
        {
          "name": "AFTER_EMBED",
          "rwaccess": "readonly",
          "shortdesc": "Dispatched after a Link is embedded. This event bubbles. This event is not cancelable.",
          "datatype": {
            "type": "string",
            "value": "afterEmbed"
          }
        },
        {
          "name": "BEFORE_UNEMBED",
          "rwaccess": "readonly",
          "shortdesc": "Dispatched before a Link is unembedded. This event bubbles. This event is cancelable.",
          "datatype": {
            "type": "string",
            "value": "beforeUnembed"
          }
        },
        {
          "name": "AFTER_UNEMBED",
          "rwaccess": "readonly",
          "shortdesc": "Dispatched after a Link is unembedded. This event bubbles. This event is not cancelable.",
          "datatype": {
            "type": "string",
            "value": "afterUnembed"
          }
        },
        {
          "name": "BEFORE_MOVE",
          "rwaccess": "readonly",
          "shortdesc": "Dispatched before a Link is relocated from one object to another. This event bubbles. This event is cancelable.",
          "datatype": {
            "type": "string",
            "value": "beforeMove"
          }
        },
        {
          "name": "AFTER_MOVE",
          "rwaccess": "readonly",
          "shortdesc": "Dispatched after a Link is relocated from one object to another. This event bubbles. This event is not cancelable.",
          "datatype": {
            "type": "string",
            "value": "afterMove"
          }
        },
        {
          "name": "AFTER_ATTRIBUTE_CHANGED",
          "rwaccess": "readonly",
          "shortdesc": "Dispatched when the value of a property changes on this Link. This event bubbles. This event is not cancelable.",
          "datatype": {
            "type": "string",
            "value": "afterAttributeChanged"
          }
        }
      ]
    },
    {
      "type": "instance",
      "property": [
        {
          "name": "versionState",
          "rwaccess": "readonly",
          "shortdesc": "The Version Cue version state of the file.",
          "datatype": {
            "type": "VersionState"
          }
        },
        {
          "name": "editingState",
          "rwaccess": "readonly",
          "shortdesc": "The Version Cue editing state of the file.",
          "datatype": {
            "type": "EditingState"
          }
        },
        {
          "name": "linkXmp",
          "rwaccess": "readonly",
          "shortdesc": "XMP data for the link source file.",
          "datatype": {
            "type": "LinkMetadata"
          }
        },
        {
          "name": "index",
          "rwaccess": "readonly",
          "shortdesc": "The index of the link in the links collection.",
          "datatype": {
            "type": "number"
          }
        },
        {
          "name": "parent",
          "rwaccess": "readonly",
          "shortdesc": "The linked object. Can return: Story, Graphic, Movie or Sound.",
          "datatype": {
            "type": "mixed"
          }
        },
        {
          "name": "assetURL",
          "rwaccess": "readonly",
          "shortdesc": "The asset URL of the linked object.",
          "datatype": {
            "type": "string"
          }
        },
        {
          "name": "assetID",
          "rwaccess": "readonly",
          "shortdesc": "The asset ID of the linked object.",
          "datatype": {
            "type": "string"
          }
        },
        {
          "name": "edited",
          "rwaccess": "readonly",
          "shortdesc": "If true, indicates the linked object has been edited in the current document but the source file has not been updated.",
          "datatype": {
            "type": "bool"
          }
        },
        {
          "name": "name",
          "rwaccess": "readonly",
          "shortdesc": "The name of the Link.",
          "datatype": {
            "type": "string"
          }
        },
        {
          "name": "needed",
          "rwaccess": "readonly",
          "shortdesc": "If true, indicates a link to a full-resolution version of the source file is needed. If false, indicates the object is embedded.",
          "datatype": {
            "type": "bool"
          }
        },
        {
          "name": "status",
          "rwaccess": "readonly",
          "shortdesc": "The status of the link.",
          "datatype": {
            "type": "LinkStatus"
          }
        },
        {
          "name": "linkType",
          "rwaccess": "readonly",
          "shortdesc": "The file type of the linked object.",
          "datatype": {
            "type": "string"
          }
        },
        {
          "name": "date",
          "rwaccess": "readonly",
          "shortdesc": "The date and time the Link was created.",
          "datatype": {
            "type": "Date"
          }
        },
        {
          "name": "size",
          "rwaccess": "readonly",
          "shortdesc": "The size of the Link file.",
          "datatype": {
            "type": "number"
          }
        },
        {
          "name": "filePath",
          "rwaccess": "readonly",
          "shortdesc": "The file path &amp;&#35;40;colon delimited on the Mac OS&#41;. Can also accept: File.",
          "datatype": {
            "type": "string"
          }
        },
        {
          "name": "id",
          "rwaccess": "readonly",
          "shortdesc": "The unique ID of the Link.",
          "datatype": {
            "type": "number"
          }
        },
        {
          "name": "isValid",
          "rwaccess": "readonly",
          "shortdesc": "Returns true if the object specifier resolves to valid objects.",
          "datatype": {
            "type": "bool"
          }
        },
        {
          "name": "events",
          "rwaccess": "readonly",
          "shortdesc": "A collection of events.",
          "datatype": {
            "type": "Events"
          }
        },
        {
          "name": "eventListeners",
          "rwaccess": "readonly",
          "shortdesc": "A collection of event listeners.",
          "datatype": {
            "type": "EventListeners"
          }
        },
        {
          "name": "preferences",
          "rwaccess": "readonly",
          "shortdesc": "A collection of preferences objects.",
          "datatype": {
            "type": "Preferences"
          }
        },
        {
          "name": "links",
          "rwaccess": "readonly",
          "shortdesc": "A collection of links.",
          "datatype": {
            "type": "Links"
          }
        },
        {
          "name": "label",
          "shortdesc": "A property that can be set to any string.",
          "datatype": {
            "type": "string"
          }
        },
        {
          "name": "properties",
          "shortdesc": "A property that allows setting of several properties at the same time.",
          "datatype": {
            "type": "Object"
          }
        }
      ],
      "method": [
        {
          "name": "checkIn",
          "shortdesc": "Check in to Version Cue.",
          "parameters": {
            "parameter": [
              {
                "name": "versionComments",
                "shortdesc": "The comment for this version &amp;&#35;40;Optional&#41;",
                "datatype": {
                  "type": "string"
                }
              },
              {
                "name": "forceSave",
                "optional": true,
                "shortdesc": "Forcibly save a version &amp;&#35;40;Optional&#41;",
                "datatype": {
                  "type": "bool",
                  "value": false
                }
              }
            ]
          }
        },
        {
          "name": "relink",
          "shortdesc": "Points the link to a new source file.",
          "parameters": {
            "parameter": [
              {
                "name": "to",
                "shortdesc": "The full path name of the new source file. Can accept: File or String.",
                "datatype": {
                  "type": "mixed"
                }
              }
            ]
          }
        },
        {
          "name": "unlink",
          "shortdesc": "Embeds the source file in the document."
        },
        {
          "name": "update",
          "shortdesc": "Updates the link if the source file has been changed.",
          "datatype": {
            "type": "Link"
          }
        },
        {
          "name": "unembed",
          "shortdesc": "Unembeds the source file. If no folder is specified, creates a link to the original source file; if a folder is specified, copies the file to the folder and creates a link to the copied file.",
          "parameters": {
            "parameter": [
              {
                "name": "to",
                "shortdesc": "The folder to which to copy the unembedded file. &amp;&#35;40;Optional&#41;",
                "datatype": {
                  "type": "File"
                }
              },
              {
                "name": "versionComments",
                "shortdesc": "The comment for this version. &amp;&#35;40;Optional&#41;",
                "datatype": {
                  "type": "string"
                }
              },
              {
                "name": "forceSave",
                "optional": true,
                "shortdesc": "If true, forcibly saves a version. &amp;&#35;40;Optional&#41;",
                "datatype": {
                  "type": "bool",
                  "value": false
                }
              }
            ]
          }
        },
        {
          "name": "editOriginal",
          "shortdesc": "Opens the source file of the link in the default editor for the source file type."
        },
        {
          "name": "show",
          "shortdesc": "Selects the link."
        },
        {
          "name": "revealInSystem",
          "shortdesc": "Opens the file system to the folder that contains the source file of the link, and selects the file."
        },
        {
          "name": "revealInBridge",
          "shortdesc": "Opens Adobe Bridge and selects the source file of the link."
        },
        {
          "name": "copyLink",
          "shortdesc": "Copies the link file to the specified location.",
          "parameters": {
            "parameter": [
              {
                "name": "to",
                "shortdesc": "The file or folder to which to copy the file.",
                "datatype": {
                  "type": "File"
                }
              },
              {
                "name": "versionComments",
                "shortdesc": "The comment for this version. &amp;&#35;40;Optional&#41;",
                "datatype": {
                  "type": "string"
                }
              },
              {
                "name": "forceSave",
                "optional": true,
                "shortdesc": "If true, forcibly saves a version. &amp;&#35;40;Optional&#41;",
                "datatype": {
                  "type": "bool",
                  "value": false
                }
              }
            ]
          }
        },
        {
          "name": "goToSource",
          "shortdesc": "Opens the source file of the link in InDesign for SharedContent links."
        },
        {
          "name": "insertLabel",
          "shortdesc": "Sets the label to the value associated with the specified key.",
          "parameters": {
            "parameter": [
              {
                "name": "key",
                "shortdesc": "The key.",
                "datatype": {
                  "type": "string"
                }
              },
              {
                "name": "value",
                "shortdesc": "The value.",
                "datatype": {
                  "type": "string"
                }
              }
            ]
          }
        },
        {
          "name": "extractLabel",
          "shortdesc": "Gets the label value associated with the specified key.",
          "parameters": {
            "parameter": [
              {
                "name": "key",
                "shortdesc": "The key.",
                "datatype": {
                  "type": "string"
                }
              }
            ]
          },
          "datatype": {
            "type": "string"
          }
        },
        {
          "name": "toSource",
          "shortdesc": "Generates a string which, if executed, will return the Link.",
          "datatype": {
            "type": "string"
          }
        },
        {
          "name": "getElements",
          "shortdesc": "Resolves the object specifier, creating an array of object references.",
          "datatype": {
            "type": "Link",
            "array": {}
          }
        },
        {
          "name": "toSpecifier",
          "shortdesc": "Retrieves the object specifier.",
          "datatype": {
            "type": "string"
          }
        },
        {
          "name": "addEventListener",
          "shortdesc": "Adds an event listener.",
          "parameters": {
            "parameter": [
              {
                "name": "eventType",
                "shortdesc": "The event type.",
                "datatype": {
                  "type": "string"
                }
              },
              {
                "name": "handler",
                "shortdesc": "The event handler. Can accept: File or JavaScript Function.",
                "datatype": {
                  "type": "mixed"
                }
              },
              {
                "name": "captures",
                "optional": true,
                "shortdesc": "This parameter is obsolete. &amp;&#35;40;Optional&#41;",
                "datatype": {
                  "type": "bool",
                  "value": false
                }
              }
            ]
          },
          "datatype": {
            "type": "EventListener"
          }
        },
        {
          "name": "removeEventListener",
          "shortdesc": "Removes the event listener.",
          "parameters": {
            "parameter": [
              {
                "name": "eventType",
                "shortdesc": "The registered event type.",
                "datatype": {
                  "type": "string"
                }
              },
              {
                "name": "handler",
                "shortdesc": "The registered event handler. Can accept: File or JavaScript Function.",
                "datatype": {
                  "type": "mixed"
                }
              },
              {
                "name": "captures",
                "optional": true,
                "shortdesc": "This parameter is obsolete. &amp;&#35;40;Optional&#41;",
                "datatype": {
                  "type": "bool",
                  "value": false
                }
              }
            ]
          },
          "datatype": {
            "type": "bool"
          }
        }
      ]
    }
  ]
}