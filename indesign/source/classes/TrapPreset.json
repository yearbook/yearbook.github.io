{
  "name": "TrapPreset",
  "dynamic": true,
  "shortdesc": "A trap preset.",
  "elements": [
    {
      "type": "instance",
      "property": [
        {
          "name": "id",
          "rwaccess": "readonly",
          "shortdesc": "The unique ID of the TrapPreset.",
          "datatype": {
            "type": "number"
          }
        },
        {
          "name": "isValid",
          "rwaccess": "readonly",
          "shortdesc": "Returns true if the object specifier resolves to valid objects.",
          "datatype": {
            "type": "bool"
          }
        },
        {
          "name": "parent",
          "rwaccess": "readonly",
          "shortdesc": "The parent of the TrapPreset &amp;&#35;40;a Application or Document&#41;.",
          "datatype": {
            "type": "mixed"
          }
        },
        {
          "name": "index",
          "rwaccess": "readonly",
          "shortdesc": "The index of the TrapPreset within its containing object.",
          "datatype": {
            "type": "number"
          }
        },
        {
          "name": "events",
          "rwaccess": "readonly",
          "shortdesc": "A collection of events.",
          "datatype": {
            "type": "Events"
          }
        },
        {
          "name": "eventListeners",
          "rwaccess": "readonly",
          "shortdesc": "A collection of event listeners.",
          "datatype": {
            "type": "EventListeners"
          }
        },
        {
          "name": "name",
          "shortdesc": "The name of the TrapPreset.",
          "datatype": {
            "type": "string"
          }
        },
        {
          "name": "defaultTrapWidth",
          "shortdesc": "The default width for trapping all colors except those involving solid black. &amp;&#35;40;Range depends on unit. For points: 0.0 to 8.0; picas: 0p0 to 0p8; inches: 0 to 0.1111; mm: 0 to 2.822; cm: 0 to .2822; ciceros: 0c0 to 0c7.507&#41;",
          "datatype": {
            "type": "Measurement Unit &amp;&#35;40;Number or String&#41;=any",
            "min": 0,
            "max": 8
          }
        },
        {
          "name": "blackWidth",
          "shortdesc": "The black width. &amp;&#35;40;Range depends on unit. For points: 0.0 to 8.0; picas: 0p0 to 0p8; inches: 0 to 0.1111; mm: 0 to 2.822; cm: 0 to .2822; ciceros: 0c0 to 0c7.507&#41;",
          "datatype": {
            "type": "Measurement Unit &amp;&#35;40;Number or String&#41;=any",
            "min": 0,
            "max": 8
          }
        },
        {
          "name": "trapJoin",
          "shortdesc": "The join type of the trap preset.",
          "datatype": {
            "type": "EndJoin"
          }
        },
        {
          "name": "trapEnd",
          "shortdesc": "The shape to use at the intersection of three-way traps.",
          "datatype": {
            "type": "TrapEndTypes"
          }
        },
        {
          "name": "objectsToImages",
          "shortdesc": "If true, ensures that vector objects overlap bitmap images.",
          "datatype": {
            "type": "bool"
          }
        },
        {
          "name": "imagesToImages",
          "shortdesc": "If true, turns on trapping along the boundary of overlapping or abutting bitmap images.",
          "datatype": {
            "type": "bool"
          }
        },
        {
          "name": "internalImages",
          "shortdesc": "If true, turns on trapping among colors within individual bitmap images.",
          "datatype": {
            "type": "bool"
          }
        },
        {
          "name": "oneBitImages",
          "shortdesc": "If true, ensures that one-bit images trap to abutting objects.",
          "datatype": {
            "type": "bool"
          }
        },
        {
          "name": "imagePlacement",
          "shortdesc": "The trap placement between vector objects and bitmap images.",
          "datatype": {
            "type": "TrapImagePlacementTypes"
          }
        },
        {
          "name": "stepThreshold",
          "shortdesc": "The amount &amp;&#35;40;as a percentage&#41; that components of abutting colors must vary before a trap is created. (Range: 1 to 100)",
          "datatype": {
            "type": "number",
            "min": 1,
            "max": 100
          }
        },
        {
          "name": "blackColorThreshold",
          "shortdesc": "The minimum amount &amp;&#35;40;as a percentage&#41; of black ink required before the black width setting is applied. (Range: 0 to 100)",
          "datatype": {
            "type": "number",
            "min": 0,
            "max": 100
          }
        },
        {
          "name": "blackDensity",
          "shortdesc": "The neutral density value at or above which an ink is considered black. &amp;&#35;40;Range: .001 to 10&#41;",
          "datatype": {
            "type": "number",
            "min": 0,
            "max": 10
          }
        },
        {
          "name": "slidingTrapThreshold",
          "shortdesc": "The difference &amp;&#35;40;as a percentage&#41; between the neutral densities of abutting colors at which the trap is moved from the darker side of a color edge toward the centerline. (Range: 0 to 100)",
          "datatype": {
            "type": "number",
            "min": 0,
            "max": 100
          }
        },
        {
          "name": "colorReduction",
          "shortdesc": "The degree &amp;&#35;40;as a percentage&#41; to which components from abutting colors are used to reduce the trap color. (Range: 0 to 100) Note: 0% makes a trap whose neutral density is equal to the neutral density of the darker color.",
          "datatype": {
            "type": "number",
            "min": 0,
            "max": 100
          }
        },
        {
          "name": "label",
          "shortdesc": "A property that can be set to any string.",
          "datatype": {
            "type": "string"
          }
        },
        {
          "name": "properties",
          "shortdesc": "A property that allows setting of several properties at the same time.",
          "datatype": {
            "type": "Object"
          }
        }
      ],
      "method": [
        {
          "name": "duplicate",
          "shortdesc": "Duplicates the TrapPreset.",
          "datatype": {
            "type": "TrapPreset"
          }
        },
        {
          "name": "remove",
          "shortdesc": "Deletes the trap preset.",
          "parameters": {
            "parameter": [
              {
                "name": "replacingWith",
                "shortdesc": "The trap preset to apply in place of the deleted preset.",
                "datatype": {
                  "type": "TrapPreset"
                }
              }
            ]
          }
        },
        {
          "name": "insertLabel",
          "shortdesc": "Sets the label to the value associated with the specified key.",
          "parameters": {
            "parameter": [
              {
                "name": "key",
                "shortdesc": "The key.",
                "datatype": {
                  "type": "string"
                }
              },
              {
                "name": "value",
                "shortdesc": "The value.",
                "datatype": {
                  "type": "string"
                }
              }
            ]
          }
        },
        {
          "name": "extractLabel",
          "shortdesc": "Gets the label value associated with the specified key.",
          "parameters": {
            "parameter": [
              {
                "name": "key",
                "shortdesc": "The key.",
                "datatype": {
                  "type": "string"
                }
              }
            ]
          },
          "datatype": {
            "type": "string"
          }
        },
        {
          "name": "toSource",
          "shortdesc": "Generates a string which, if executed, will return the TrapPreset.",
          "datatype": {
            "type": "string"
          }
        },
        {
          "name": "getElements",
          "shortdesc": "Resolves the object specifier, creating an array of object references.",
          "datatype": {
            "type": "TrapPreset",
            "array": {}
          }
        },
        {
          "name": "toSpecifier",
          "shortdesc": "Retrieves the object specifier.",
          "datatype": {
            "type": "string"
          }
        },
        {
          "name": "addEventListener",
          "shortdesc": "Adds an event listener.",
          "parameters": {
            "parameter": [
              {
                "name": "eventType",
                "shortdesc": "The event type.",
                "datatype": {
                  "type": "string"
                }
              },
              {
                "name": "handler",
                "shortdesc": "The event handler. Can accept: File or JavaScript Function.",
                "datatype": {
                  "type": "mixed"
                }
              },
              {
                "name": "captures",
                "optional": true,
                "shortdesc": "This parameter is obsolete. &amp;&#35;40;Optional&#41;",
                "datatype": {
                  "type": "bool",
                  "value": false
                }
              }
            ]
          },
          "datatype": {
            "type": "EventListener"
          }
        },
        {
          "name": "removeEventListener",
          "shortdesc": "Removes the event listener.",
          "parameters": {
            "parameter": [
              {
                "name": "eventType",
                "shortdesc": "The registered event type.",
                "datatype": {
                  "type": "string"
                }
              },
              {
                "name": "handler",
                "shortdesc": "The registered event handler. Can accept: File or JavaScript Function.",
                "datatype": {
                  "type": "mixed"
                }
              },
              {
                "name": "captures",
                "optional": true,
                "shortdesc": "This parameter is obsolete. &amp;&#35;40;Optional&#41;",
                "datatype": {
                  "type": "bool",
                  "value": false
                }
              }
            ]
          },
          "datatype": {
            "type": "bool"
          }
        }
      ]
    }
  ]
}