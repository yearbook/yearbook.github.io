{
  "name": "BorderPanel",
  "dynamic": true,
  "superclass": {
    "href": "#/Widget",
    "$t": "Widget"
  },
  "shortdesc": "A bordered panel on a dialog that can contain any type and number of controls.",
  "elements": [
    {
      "type": "instance",
      "property": [
        {
          "name": "id",
          "rwaccess": "readonly",
          "shortdesc": "The unique ID of the BorderPanel.",
          "datatype": {
            "type": "number"
          }
        },
        {
          "name": "isValid",
          "rwaccess": "readonly",
          "shortdesc": "Returns true if the object specifier resolves to valid objects.",
          "datatype": {
            "type": "bool"
          }
        },
        {
          "name": "parent",
          "rwaccess": "readonly",
          "shortdesc": "The parent of the BorderPanel &amp;&#35;40;a DialogColumn, DialogRow, EnablingGroup or BorderPanel&#41;.",
          "datatype": {
            "type": "mixed"
          }
        },
        {
          "name": "index",
          "rwaccess": "readonly",
          "shortdesc": "The index of the BorderPanel within its containing object.",
          "datatype": {
            "type": "number"
          }
        },
        {
          "name": "events",
          "rwaccess": "readonly",
          "shortdesc": "A collection of events.",
          "datatype": {
            "type": "Events"
          }
        },
        {
          "name": "eventListeners",
          "rwaccess": "readonly",
          "shortdesc": "A collection of event listeners.",
          "datatype": {
            "type": "EventListeners"
          }
        },
        {
          "name": "dialogColumns",
          "rwaccess": "readonly",
          "shortdesc": "A collection of dialog columns.",
          "datatype": {
            "type": "DialogColumns"
          }
        },
        {
          "name": "widgets",
          "rwaccess": "readonly",
          "shortdesc": "A collection of widgets.",
          "datatype": {
            "type": "Widgets"
          }
        },
        {
          "name": "textEditboxes",
          "rwaccess": "readonly",
          "shortdesc": "A collection of text editboxes.",
          "datatype": {
            "type": "TextEditboxes"
          }
        },
        {
          "name": "integerEditboxes",
          "rwaccess": "readonly",
          "shortdesc": "A collection of integer editboxes.",
          "datatype": {
            "type": "IntegerEditboxes"
          }
        },
        {
          "name": "measurementEditboxes",
          "rwaccess": "readonly",
          "shortdesc": "A collection of measurement editboxes.",
          "datatype": {
            "type": "MeasurementEditboxes"
          }
        },
        {
          "name": "realEditboxes",
          "rwaccess": "readonly",
          "shortdesc": "A collection of real number editboxes.",
          "datatype": {
            "type": "RealEditboxes"
          }
        },
        {
          "name": "angleEditboxes",
          "rwaccess": "readonly",
          "shortdesc": "A collection of angle editboxes.",
          "datatype": {
            "type": "AngleEditboxes"
          }
        },
        {
          "name": "percentEditboxes",
          "rwaccess": "readonly",
          "shortdesc": "A collection of percent editboxes.",
          "datatype": {
            "type": "PercentEditboxes"
          }
        },
        {
          "name": "integerComboboxes",
          "rwaccess": "readonly",
          "shortdesc": "A collection of integer comboboxes.",
          "datatype": {
            "type": "IntegerComboboxes"
          }
        },
        {
          "name": "measurementComboboxes",
          "rwaccess": "readonly",
          "shortdesc": "A collection of measurement comboboxes.",
          "datatype": {
            "type": "MeasurementComboboxes"
          }
        },
        {
          "name": "realComboboxes",
          "rwaccess": "readonly",
          "shortdesc": "A collection of real number comboboxes.",
          "datatype": {
            "type": "RealComboboxes"
          }
        },
        {
          "name": "angleComboboxes",
          "rwaccess": "readonly",
          "shortdesc": "A collection of angle comboboxes.",
          "datatype": {
            "type": "AngleComboboxes"
          }
        },
        {
          "name": "percentComboboxes",
          "rwaccess": "readonly",
          "shortdesc": "A collection of percent comboboxes.",
          "datatype": {
            "type": "PercentComboboxes"
          }
        },
        {
          "name": "checkboxControls",
          "rwaccess": "readonly",
          "shortdesc": "A collection of checkbox controls.",
          "datatype": {
            "type": "CheckboxControls"
          }
        },
        {
          "name": "staticTexts",
          "rwaccess": "readonly",
          "shortdesc": "A collection of static text objects.",
          "datatype": {
            "type": "StaticTexts"
          }
        },
        {
          "name": "dropdowns",
          "rwaccess": "readonly",
          "shortdesc": "A collection of dropdowns.",
          "datatype": {
            "type": "Dropdowns"
          }
        },
        {
          "name": "borderPanels",
          "rwaccess": "readonly",
          "shortdesc": "A collection of border panels.",
          "datatype": {
            "type": "BorderPanels"
          }
        },
        {
          "name": "enablingGroups",
          "rwaccess": "readonly",
          "shortdesc": "A collection of enabling groups.",
          "datatype": {
            "type": "EnablingGroups"
          }
        },
        {
          "name": "radiobuttonGroups",
          "rwaccess": "readonly",
          "shortdesc": "A collection of radiobutton groups.",
          "datatype": {
            "type": "RadiobuttonGroups"
          }
        },
        {
          "name": "minWidth",
          "shortdesc": "The width of the control. For an editbox or combobox, specifies the minimum width of the box.",
          "datatype": {
            "type": "number"
          }
        },
        {
          "name": "properties",
          "shortdesc": "A property that allows setting of several properties at the same time.",
          "datatype": {
            "type": "Object"
          }
        }
      ],
      "method": [
        {
          "name": "toSource",
          "shortdesc": "Generates a string which, if executed, will return the BorderPanel.",
          "datatype": {
            "type": "string"
          }
        },
        {
          "name": "getElements",
          "shortdesc": "Resolves the object specifier, creating an array of object references.",
          "datatype": {
            "type": "BorderPanel",
            "array": {}
          }
        },
        {
          "name": "toSpecifier",
          "shortdesc": "Retrieves the object specifier.",
          "datatype": {
            "type": "string"
          }
        },
        {
          "name": "addEventListener",
          "shortdesc": "Adds an event listener.",
          "parameters": {
            "parameter": [
              {
                "name": "eventType",
                "shortdesc": "The event type.",
                "datatype": {
                  "type": "string"
                }
              },
              {
                "name": "handler",
                "shortdesc": "The event handler. Can accept: File or JavaScript Function.",
                "datatype": {
                  "type": "mixed"
                }
              },
              {
                "name": "captures",
                "optional": true,
                "shortdesc": "This parameter is obsolete. &amp;&#35;40;Optional&#41;",
                "datatype": {
                  "type": "bool",
                  "value": false
                }
              }
            ]
          },
          "datatype": {
            "type": "EventListener"
          }
        },
        {
          "name": "removeEventListener",
          "shortdesc": "Removes the event listener.",
          "parameters": {
            "parameter": [
              {
                "name": "eventType",
                "shortdesc": "The registered event type.",
                "datatype": {
                  "type": "string"
                }
              },
              {
                "name": "handler",
                "shortdesc": "The registered event handler. Can accept: File or JavaScript Function.",
                "datatype": {
                  "type": "mixed"
                }
              },
              {
                "name": "captures",
                "optional": true,
                "shortdesc": "This parameter is obsolete. &amp;&#35;40;Optional&#41;",
                "datatype": {
                  "type": "bool",
                  "value": false
                }
              }
            ]
          },
          "datatype": {
            "type": "bool"
          }
        }
      ]
    }
  ]
}